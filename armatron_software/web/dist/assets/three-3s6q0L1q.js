import{r as Be,a as _x,g as vx}from"./vendor-DtzrXAz5.js";var X0={exports:{}},ru={};/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var yx=Be,xx=Symbol.for("react.element"),Sx=Symbol.for("react.fragment"),Mx=Object.prototype.hasOwnProperty,Ex=yx.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,wx={key:!0,ref:!0,__self:!0,__source:!0};function Y0(r,e,t){var n,i={},s=null,l=null;t!==void 0&&(s=""+t),e.key!==void 0&&(s=""+e.key),e.ref!==void 0&&(l=e.ref);for(n in e)Mx.call(e,n)&&!wx.hasOwnProperty(n)&&(i[n]=e[n]);if(r&&r.defaultProps)for(n in e=r.defaultProps,e)i[n]===void 0&&(i[n]=e[n]);return{$$typeof:xx,type:r,key:s,ref:l,props:i,_owner:Ex.current}}ru.Fragment=Sx;ru.jsx=Y0;ru.jsxs=Y0;X0.exports=ru;var xi=X0.exports,Zm={},jm=_x;Zm.createRoot=jm.createRoot,Zm.hydrateRoot=jm.hydrateRoot;function va(){return va=Object.assign?Object.assign.bind():function(r){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var n in t)({}).hasOwnProperty.call(t,n)&&(r[n]=t[n])}return r},va.apply(null,arguments)}/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const ka="160",rs={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},ss={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},q0=0,Df=1,Z0=2,Tx=3,j0=0,su=1,fa=2,yi=3,or=0,Rn=1,zi=2,Ax=2,sr=0,ds=1,Nf=2,Uf=3,Of=4,J0=5,br=100,K0=101,Q0=102,Ff=103,zf=104,$0=200,e_=201,t_=202,n_=203,Kc=204,Qc=205,i_=206,r_=207,s_=208,o_=209,a_=210,l_=211,c_=212,u_=213,h_=214,f_=0,d_=1,p_=2,ya=3,m_=4,g_=5,__=6,v_=7,Ha=0,y_=1,x_=2,Bi=0,S_=1,M_=2,E_=3,Td=4,w_=5,T_=6,Bf="attached",A_="detached",ou=300,ar=301,Ir=302,xa=303,Sa=304,bo=306,Ma=1e3,Cn=1001,Ea=1002,Qt=1003,$c=1004,bx=1004,da=1005,Cx=1005,$t=1006,Ad=1007,Rx=1007,Dr=1008,Px=1008,ki=1009,b_=1010,C_=1011,au=1012,bd=1013,ir=1014,Mi=1015,So=1016,Cd=1017,Rd=1018,Cr=1020,R_=1021,Fn=1023,P_=1024,L_=1025,Rr=1026,vs=1027,I_=1028,Pd=1029,D_=1030,Ld=1031,Id=1033,Gc=33776,Wc=33777,Xc=33778,Yc=33779,kf=35840,Hf=35841,Vf=35842,Gf=35843,Dd=36196,Wf=37492,Xf=37496,Yf=37808,qf=37809,Zf=37810,jf=37811,Jf=37812,Kf=37813,Qf=37814,$f=37815,ed=37816,td=37817,nd=37818,id=37819,rd=37820,sd=37821,qc=36492,od=36494,ad=36495,N_=36283,ld=36284,cd=36285,ud=36286,U_=2200,O_=2201,F_=2202,wa=2300,Ta=2301,Zc=2302,cs=2400,us=2401,Aa=2402,lu=2500,Nd=2501,Lx=0,Ix=1,Dx=2,Ud=3e3,Pr=3001,z_=3200,B_=3201,Ur=0,k_=1,ei="",an="srgb",Vi="srgb-linear",cu="display-p3",Va="display-p3-linear",ba="linear",Ft="srgb",Ca="rec709",Ra="p3",Nx=0,os=7680,Ux=7681,Ox=7682,Fx=7683,zx=34055,Bx=34056,kx=5386,Hx=512,Vx=513,Gx=514,Wx=515,Xx=516,Yx=517,qx=518,hd=519,H_=512,V_=513,G_=514,Od=515,W_=516,X_=517,Y_=518,q_=519,Pa=35044,Zx=35048,jx=35040,Jx=35045,Kx=35049,Qx=35041,$x=35046,eS=35050,tS=35042,nS="100",fd="300 es",eu=1035,Ei=2e3,Mo=2001;let cr=class{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,l=i.length;s<l;s++)i[s].call(this,e);e.target=null}}};const Tn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Jm=1234567;const ps=Math.PI/180,Eo=180/Math.PI;function ti(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Tn[r&255]+Tn[r>>8&255]+Tn[r>>16&255]+Tn[r>>24&255]+"-"+Tn[e&255]+Tn[e>>8&255]+"-"+Tn[e>>16&15|64]+Tn[e>>24&255]+"-"+Tn[t&63|128]+Tn[t>>8&255]+"-"+Tn[t>>16&255]+Tn[t>>24&255]+Tn[n&255]+Tn[n>>8&255]+Tn[n>>16&255]+Tn[n>>24&255]).toLowerCase()}function Zt(r,e,t){return Math.max(e,Math.min(t,r))}function Fd(r,e){return(r%e+e)%e}function iS(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function rS(r,e,t){return r!==e?(t-r)/(e-r):0}function pa(r,e,t){return(1-t)*r+t*e}function sS(r,e,t,n){return pa(r,e,1-Math.exp(-t*n))}function oS(r,e=1){return e-Math.abs(Fd(r,e*2)-e)}function aS(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function lS(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function cS(r,e){return r+Math.floor(Math.random()*(e-r+1))}function uS(r,e){return r+Math.random()*(e-r)}function hS(r){return r*(.5-Math.random())}function fS(r){r!==void 0&&(Jm=r);let e=Jm+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function dS(r){return r*ps}function pS(r){return r*Eo}function dd(r){return(r&r-1)===0&&r!==0}function mS(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function tu(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function gS(r,e,t,n,i){const s=Math.cos,l=Math.sin,c=s(t/2),u=l(t/2),h=s((e+n)/2),f=l((e+n)/2),p=s((e-n)/2),m=l((e-n)/2),g=s((n-e)/2),y=l((n-e)/2);switch(i){case"XYX":r.set(c*f,u*p,u*m,c*h);break;case"YZY":r.set(u*m,c*f,u*p,c*h);break;case"ZXZ":r.set(u*p,u*m,c*f,c*h);break;case"XZX":r.set(c*f,u*y,u*g,c*h);break;case"YXY":r.set(u*g,c*f,u*y,c*h);break;case"ZYZ":r.set(u*y,u*g,c*f,c*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Xn(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function _t(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const Z_={DEG2RAD:ps,RAD2DEG:Eo,generateUUID:ti,clamp:Zt,euclideanModulo:Fd,mapLinear:iS,inverseLerp:rS,lerp:pa,damp:sS,pingpong:oS,smoothstep:aS,smootherstep:lS,randInt:cS,randFloat:uS,randFloatSpread:hS,seededRandom:fS,degToRad:dS,radToDeg:pS,isPowerOfTwo:dd,ceilPowerOfTwo:mS,floorPowerOfTwo:tu,setQuaternionFromProperEuler:gS,normalize:_t,denormalize:Xn};class he{constructor(e=0,t=0){he.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Zt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,l=this.y-e.y;return this.x=s*n-l*i+e.x,this.y=s*i+l*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class yt{constructor(e,t,n,i,s,l,c,u,h){yt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,l,c,u,h)}set(e,t,n,i,s,l,c,u,h){const f=this.elements;return f[0]=e,f[1]=i,f[2]=c,f[3]=t,f[4]=s,f[5]=u,f[6]=n,f[7]=l,f[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,l=n[0],c=n[3],u=n[6],h=n[1],f=n[4],p=n[7],m=n[2],g=n[5],y=n[8],M=i[0],x=i[3],v=i[6],w=i[1],E=i[4],A=i[7],L=i[2],C=i[5],I=i[8];return s[0]=l*M+c*w+u*L,s[3]=l*x+c*E+u*C,s[6]=l*v+c*A+u*I,s[1]=h*M+f*w+p*L,s[4]=h*x+f*E+p*C,s[7]=h*v+f*A+p*I,s[2]=m*M+g*w+y*L,s[5]=m*x+g*E+y*C,s[8]=m*v+g*A+y*I,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],f=e[8];return t*l*f-t*c*h-n*s*f+n*c*u+i*s*h-i*l*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],f=e[8],p=f*l-c*h,m=c*u-f*s,g=h*s-l*u,y=t*p+n*m+i*g;if(y===0)return this.set(0,0,0,0,0,0,0,0,0);const M=1/y;return e[0]=p*M,e[1]=(i*h-f*n)*M,e[2]=(c*n-i*l)*M,e[3]=m*M,e[4]=(f*t-i*u)*M,e[5]=(i*s-c*t)*M,e[6]=g*M,e[7]=(n*u-h*t)*M,e[8]=(l*t-n*s)*M,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,l,c){const u=Math.cos(s),h=Math.sin(s);return this.set(n*u,n*h,-n*(u*l+h*c)+l+e,-i*h,i*u,-i*(-h*l+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(Bh.makeScale(e,t)),this}rotate(e){return this.premultiply(Bh.makeRotation(-e)),this}translate(e,t){return this.premultiply(Bh.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Bh=new yt;function j_(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}const _S={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function po(r,e){return new _S[r](e)}function La(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function J_(){const r=La("canvas");return r.style.display="block",r}const Km={};function ma(r){r in Km||(Km[r]=!0,console.warn(r))}const Qm=new yt().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),$m=new yt().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),Zl={[Vi]:{transfer:ba,primaries:Ca,toReference:r=>r,fromReference:r=>r},[an]:{transfer:Ft,primaries:Ca,toReference:r=>r.convertSRGBToLinear(),fromReference:r=>r.convertLinearToSRGB()},[Va]:{transfer:ba,primaries:Ra,toReference:r=>r.applyMatrix3($m),fromReference:r=>r.applyMatrix3(Qm)},[cu]:{transfer:Ft,primaries:Ra,toReference:r=>r.convertSRGBToLinear().applyMatrix3($m),fromReference:r=>r.applyMatrix3(Qm).convertLinearToSRGB()}},vS=new Set([Vi,Va]),It={enabled:!0,_workingColorSpace:Vi,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(r){if(!vS.has(r))throw new Error(`Unsupported working color space, "${r}".`);this._workingColorSpace=r},convert:function(r,e,t){if(this.enabled===!1||e===t||!e||!t)return r;const n=Zl[e].toReference,i=Zl[t].fromReference;return i(n(r))},fromWorkingColorSpace:function(r,e){return this.convert(r,this._workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this._workingColorSpace)},getPrimaries:function(r){return Zl[r].primaries},getTransfer:function(r){return r===ei?ba:Zl[r].transfer}};function xo(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function kh(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let Vs;class zd{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Vs===void 0&&(Vs=La("canvas")),Vs.width=e.width,Vs.height=e.height;const n=Vs.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Vs}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=La("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let l=0;l<s.length;l++)s[l]=xo(s[l]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(xo(t[n]/255)*255):t[n]=xo(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let yS=0;class hs{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:yS++}),this.uuid=ti(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let l=0,c=i.length;l<c;l++)i[l].isDataTexture?s.push(Hh(i[l].image)):s.push(Hh(i[l]))}else s=Hh(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function Hh(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?zd.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let xS=0;class tn extends cr{constructor(e=tn.DEFAULT_IMAGE,t=tn.DEFAULT_MAPPING,n=Cn,i=Cn,s=$t,l=Dr,c=Fn,u=ki,h=tn.DEFAULT_ANISOTROPY,f=ei){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:xS++}),this.uuid=ti(),this.name="",this.source=new hs(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=l,this.anisotropy=h,this.format=c,this.internalFormat=null,this.type=u,this.offset=new he(0,0),this.repeat=new he(1,1),this.center=new he(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new yt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof f=="string"?this.colorSpace=f:(ma("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=f===Pr?an:ei),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==ou)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Ma:e.x=e.x-Math.floor(e.x);break;case Cn:e.x=e.x<0?0:1;break;case Ea:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Ma:e.y=e.y-Math.floor(e.y);break;case Cn:e.y=e.y<0?0:1;break;case Ea:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return ma("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===an?Pr:Ud}set encoding(e){ma("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===Pr?an:ei}}tn.DEFAULT_IMAGE=null;tn.DEFAULT_MAPPING=ou;tn.DEFAULT_ANISOTROPY=1;class Dt{constructor(e=0,t=0,n=0,i=1){Dt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,l=e.elements;return this.x=l[0]*t+l[4]*n+l[8]*i+l[12]*s,this.y=l[1]*t+l[5]*n+l[9]*i+l[13]*s,this.z=l[2]*t+l[6]*n+l[10]*i+l[14]*s,this.w=l[3]*t+l[7]*n+l[11]*i+l[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const u=e.elements,h=u[0],f=u[4],p=u[8],m=u[1],g=u[5],y=u[9],M=u[2],x=u[6],v=u[10];if(Math.abs(f-m)<.01&&Math.abs(p-M)<.01&&Math.abs(y-x)<.01){if(Math.abs(f+m)<.1&&Math.abs(p+M)<.1&&Math.abs(y+x)<.1&&Math.abs(h+g+v-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const E=(h+1)/2,A=(g+1)/2,L=(v+1)/2,C=(f+m)/4,I=(p+M)/4,z=(y+x)/4;return E>A&&E>L?E<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(E),i=C/n,s=I/n):A>L?A<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(A),n=C/i,s=z/i):L<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(L),n=I/s,i=z/s),this.set(n,i,s,t),this}let w=Math.sqrt((x-y)*(x-y)+(p-M)*(p-M)+(m-f)*(m-f));return Math.abs(w)<.001&&(w=1),this.x=(x-y)/w,this.y=(p-M)/w,this.z=(m-f)/w,this.w=Math.acos((h+g+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class K_ extends cr{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Dt(0,0,e,t),this.scissorTest=!1,this.viewport=new Dt(0,0,e,t);const i={width:e,height:t,depth:1};n.encoding!==void 0&&(ma("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===Pr?an:ei),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:$t,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0},n),this.texture=new tn(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps,this.texture.internalFormat=n.internalFormat,this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new hs(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class wi extends K_{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class uu extends tn{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Qt,this.minFilter=Qt,this.wrapR=Cn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class SS extends wi{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new uu(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Bd extends tn{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Qt,this.minFilter=Qt,this.wrapR=Cn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class MS extends wi{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Bd(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class ES extends wi{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const s=this.texture;this.texture=[];for(let l=0;l<n;l++)this.texture[l]=s.clone(),this.texture[l].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.texture.length;i<s;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class Pn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,l,c){let u=n[i+0],h=n[i+1],f=n[i+2],p=n[i+3];const m=s[l+0],g=s[l+1],y=s[l+2],M=s[l+3];if(c===0){e[t+0]=u,e[t+1]=h,e[t+2]=f,e[t+3]=p;return}if(c===1){e[t+0]=m,e[t+1]=g,e[t+2]=y,e[t+3]=M;return}if(p!==M||u!==m||h!==g||f!==y){let x=1-c;const v=u*m+h*g+f*y+p*M,w=v>=0?1:-1,E=1-v*v;if(E>Number.EPSILON){const L=Math.sqrt(E),C=Math.atan2(L,v*w);x=Math.sin(x*C)/L,c=Math.sin(c*C)/L}const A=c*w;if(u=u*x+m*A,h=h*x+g*A,f=f*x+y*A,p=p*x+M*A,x===1-c){const L=1/Math.sqrt(u*u+h*h+f*f+p*p);u*=L,h*=L,f*=L,p*=L}}e[t]=u,e[t+1]=h,e[t+2]=f,e[t+3]=p}static multiplyQuaternionsFlat(e,t,n,i,s,l){const c=n[i],u=n[i+1],h=n[i+2],f=n[i+3],p=s[l],m=s[l+1],g=s[l+2],y=s[l+3];return e[t]=c*y+f*p+u*g-h*m,e[t+1]=u*y+f*m+h*p-c*g,e[t+2]=h*y+f*g+c*m-u*p,e[t+3]=f*y-c*p-u*m-h*g,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,i=e._y,s=e._z,l=e._order,c=Math.cos,u=Math.sin,h=c(n/2),f=c(i/2),p=c(s/2),m=u(n/2),g=u(i/2),y=u(s/2);switch(l){case"XYZ":this._x=m*f*p+h*g*y,this._y=h*g*p-m*f*y,this._z=h*f*y+m*g*p,this._w=h*f*p-m*g*y;break;case"YXZ":this._x=m*f*p+h*g*y,this._y=h*g*p-m*f*y,this._z=h*f*y-m*g*p,this._w=h*f*p+m*g*y;break;case"ZXY":this._x=m*f*p-h*g*y,this._y=h*g*p+m*f*y,this._z=h*f*y+m*g*p,this._w=h*f*p-m*g*y;break;case"ZYX":this._x=m*f*p-h*g*y,this._y=h*g*p+m*f*y,this._z=h*f*y-m*g*p,this._w=h*f*p+m*g*y;break;case"YZX":this._x=m*f*p+h*g*y,this._y=h*g*p+m*f*y,this._z=h*f*y-m*g*p,this._w=h*f*p-m*g*y;break;case"XZY":this._x=m*f*p-h*g*y,this._y=h*g*p-m*f*y,this._z=h*f*y+m*g*p,this._w=h*f*p+m*g*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],l=t[1],c=t[5],u=t[9],h=t[2],f=t[6],p=t[10],m=n+c+p;if(m>0){const g=.5/Math.sqrt(m+1);this._w=.25/g,this._x=(f-u)*g,this._y=(s-h)*g,this._z=(l-i)*g}else if(n>c&&n>p){const g=2*Math.sqrt(1+n-c-p);this._w=(f-u)/g,this._x=.25*g,this._y=(i+l)/g,this._z=(s+h)/g}else if(c>p){const g=2*Math.sqrt(1+c-n-p);this._w=(s-h)/g,this._x=(i+l)/g,this._y=.25*g,this._z=(u+f)/g}else{const g=2*Math.sqrt(1+p-n-c);this._w=(l-i)/g,this._x=(s+h)/g,this._y=(u+f)/g,this._z=.25*g}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Zt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,l=e._w,c=t._x,u=t._y,h=t._z,f=t._w;return this._x=n*f+l*c+i*h-s*u,this._y=i*f+l*u+s*c-n*h,this._z=s*f+l*h+n*u-i*c,this._w=l*f-n*c-i*u-s*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,l=this._w;let c=l*e._w+n*e._x+i*e._y+s*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=l,this._x=n,this._y=i,this._z=s,this;const u=1-c*c;if(u<=Number.EPSILON){const g=1-t;return this._w=g*l+t*this._w,this._x=g*n+t*this._x,this._y=g*i+t*this._y,this._z=g*s+t*this._z,this.normalize(),this}const h=Math.sqrt(u),f=Math.atan2(h,c),p=Math.sin((1-t)*f)/h,m=Math.sin(t*f)/h;return this._w=l*p+this._w*m,this._x=n*p+this._x*m,this._y=i*p+this._y*m,this._z=s*p+this._z*m,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(s),n*Math.cos(s),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class U{constructor(e=0,t=0,n=0){U.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(eg.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(eg.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,l=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*l,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*l,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*l,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,l=e.y,c=e.z,u=e.w,h=2*(l*i-c*n),f=2*(c*t-s*i),p=2*(s*n-l*t);return this.x=t+u*h+l*p-c*f,this.y=n+u*f+c*h-s*p,this.z=i+u*p+s*f-l*h,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,l=t.x,c=t.y,u=t.z;return this.x=i*u-s*c,this.y=s*l-n*u,this.z=n*c-i*l,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Vh.copy(this).projectOnVector(e),this.sub(Vh)}reflect(e){return this.sub(Vh.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Zt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Vh=new U,eg=new Pn;class zn{constructor(e=new U(1/0,1/0,1/0),t=new U(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(gi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(gi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=gi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const s=n.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let l=0,c=s.count;l<c;l++)e.isMesh===!0?e.getVertexPosition(l,gi):gi.fromBufferAttribute(s,l),gi.applyMatrix4(e.matrixWorld),this.expandByPoint(gi);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),jl.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),jl.copy(n.boundingBox)),jl.applyMatrix4(e.matrixWorld),this.union(jl)}const i=e.children;for(let s=0,l=i.length;s<l;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,gi),gi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Qo),Jl.subVectors(this.max,Qo),Gs.subVectors(e.a,Qo),Ws.subVectors(e.b,Qo),Xs.subVectors(e.c,Qo),yr.subVectors(Ws,Gs),xr.subVectors(Xs,Ws),Zr.subVectors(Gs,Xs);let t=[0,-yr.z,yr.y,0,-xr.z,xr.y,0,-Zr.z,Zr.y,yr.z,0,-yr.x,xr.z,0,-xr.x,Zr.z,0,-Zr.x,-yr.y,yr.x,0,-xr.y,xr.x,0,-Zr.y,Zr.x,0];return!Gh(t,Gs,Ws,Xs,Jl)||(t=[1,0,0,0,1,0,0,0,1],!Gh(t,Gs,Ws,Xs,Jl))?!1:(Kl.crossVectors(yr,xr),t=[Kl.x,Kl.y,Kl.z],Gh(t,Gs,Ws,Xs,Jl))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,gi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(gi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Ji[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Ji[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Ji[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Ji[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Ji[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Ji[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Ji[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Ji[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Ji),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Ji=[new U,new U,new U,new U,new U,new U,new U,new U],gi=new U,jl=new zn,Gs=new U,Ws=new U,Xs=new U,yr=new U,xr=new U,Zr=new U,Qo=new U,Jl=new U,Kl=new U,jr=new U;function Gh(r,e,t,n,i){for(let s=0,l=r.length-3;s<=l;s+=3){jr.fromArray(r,s);const c=i.x*Math.abs(jr.x)+i.y*Math.abs(jr.y)+i.z*Math.abs(jr.z),u=e.dot(jr),h=t.dot(jr),f=n.dot(jr);if(Math.max(-Math.max(u,h,f),Math.min(u,h,f))>c)return!1}return!0}const wS=new zn,$o=new U,Wh=new U;class Ln{constructor(e=new U,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):wS.setFromPoints(e).getCenter(n);let i=0;for(let s=0,l=e.length;s<l;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;$o.subVectors(e,this.center);const t=$o.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector($o,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Wh.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint($o.copy(e.center).add(Wh)),this.expandByPoint($o.copy(e.center).sub(Wh))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Ki=new U,Xh=new U,Ql=new U,Sr=new U,Yh=new U,$l=new U,qh=new U;class Ss{constructor(e=new U,t=new U(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ki)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ki.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ki.copy(this.origin).addScaledVector(this.direction,t),Ki.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Xh.copy(e).add(t).multiplyScalar(.5),Ql.copy(t).sub(e).normalize(),Sr.copy(this.origin).sub(Xh);const s=e.distanceTo(t)*.5,l=-this.direction.dot(Ql),c=Sr.dot(this.direction),u=-Sr.dot(Ql),h=Sr.lengthSq(),f=Math.abs(1-l*l);let p,m,g,y;if(f>0)if(p=l*u-c,m=l*c-u,y=s*f,p>=0)if(m>=-y)if(m<=y){const M=1/f;p*=M,m*=M,g=p*(p+l*m+2*c)+m*(l*p+m+2*u)+h}else m=s,p=Math.max(0,-(l*m+c)),g=-p*p+m*(m+2*u)+h;else m=-s,p=Math.max(0,-(l*m+c)),g=-p*p+m*(m+2*u)+h;else m<=-y?(p=Math.max(0,-(-l*s+c)),m=p>0?-s:Math.min(Math.max(-s,-u),s),g=-p*p+m*(m+2*u)+h):m<=y?(p=0,m=Math.min(Math.max(-s,-u),s),g=m*(m+2*u)+h):(p=Math.max(0,-(l*s+c)),m=p>0?s:Math.min(Math.max(-s,-u),s),g=-p*p+m*(m+2*u)+h);else m=l>0?-s:s,p=Math.max(0,-(l*m+c)),g=-p*p+m*(m+2*u)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,p),i&&i.copy(Xh).addScaledVector(Ql,m),g}intersectSphere(e,t){Ki.subVectors(e.center,this.origin);const n=Ki.dot(this.direction),i=Ki.dot(Ki)-n*n,s=e.radius*e.radius;if(i>s)return null;const l=Math.sqrt(s-i),c=n-l,u=n+l;return u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,l,c,u;const h=1/this.direction.x,f=1/this.direction.y,p=1/this.direction.z,m=this.origin;return h>=0?(n=(e.min.x-m.x)*h,i=(e.max.x-m.x)*h):(n=(e.max.x-m.x)*h,i=(e.min.x-m.x)*h),f>=0?(s=(e.min.y-m.y)*f,l=(e.max.y-m.y)*f):(s=(e.max.y-m.y)*f,l=(e.min.y-m.y)*f),n>l||s>i||((s>n||isNaN(n))&&(n=s),(l<i||isNaN(i))&&(i=l),p>=0?(c=(e.min.z-m.z)*p,u=(e.max.z-m.z)*p):(c=(e.max.z-m.z)*p,u=(e.min.z-m.z)*p),n>u||c>i)||((c>n||n!==n)&&(n=c),(u<i||i!==i)&&(i=u),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Ki)!==null}intersectTriangle(e,t,n,i,s){Yh.subVectors(t,e),$l.subVectors(n,e),qh.crossVectors(Yh,$l);let l=this.direction.dot(qh),c;if(l>0){if(i)return null;c=1}else if(l<0)c=-1,l=-l;else return null;Sr.subVectors(this.origin,e);const u=c*this.direction.dot($l.crossVectors(Sr,$l));if(u<0)return null;const h=c*this.direction.dot(Yh.cross(Sr));if(h<0||u+h>l)return null;const f=-c*Sr.dot(qh);return f<0?null:this.at(f/l,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class lt{constructor(e,t,n,i,s,l,c,u,h,f,p,m,g,y,M,x){lt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,l,c,u,h,f,p,m,g,y,M,x)}set(e,t,n,i,s,l,c,u,h,f,p,m,g,y,M,x){const v=this.elements;return v[0]=e,v[4]=t,v[8]=n,v[12]=i,v[1]=s,v[5]=l,v[9]=c,v[13]=u,v[2]=h,v[6]=f,v[10]=p,v[14]=m,v[3]=g,v[7]=y,v[11]=M,v[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new lt().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Ys.setFromMatrixColumn(e,0).length(),s=1/Ys.setFromMatrixColumn(e,1).length(),l=1/Ys.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*l,t[9]=n[9]*l,t[10]=n[10]*l,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,l=Math.cos(n),c=Math.sin(n),u=Math.cos(i),h=Math.sin(i),f=Math.cos(s),p=Math.sin(s);if(e.order==="XYZ"){const m=l*f,g=l*p,y=c*f,M=c*p;t[0]=u*f,t[4]=-u*p,t[8]=h,t[1]=g+y*h,t[5]=m-M*h,t[9]=-c*u,t[2]=M-m*h,t[6]=y+g*h,t[10]=l*u}else if(e.order==="YXZ"){const m=u*f,g=u*p,y=h*f,M=h*p;t[0]=m+M*c,t[4]=y*c-g,t[8]=l*h,t[1]=l*p,t[5]=l*f,t[9]=-c,t[2]=g*c-y,t[6]=M+m*c,t[10]=l*u}else if(e.order==="ZXY"){const m=u*f,g=u*p,y=h*f,M=h*p;t[0]=m-M*c,t[4]=-l*p,t[8]=y+g*c,t[1]=g+y*c,t[5]=l*f,t[9]=M-m*c,t[2]=-l*h,t[6]=c,t[10]=l*u}else if(e.order==="ZYX"){const m=l*f,g=l*p,y=c*f,M=c*p;t[0]=u*f,t[4]=y*h-g,t[8]=m*h+M,t[1]=u*p,t[5]=M*h+m,t[9]=g*h-y,t[2]=-h,t[6]=c*u,t[10]=l*u}else if(e.order==="YZX"){const m=l*u,g=l*h,y=c*u,M=c*h;t[0]=u*f,t[4]=M-m*p,t[8]=y*p+g,t[1]=p,t[5]=l*f,t[9]=-c*f,t[2]=-h*f,t[6]=g*p+y,t[10]=m-M*p}else if(e.order==="XZY"){const m=l*u,g=l*h,y=c*u,M=c*h;t[0]=u*f,t[4]=-p,t[8]=h*f,t[1]=m*p+M,t[5]=l*f,t[9]=g*p-y,t[2]=y*p-g,t[6]=c*f,t[10]=M*p+m}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(TS,e,AS)}lookAt(e,t,n){const i=this.elements;return Qn.subVectors(e,t),Qn.lengthSq()===0&&(Qn.z=1),Qn.normalize(),Mr.crossVectors(n,Qn),Mr.lengthSq()===0&&(Math.abs(n.z)===1?Qn.x+=1e-4:Qn.z+=1e-4,Qn.normalize(),Mr.crossVectors(n,Qn)),Mr.normalize(),ec.crossVectors(Qn,Mr),i[0]=Mr.x,i[4]=ec.x,i[8]=Qn.x,i[1]=Mr.y,i[5]=ec.y,i[9]=Qn.y,i[2]=Mr.z,i[6]=ec.z,i[10]=Qn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,l=n[0],c=n[4],u=n[8],h=n[12],f=n[1],p=n[5],m=n[9],g=n[13],y=n[2],M=n[6],x=n[10],v=n[14],w=n[3],E=n[7],A=n[11],L=n[15],C=i[0],I=i[4],z=i[8],b=i[12],R=i[1],B=i[5],$=i[9],ae=i[13],V=i[2],j=i[6],te=i[10],ue=i[14],F=i[3],H=i[7],X=i[11],Z=i[15];return s[0]=l*C+c*R+u*V+h*F,s[4]=l*I+c*B+u*j+h*H,s[8]=l*z+c*$+u*te+h*X,s[12]=l*b+c*ae+u*ue+h*Z,s[1]=f*C+p*R+m*V+g*F,s[5]=f*I+p*B+m*j+g*H,s[9]=f*z+p*$+m*te+g*X,s[13]=f*b+p*ae+m*ue+g*Z,s[2]=y*C+M*R+x*V+v*F,s[6]=y*I+M*B+x*j+v*H,s[10]=y*z+M*$+x*te+v*X,s[14]=y*b+M*ae+x*ue+v*Z,s[3]=w*C+E*R+A*V+L*F,s[7]=w*I+E*B+A*j+L*H,s[11]=w*z+E*$+A*te+L*X,s[15]=w*b+E*ae+A*ue+L*Z,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],l=e[1],c=e[5],u=e[9],h=e[13],f=e[2],p=e[6],m=e[10],g=e[14],y=e[3],M=e[7],x=e[11],v=e[15];return y*(+s*u*p-i*h*p-s*c*m+n*h*m+i*c*g-n*u*g)+M*(+t*u*g-t*h*m+s*l*m-i*l*g+i*h*f-s*u*f)+x*(+t*h*p-t*c*g-s*l*p+n*l*g+s*c*f-n*h*f)+v*(-i*c*f-t*u*p+t*c*m+i*l*p-n*l*m+n*u*f)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],f=e[8],p=e[9],m=e[10],g=e[11],y=e[12],M=e[13],x=e[14],v=e[15],w=p*x*h-M*m*h+M*u*g-c*x*g-p*u*v+c*m*v,E=y*m*h-f*x*h-y*u*g+l*x*g+f*u*v-l*m*v,A=f*M*h-y*p*h+y*c*g-l*M*g-f*c*v+l*p*v,L=y*p*u-f*M*u-y*c*m+l*M*m+f*c*x-l*p*x,C=t*w+n*E+i*A+s*L;if(C===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const I=1/C;return e[0]=w*I,e[1]=(M*m*s-p*x*s-M*i*g+n*x*g+p*i*v-n*m*v)*I,e[2]=(c*x*s-M*u*s+M*i*h-n*x*h-c*i*v+n*u*v)*I,e[3]=(p*u*s-c*m*s-p*i*h+n*m*h+c*i*g-n*u*g)*I,e[4]=E*I,e[5]=(f*x*s-y*m*s+y*i*g-t*x*g-f*i*v+t*m*v)*I,e[6]=(y*u*s-l*x*s-y*i*h+t*x*h+l*i*v-t*u*v)*I,e[7]=(l*m*s-f*u*s+f*i*h-t*m*h-l*i*g+t*u*g)*I,e[8]=A*I,e[9]=(y*p*s-f*M*s-y*n*g+t*M*g+f*n*v-t*p*v)*I,e[10]=(l*M*s-y*c*s+y*n*h-t*M*h-l*n*v+t*c*v)*I,e[11]=(f*c*s-l*p*s-f*n*h+t*p*h+l*n*g-t*c*g)*I,e[12]=L*I,e[13]=(f*M*i-y*p*i+y*n*m-t*M*m-f*n*x+t*p*x)*I,e[14]=(y*c*i-l*M*i-y*n*u+t*M*u+l*n*x-t*c*x)*I,e[15]=(l*p*i-f*c*i+f*n*u-t*p*u-l*n*m+t*c*m)*I,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,l=e.x,c=e.y,u=e.z,h=s*l,f=s*c;return this.set(h*l+n,h*c-i*u,h*u+i*c,0,h*c+i*u,f*c+n,f*u-i*l,0,h*u-i*c,f*u+i*l,s*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,l){return this.set(1,n,s,0,e,1,l,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,l=t._y,c=t._z,u=t._w,h=s+s,f=l+l,p=c+c,m=s*h,g=s*f,y=s*p,M=l*f,x=l*p,v=c*p,w=u*h,E=u*f,A=u*p,L=n.x,C=n.y,I=n.z;return i[0]=(1-(M+v))*L,i[1]=(g+A)*L,i[2]=(y-E)*L,i[3]=0,i[4]=(g-A)*C,i[5]=(1-(m+v))*C,i[6]=(x+w)*C,i[7]=0,i[8]=(y+E)*I,i[9]=(x-w)*I,i[10]=(1-(m+M))*I,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=Ys.set(i[0],i[1],i[2]).length();const l=Ys.set(i[4],i[5],i[6]).length(),c=Ys.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],_i.copy(this);const h=1/s,f=1/l,p=1/c;return _i.elements[0]*=h,_i.elements[1]*=h,_i.elements[2]*=h,_i.elements[4]*=f,_i.elements[5]*=f,_i.elements[6]*=f,_i.elements[8]*=p,_i.elements[9]*=p,_i.elements[10]*=p,t.setFromRotationMatrix(_i),n.x=s,n.y=l,n.z=c,this}makePerspective(e,t,n,i,s,l,c=Ei){const u=this.elements,h=2*s/(t-e),f=2*s/(n-i),p=(t+e)/(t-e),m=(n+i)/(n-i);let g,y;if(c===Ei)g=-(l+s)/(l-s),y=-2*l*s/(l-s);else if(c===Mo)g=-l/(l-s),y=-l*s/(l-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return u[0]=h,u[4]=0,u[8]=p,u[12]=0,u[1]=0,u[5]=f,u[9]=m,u[13]=0,u[2]=0,u[6]=0,u[10]=g,u[14]=y,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,n,i,s,l,c=Ei){const u=this.elements,h=1/(t-e),f=1/(n-i),p=1/(l-s),m=(t+e)*h,g=(n+i)*f;let y,M;if(c===Ei)y=(l+s)*p,M=-2*p;else if(c===Mo)y=s*p,M=-1*p;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return u[0]=2*h,u[4]=0,u[8]=0,u[12]=-m,u[1]=0,u[5]=2*f,u[9]=0,u[13]=-g,u[2]=0,u[6]=0,u[10]=M,u[14]=-y,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Ys=new U,_i=new lt,TS=new U(0,0,0),AS=new U(1,1,1),Mr=new U,ec=new U,Qn=new U,tg=new lt,ng=new Pn;class Ga{constructor(e=0,t=0,n=0,i=Ga.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],l=i[4],c=i[8],u=i[1],h=i[5],f=i[9],p=i[2],m=i[6],g=i[10];switch(t){case"XYZ":this._y=Math.asin(Zt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-f,g),this._z=Math.atan2(-l,s)):(this._x=Math.atan2(m,h),this._z=0);break;case"YXZ":this._x=Math.asin(-Zt(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(c,g),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-p,s),this._z=0);break;case"ZXY":this._x=Math.asin(Zt(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-p,g),this._z=Math.atan2(-l,h)):(this._y=0,this._z=Math.atan2(u,s));break;case"ZYX":this._y=Math.asin(-Zt(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(m,g),this._z=Math.atan2(u,s)):(this._x=0,this._z=Math.atan2(-l,h));break;case"YZX":this._z=Math.asin(Zt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-f,h),this._y=Math.atan2(-p,s)):(this._x=0,this._y=Math.atan2(c,g));break;case"XZY":this._z=Math.asin(-Zt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(m,h),this._y=Math.atan2(c,s)):(this._x=Math.atan2(-f,g),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return tg.makeRotationFromQuaternion(e),this.setFromRotationMatrix(tg,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return ng.setFromEuler(this),this.setFromQuaternion(ng,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ga.DEFAULT_ORDER="XYZ";class ms{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let bS=0;const ig=new U,qs=new Pn,Qi=new lt,tc=new U,ea=new U,CS=new U,RS=new Pn,rg=new U(1,0,0),sg=new U(0,1,0),og=new U(0,0,1),PS={type:"added"},LS={type:"removed"};class Lt extends cr{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:bS++}),this.uuid=ti(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Lt.DEFAULT_UP.clone();const e=new U,t=new Ga,n=new Pn,i=new U(1,1,1);function s(){n.setFromEuler(t,!1)}function l(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(l),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new lt},normalMatrix:{value:new yt}}),this.matrix=new lt,this.matrixWorld=new lt,this.matrixAutoUpdate=Lt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Lt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new ms,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return qs.setFromAxisAngle(e,t),this.quaternion.multiply(qs),this}rotateOnWorldAxis(e,t){return qs.setFromAxisAngle(e,t),this.quaternion.premultiply(qs),this}rotateX(e){return this.rotateOnAxis(rg,e)}rotateY(e){return this.rotateOnAxis(sg,e)}rotateZ(e){return this.rotateOnAxis(og,e)}translateOnAxis(e,t){return ig.copy(e).applyQuaternion(this.quaternion),this.position.add(ig.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(rg,e)}translateY(e){return this.translateOnAxis(sg,e)}translateZ(e){return this.translateOnAxis(og,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Qi.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?tc.copy(e):tc.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),ea.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Qi.lookAt(ea,tc,this.up):Qi.lookAt(tc,ea,this.up),this.quaternion.setFromRotationMatrix(Qi),i&&(Qi.extractRotation(i.matrixWorld),qs.setFromRotationMatrix(Qi),this.quaternion.premultiply(qs.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(PS)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(LS)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Qi.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Qi.multiply(e.parent.matrixWorld)),e.applyMatrix4(Qi),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const l=this.children[n].getObjectByProperty(e,t);if(l!==void 0)return l}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let s=0,l=i.length;s<l;s++)i[s].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ea,e,CS),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ea,RS,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const s=t[n];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,l=i.length;s<l;s++){const c=i[s];c.matrixWorldAutoUpdate===!0&&c.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(c=>({boxInitialized:c.boxInitialized,boxMin:c.box.min.toArray(),boxMax:c.box.max.toArray(),sphereInitialized:c.sphereInitialized,sphereRadius:c.sphere.radius,sphereCenter:c.sphere.center.toArray()})),i.maxGeometryCount=this._maxGeometryCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(e),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function s(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let h=0,f=u.length;h<f;h++){const p=u[h];s(e.shapes,p)}else s(e.shapes,u)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,h=this.material.length;u<h;u++)c.push(s(e.materials,this.material[u]));i.material=c}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];i.animations.push(s(e.animations,u))}}if(t){const c=l(e.geometries),u=l(e.materials),h=l(e.textures),f=l(e.images),p=l(e.shapes),m=l(e.skeletons),g=l(e.animations),y=l(e.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),h.length>0&&(n.textures=h),f.length>0&&(n.images=f),p.length>0&&(n.shapes=p),m.length>0&&(n.skeletons=m),g.length>0&&(n.animations=g),y.length>0&&(n.nodes=y)}return n.object=i,n;function l(c){const u=[];for(const h in c){const f=c[h];delete f.metadata,u.push(f)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Lt.DEFAULT_UP=new U(0,1,0);Lt.DEFAULT_MATRIX_AUTO_UPDATE=!0;Lt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const vi=new U,$i=new U,Zh=new U,er=new U,Zs=new U,js=new U,ag=new U,jh=new U,Jh=new U,Kh=new U;let nc=!1;class Wn{constructor(e=new U,t=new U,n=new U){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),vi.subVectors(e,t),i.cross(vi);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){vi.subVectors(i,t),$i.subVectors(n,t),Zh.subVectors(e,t);const l=vi.dot(vi),c=vi.dot($i),u=vi.dot(Zh),h=$i.dot($i),f=$i.dot(Zh),p=l*h-c*c;if(p===0)return s.set(0,0,0),null;const m=1/p,g=(h*u-c*f)*m,y=(l*f-c*u)*m;return s.set(1-g-y,y,g)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,er)===null?!1:er.x>=0&&er.y>=0&&er.x+er.y<=1}static getUV(e,t,n,i,s,l,c,u){return nc===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),nc=!0),this.getInterpolation(e,t,n,i,s,l,c,u)}static getInterpolation(e,t,n,i,s,l,c,u){return this.getBarycoord(e,t,n,i,er)===null?(u.x=0,u.y=0,"z"in u&&(u.z=0),"w"in u&&(u.w=0),null):(u.setScalar(0),u.addScaledVector(s,er.x),u.addScaledVector(l,er.y),u.addScaledVector(c,er.z),u)}static isFrontFacing(e,t,n,i){return vi.subVectors(n,t),$i.subVectors(e,t),vi.cross($i).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return vi.subVectors(this.c,this.b),$i.subVectors(this.a,this.b),vi.cross($i).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Wn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Wn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,s){return nc===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),nc=!0),Wn.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}getInterpolation(e,t,n,i,s){return Wn.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return Wn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Wn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let l,c;Zs.subVectors(i,n),js.subVectors(s,n),jh.subVectors(e,n);const u=Zs.dot(jh),h=js.dot(jh);if(u<=0&&h<=0)return t.copy(n);Jh.subVectors(e,i);const f=Zs.dot(Jh),p=js.dot(Jh);if(f>=0&&p<=f)return t.copy(i);const m=u*p-f*h;if(m<=0&&u>=0&&f<=0)return l=u/(u-f),t.copy(n).addScaledVector(Zs,l);Kh.subVectors(e,s);const g=Zs.dot(Kh),y=js.dot(Kh);if(y>=0&&g<=y)return t.copy(s);const M=g*h-u*y;if(M<=0&&h>=0&&y<=0)return c=h/(h-y),t.copy(n).addScaledVector(js,c);const x=f*y-g*p;if(x<=0&&p-f>=0&&g-y>=0)return ag.subVectors(s,i),c=(p-f)/(p-f+(g-y)),t.copy(i).addScaledVector(ag,c);const v=1/(x+M+m);return l=M*v,c=m*v,t.copy(n).addScaledVector(Zs,l).addScaledVector(js,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const Q_={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Er={h:0,s:0,l:0},ic={h:0,s:0,l:0};function Qh(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}class Ue{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=an){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,It.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=It.workingColorSpace){return this.r=e,this.g=t,this.b=n,It.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=It.workingColorSpace){if(e=Fd(e,1),t=Zt(t,0,1),n=Zt(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,l=2*n-s;this.r=Qh(l,s,e+1/3),this.g=Qh(l,s,e),this.b=Qh(l,s,e-1/3)}return It.toWorkingColorSpace(this,i),this}setStyle(e,t=an){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const l=i[1],c=i[2];switch(l){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],l=s.length;if(l===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(l===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=an){const n=Q_[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=xo(e.r),this.g=xo(e.g),this.b=xo(e.b),this}copyLinearToSRGB(e){return this.r=kh(e.r),this.g=kh(e.g),this.b=kh(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=an){return It.fromWorkingColorSpace(An.copy(this),e),Math.round(Zt(An.r*255,0,255))*65536+Math.round(Zt(An.g*255,0,255))*256+Math.round(Zt(An.b*255,0,255))}getHexString(e=an){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=It.workingColorSpace){It.fromWorkingColorSpace(An.copy(this),t);const n=An.r,i=An.g,s=An.b,l=Math.max(n,i,s),c=Math.min(n,i,s);let u,h;const f=(c+l)/2;if(c===l)u=0,h=0;else{const p=l-c;switch(h=f<=.5?p/(l+c):p/(2-l-c),l){case n:u=(i-s)/p+(i<s?6:0);break;case i:u=(s-n)/p+2;break;case s:u=(n-i)/p+4;break}u/=6}return e.h=u,e.s=h,e.l=f,e}getRGB(e,t=It.workingColorSpace){return It.fromWorkingColorSpace(An.copy(this),t),e.r=An.r,e.g=An.g,e.b=An.b,e}getStyle(e=an){It.fromWorkingColorSpace(An.copy(this),e);const t=An.r,n=An.g,i=An.b;return e!==an?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(Er),this.setHSL(Er.h+e,Er.s+t,Er.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Er),e.getHSL(ic);const n=pa(Er.h,ic.h,t),i=pa(Er.s,ic.s,t),s=pa(Er.l,ic.l,t);return this.setHSL(n,i,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*i,this.g=s[1]*t+s[4]*n+s[7]*i,this.b=s[2]*t+s[5]*n+s[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const An=new Ue;Ue.NAMES=Q_;let IS=0;class In extends cr{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:IS++}),this.uuid=ti(),this.name="",this.type="Material",this.blending=ds,this.side=or,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Kc,this.blendDst=Qc,this.blendEquation=br,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Ue(0,0,0),this.blendAlpha=0,this.depthFunc=ya,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=hd,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=os,this.stencilZFail=os,this.stencilZPass=os,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==ds&&(n.blending=this.blending),this.side!==or&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==Kc&&(n.blendSrc=this.blendSrc),this.blendDst!==Qc&&(n.blendDst=this.blendDst),this.blendEquation!==br&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==ya&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==hd&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==os&&(n.stencilFail=this.stencilFail),this.stencilZFail!==os&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==os&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const l=[];for(const c in s){const u=s[c];delete u.metadata,l.push(u)}return l}if(t){const s=i(e.textures),l=i(e.images);s.length>0&&(n.textures=s),l.length>0&&(n.images=l)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Or extends In{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ue(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ha,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const nr=DS();function DS(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let u=0;u<256;++u){const h=u-127;h<-27?(n[u]=0,n[u|256]=32768,i[u]=24,i[u|256]=24):h<-14?(n[u]=1024>>-h-14,n[u|256]=1024>>-h-14|32768,i[u]=-h-1,i[u|256]=-h-1):h<=15?(n[u]=h+15<<10,n[u|256]=h+15<<10|32768,i[u]=13,i[u|256]=13):h<128?(n[u]=31744,n[u|256]=64512,i[u]=24,i[u|256]=24):(n[u]=31744,n[u|256]=64512,i[u]=13,i[u|256]=13)}const s=new Uint32Array(2048),l=new Uint32Array(64),c=new Uint32Array(64);for(let u=1;u<1024;++u){let h=u<<13,f=0;for(;!(h&8388608);)h<<=1,f-=8388608;h&=-8388609,f+=947912704,s[u]=h|f}for(let u=1024;u<2048;++u)s[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)l[u]=u<<23;l[31]=1199570944,l[32]=2147483648;for(let u=33;u<63;++u)l[u]=2147483648+(u-32<<23);l[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(c[u]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:l,offsetTable:c}}function Gn(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=Zt(r,-65504,65504),nr.floatView[0]=r;const e=nr.uint32View[0],t=e>>23&511;return nr.baseTable[t]+((e&8388607)>>nr.shiftTable[t])}function ha(r){const e=r>>10;return nr.uint32View[0]=nr.mantissaTable[nr.offsetTable[e]+(r&1023)]+nr.exponentTable[e],nr.floatView[0]}const NS={toHalfFloat:Gn,fromHalfFloat:ha},sn=new U,rc=new he;class Nt{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Pa,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=Mi,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return console.warn("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)rc.fromBufferAttribute(this,t),rc.applyMatrix3(e),this.setXY(t,rc.x,rc.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)sn.fromBufferAttribute(this,t),sn.applyMatrix3(e),this.setXYZ(t,sn.x,sn.y,sn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)sn.fromBufferAttribute(this,t),sn.applyMatrix4(e),this.setXYZ(t,sn.x,sn.y,sn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)sn.fromBufferAttribute(this,t),sn.applyNormalMatrix(e),this.setXYZ(t,sn.x,sn.y,sn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)sn.fromBufferAttribute(this,t),sn.transformDirection(e),this.setXYZ(t,sn.x,sn.y,sn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=Xn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=_t(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Xn(t,this.array)),t}setX(e,t){return this.normalized&&(t=_t(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Xn(t,this.array)),t}setY(e,t){return this.normalized&&(t=_t(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Xn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=_t(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Xn(t,this.array)),t}setW(e,t){return this.normalized&&(t=_t(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=_t(t,this.array),n=_t(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=_t(t,this.array),n=_t(n,this.array),i=_t(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=_t(t,this.array),n=_t(n,this.array),i=_t(i,this.array),s=_t(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Pa&&(e.usage=this.usage),e}}class US extends Nt{constructor(e,t,n){super(new Int8Array(e),t,n)}}class OS extends Nt{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class FS extends Nt{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class zS extends Nt{constructor(e,t,n){super(new Int16Array(e),t,n)}}class kd extends Nt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class BS extends Nt{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Hd extends Nt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class kS extends Nt{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=ha(this.array[e*this.itemSize]);return this.normalized&&(t=Xn(t,this.array)),t}setX(e,t){return this.normalized&&(t=_t(t,this.array)),this.array[e*this.itemSize]=Gn(t),this}getY(e){let t=ha(this.array[e*this.itemSize+1]);return this.normalized&&(t=Xn(t,this.array)),t}setY(e,t){return this.normalized&&(t=_t(t,this.array)),this.array[e*this.itemSize+1]=Gn(t),this}getZ(e){let t=ha(this.array[e*this.itemSize+2]);return this.normalized&&(t=Xn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=_t(t,this.array)),this.array[e*this.itemSize+2]=Gn(t),this}getW(e){let t=ha(this.array[e*this.itemSize+3]);return this.normalized&&(t=Xn(t,this.array)),t}setW(e,t){return this.normalized&&(t=_t(t,this.array)),this.array[e*this.itemSize+3]=Gn(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=_t(t,this.array),n=_t(n,this.array)),this.array[e+0]=Gn(t),this.array[e+1]=Gn(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=_t(t,this.array),n=_t(n,this.array),i=_t(i,this.array)),this.array[e+0]=Gn(t),this.array[e+1]=Gn(n),this.array[e+2]=Gn(i),this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=_t(t,this.array),n=_t(n,this.array),i=_t(i,this.array),s=_t(s,this.array)),this.array[e+0]=Gn(t),this.array[e+1]=Gn(n),this.array[e+2]=Gn(i),this.array[e+3]=Gn(s),this}}class Xe extends Nt{constructor(e,t,n){super(new Float32Array(e),t,n)}}class HS extends Nt{constructor(e,t,n){super(new Float64Array(e),t,n)}}let VS=0;const di=new lt,$h=new Lt,Js=new U,$n=new zn,ta=new zn,gn=new U;class xt extends cr{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:VS++}),this.uuid=ti(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(j_(e)?Hd:kd)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new yt().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return di.makeRotationFromQuaternion(e),this.applyMatrix4(di),this}rotateX(e){return di.makeRotationX(e),this.applyMatrix4(di),this}rotateY(e){return di.makeRotationY(e),this.applyMatrix4(di),this}rotateZ(e){return di.makeRotationZ(e),this.applyMatrix4(di),this}translate(e,t,n){return di.makeTranslation(e,t,n),this.applyMatrix4(di),this}scale(e,t,n){return di.makeScale(e,t,n),this.applyMatrix4(di),this}lookAt(e){return $h.lookAt(e),$h.updateMatrix(),this.applyMatrix4($h.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Js).negate(),this.translate(Js.x,Js.y,Js.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Xe(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new zn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new U(-1/0,-1/0,-1/0),new U(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];$n.setFromBufferAttribute(s),this.morphTargetsRelative?(gn.addVectors(this.boundingBox.min,$n.min),this.boundingBox.expandByPoint(gn),gn.addVectors(this.boundingBox.max,$n.max),this.boundingBox.expandByPoint(gn)):(this.boundingBox.expandByPoint($n.min),this.boundingBox.expandByPoint($n.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Ln);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new U,1/0);return}if(e){const n=this.boundingSphere.center;if($n.setFromBufferAttribute(e),t)for(let s=0,l=t.length;s<l;s++){const c=t[s];ta.setFromBufferAttribute(c),this.morphTargetsRelative?(gn.addVectors($n.min,ta.min),$n.expandByPoint(gn),gn.addVectors($n.max,ta.max),$n.expandByPoint(gn)):($n.expandByPoint(ta.min),$n.expandByPoint(ta.max))}$n.getCenter(n);let i=0;for(let s=0,l=e.count;s<l;s++)gn.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(gn));if(t)for(let s=0,l=t.length;s<l;s++){const c=t[s],u=this.morphTargetsRelative;for(let h=0,f=c.count;h<f;h++)gn.fromBufferAttribute(c,h),u&&(Js.fromBufferAttribute(e,h),gn.add(Js)),i=Math.max(i,n.distanceToSquared(gn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,s=t.normal.array,l=t.uv.array,c=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Nt(new Float32Array(4*c),4));const u=this.getAttribute("tangent").array,h=[],f=[];for(let R=0;R<c;R++)h[R]=new U,f[R]=new U;const p=new U,m=new U,g=new U,y=new he,M=new he,x=new he,v=new U,w=new U;function E(R,B,$){p.fromArray(i,R*3),m.fromArray(i,B*3),g.fromArray(i,$*3),y.fromArray(l,R*2),M.fromArray(l,B*2),x.fromArray(l,$*2),m.sub(p),g.sub(p),M.sub(y),x.sub(y);const ae=1/(M.x*x.y-x.x*M.y);isFinite(ae)&&(v.copy(m).multiplyScalar(x.y).addScaledVector(g,-M.y).multiplyScalar(ae),w.copy(g).multiplyScalar(M.x).addScaledVector(m,-x.x).multiplyScalar(ae),h[R].add(v),h[B].add(v),h[$].add(v),f[R].add(w),f[B].add(w),f[$].add(w))}let A=this.groups;A.length===0&&(A=[{start:0,count:n.length}]);for(let R=0,B=A.length;R<B;++R){const $=A[R],ae=$.start,V=$.count;for(let j=ae,te=ae+V;j<te;j+=3)E(n[j+0],n[j+1],n[j+2])}const L=new U,C=new U,I=new U,z=new U;function b(R){I.fromArray(s,R*3),z.copy(I);const B=h[R];L.copy(B),L.sub(I.multiplyScalar(I.dot(B))).normalize(),C.crossVectors(z,B);const ae=C.dot(f[R])<0?-1:1;u[R*4]=L.x,u[R*4+1]=L.y,u[R*4+2]=L.z,u[R*4+3]=ae}for(let R=0,B=A.length;R<B;++R){const $=A[R],ae=$.start,V=$.count;for(let j=ae,te=ae+V;j<te;j+=3)b(n[j+0]),b(n[j+1]),b(n[j+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Nt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let m=0,g=n.count;m<g;m++)n.setXYZ(m,0,0,0);const i=new U,s=new U,l=new U,c=new U,u=new U,h=new U,f=new U,p=new U;if(e)for(let m=0,g=e.count;m<g;m+=3){const y=e.getX(m+0),M=e.getX(m+1),x=e.getX(m+2);i.fromBufferAttribute(t,y),s.fromBufferAttribute(t,M),l.fromBufferAttribute(t,x),f.subVectors(l,s),p.subVectors(i,s),f.cross(p),c.fromBufferAttribute(n,y),u.fromBufferAttribute(n,M),h.fromBufferAttribute(n,x),c.add(f),u.add(f),h.add(f),n.setXYZ(y,c.x,c.y,c.z),n.setXYZ(M,u.x,u.y,u.z),n.setXYZ(x,h.x,h.y,h.z)}else for(let m=0,g=t.count;m<g;m+=3)i.fromBufferAttribute(t,m+0),s.fromBufferAttribute(t,m+1),l.fromBufferAttribute(t,m+2),f.subVectors(l,s),p.subVectors(i,s),f.cross(p),n.setXYZ(m+0,f.x,f.y,f.z),n.setXYZ(m+1,f.x,f.y,f.z),n.setXYZ(m+2,f.x,f.y,f.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)gn.fromBufferAttribute(e,t),gn.normalize(),e.setXYZ(t,gn.x,gn.y,gn.z)}toNonIndexed(){function e(c,u){const h=c.array,f=c.itemSize,p=c.normalized,m=new h.constructor(u.length*f);let g=0,y=0;for(let M=0,x=u.length;M<x;M++){c.isInterleavedBufferAttribute?g=u[M]*c.data.stride+c.offset:g=u[M]*f;for(let v=0;v<f;v++)m[y++]=h[g++]}return new Nt(m,f,p)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new xt,n=this.index.array,i=this.attributes;for(const c in i){const u=i[c],h=e(u,n);t.setAttribute(c,h)}const s=this.morphAttributes;for(const c in s){const u=[],h=s[c];for(let f=0,p=h.length;f<p;f++){const m=h[f],g=e(m,n);u.push(g)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let c=0,u=l.length;c<u;c++){const h=l[c];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const h in u)u[h]!==void 0&&(e[h]=u[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const h=n[u];e.data.attributes[u]=h.toJSON(e.data)}const i={};let s=!1;for(const u in this.morphAttributes){const h=this.morphAttributes[u],f=[];for(let p=0,m=h.length;p<m;p++){const g=h[p];f.push(g.toJSON(e.data))}f.length>0&&(i[u]=f,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(e.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const f=i[h];this.setAttribute(h,f.clone(t))}const s=e.morphAttributes;for(const h in s){const f=[],p=s[h];for(let m=0,g=p.length;m<g;m++)f.push(p[m].clone(t));this.morphAttributes[h]=f}this.morphTargetsRelative=e.morphTargetsRelative;const l=e.groups;for(let h=0,f=l.length;h<f;h++){const p=l[h];this.addGroup(p.start,p.count,p.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const lg=new lt,Jr=new Ss,sc=new Ln,cg=new U,Ks=new U,Qs=new U,$s=new U,ef=new U,oc=new U,ac=new he,lc=new he,cc=new he,ug=new U,hg=new U,fg=new U,uc=new U,hc=new U;class ln extends Lt{constructor(e=new xt,t=new Or){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,l=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const c=this.morphTargetInfluences;if(s&&c){oc.set(0,0,0);for(let u=0,h=s.length;u<h;u++){const f=c[u],p=s[u];f!==0&&(ef.fromBufferAttribute(p,e),l?oc.addScaledVector(ef,f):oc.addScaledVector(ef.sub(t),f))}t.add(oc)}return t}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),sc.copy(n.boundingSphere),sc.applyMatrix4(s),Jr.copy(e.ray).recast(e.near),!(sc.containsPoint(Jr.origin)===!1&&(Jr.intersectSphere(sc,cg)===null||Jr.origin.distanceToSquared(cg)>(e.far-e.near)**2))&&(lg.copy(s).invert(),Jr.copy(e.ray).applyMatrix4(lg),!(n.boundingBox!==null&&Jr.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,Jr)))}_computeIntersections(e,t,n){let i;const s=this.geometry,l=this.material,c=s.index,u=s.attributes.position,h=s.attributes.uv,f=s.attributes.uv1,p=s.attributes.normal,m=s.groups,g=s.drawRange;if(c!==null)if(Array.isArray(l))for(let y=0,M=m.length;y<M;y++){const x=m[y],v=l[x.materialIndex],w=Math.max(x.start,g.start),E=Math.min(c.count,Math.min(x.start+x.count,g.start+g.count));for(let A=w,L=E;A<L;A+=3){const C=c.getX(A),I=c.getX(A+1),z=c.getX(A+2);i=fc(this,v,e,n,h,f,p,C,I,z),i&&(i.faceIndex=Math.floor(A/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,g.start),M=Math.min(c.count,g.start+g.count);for(let x=y,v=M;x<v;x+=3){const w=c.getX(x),E=c.getX(x+1),A=c.getX(x+2);i=fc(this,l,e,n,h,f,p,w,E,A),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}else if(u!==void 0)if(Array.isArray(l))for(let y=0,M=m.length;y<M;y++){const x=m[y],v=l[x.materialIndex],w=Math.max(x.start,g.start),E=Math.min(u.count,Math.min(x.start+x.count,g.start+g.count));for(let A=w,L=E;A<L;A+=3){const C=A,I=A+1,z=A+2;i=fc(this,v,e,n,h,f,p,C,I,z),i&&(i.faceIndex=Math.floor(A/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,g.start),M=Math.min(u.count,g.start+g.count);for(let x=y,v=M;x<v;x+=3){const w=x,E=x+1,A=x+2;i=fc(this,l,e,n,h,f,p,w,E,A),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}}}function GS(r,e,t,n,i,s,l,c){let u;if(e.side===Rn?u=n.intersectTriangle(l,s,i,!0,c):u=n.intersectTriangle(i,s,l,e.side===or,c),u===null)return null;hc.copy(c),hc.applyMatrix4(r.matrixWorld);const h=t.ray.origin.distanceTo(hc);return h<t.near||h>t.far?null:{distance:h,point:hc.clone(),object:r}}function fc(r,e,t,n,i,s,l,c,u,h){r.getVertexPosition(c,Ks),r.getVertexPosition(u,Qs),r.getVertexPosition(h,$s);const f=GS(r,e,t,n,Ks,Qs,$s,uc);if(f){i&&(ac.fromBufferAttribute(i,c),lc.fromBufferAttribute(i,u),cc.fromBufferAttribute(i,h),f.uv=Wn.getInterpolation(uc,Ks,Qs,$s,ac,lc,cc,new he)),s&&(ac.fromBufferAttribute(s,c),lc.fromBufferAttribute(s,u),cc.fromBufferAttribute(s,h),f.uv1=Wn.getInterpolation(uc,Ks,Qs,$s,ac,lc,cc,new he),f.uv2=f.uv1),l&&(ug.fromBufferAttribute(l,c),hg.fromBufferAttribute(l,u),fg.fromBufferAttribute(l,h),f.normal=Wn.getInterpolation(uc,Ks,Qs,$s,ug,hg,fg,new U),f.normal.dot(n.direction)>0&&f.normal.multiplyScalar(-1));const p={a:c,b:u,c:h,normal:new U,materialIndex:0};Wn.getNormal(Ks,Qs,$s,p.normal),f.face=p}return f}class Ms extends xt{constructor(e=1,t=1,n=1,i=1,s=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:l};const c=this;i=Math.floor(i),s=Math.floor(s),l=Math.floor(l);const u=[],h=[],f=[],p=[];let m=0,g=0;y("z","y","x",-1,-1,n,t,e,l,s,0),y("z","y","x",1,-1,n,t,-e,l,s,1),y("x","z","y",1,1,e,n,t,i,l,2),y("x","z","y",1,-1,e,n,-t,i,l,3),y("x","y","z",1,-1,e,t,n,i,s,4),y("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(u),this.setAttribute("position",new Xe(h,3)),this.setAttribute("normal",new Xe(f,3)),this.setAttribute("uv",new Xe(p,2));function y(M,x,v,w,E,A,L,C,I,z,b){const R=A/I,B=L/z,$=A/2,ae=L/2,V=C/2,j=I+1,te=z+1;let ue=0,F=0;const H=new U;for(let X=0;X<te;X++){const Z=X*B-ae;for(let le=0;le<j;le++){const J=le*R-$;H[M]=J*w,H[x]=Z*E,H[v]=V,h.push(H.x,H.y,H.z),H[M]=0,H[x]=0,H[v]=C>0?1:-1,f.push(H.x,H.y,H.z),p.push(le/I),p.push(1-X/z),ue+=1}}for(let X=0;X<z;X++)for(let Z=0;Z<I;Z++){const le=m+Z+j*X,J=m+Z+j*(X+1),ce=m+(Z+1)+j*(X+1),Me=m+(Z+1)+j*X;u.push(le,J,Me),u.push(J,ce,Me),F+=6}c.addGroup(g,F,b),g+=F,m+=ue}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ms(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function wo(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function On(r){const e={};for(let t=0;t<r.length;t++){const n=wo(r[t]);for(const i in n)e[i]=n[i]}return e}function WS(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function $_(r){return r.getRenderTarget()===null?r.outputColorSpace:It.workingColorSpace}const Vd={clone:wo,merge:On};var XS=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,YS=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ti extends In{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=XS,this.fragmentShader=YS,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1,clipCullDistance:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=wo(e.uniforms),this.uniformsGroups=WS(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const l=this.uniforms[i].value;l&&l.isTexture?t.uniforms[i]={type:"t",value:l.toJSON(e).uuid}:l&&l.isColor?t.uniforms[i]={type:"c",value:l.getHex()}:l&&l.isVector2?t.uniforms[i]={type:"v2",value:l.toArray()}:l&&l.isVector3?t.uniforms[i]={type:"v3",value:l.toArray()}:l&&l.isVector4?t.uniforms[i]={type:"v4",value:l.toArray()}:l&&l.isMatrix3?t.uniforms[i]={type:"m3",value:l.toArray()}:l&&l.isMatrix4?t.uniforms[i]={type:"m4",value:l.toArray()}:t.uniforms[i]={value:l}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Wa extends Lt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new lt,this.projectionMatrix=new lt,this.projectionMatrixInverse=new lt,this.coordinateSystem=Ei}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class en extends Wa{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Eo*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(ps*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Eo*2*Math.atan(Math.tan(ps*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,s,l){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(ps*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const l=this.view;if(this.view!==null&&this.view.enabled){const u=l.fullWidth,h=l.fullHeight;s+=l.offsetX*i/u,t-=l.offsetY*n/h,i*=l.width/u,n*=l.height/h}const c=this.filmOffset;c!==0&&(s+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const eo=-90,to=1;class ev extends Lt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new en(eo,to,e,t);i.layers=this.layers,this.add(i);const s=new en(eo,to,e,t);s.layers=this.layers,this.add(s);const l=new en(eo,to,e,t);l.layers=this.layers,this.add(l);const c=new en(eo,to,e,t);c.layers=this.layers,this.add(c);const u=new en(eo,to,e,t);u.layers=this.layers,this.add(u);const h=new en(eo,to,e,t);h.layers=this.layers,this.add(h)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,s,l,c,u]=t;for(const h of t)this.remove(h);if(e===Ei)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),l.up.set(0,0,1),l.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===Mo)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),l.up.set(0,0,-1),l.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const h of t)this.add(h),h.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,l,c,u,h,f]=this.children,p=e.getRenderTarget(),m=e.getActiveCubeFace(),g=e.getActiveMipmapLevel(),y=e.xr.enabled;e.xr.enabled=!1;const M=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,s),e.setRenderTarget(n,1,i),e.render(t,l),e.setRenderTarget(n,2,i),e.render(t,c),e.setRenderTarget(n,3,i),e.render(t,u),e.setRenderTarget(n,4,i),e.render(t,h),n.texture.generateMipmaps=M,e.setRenderTarget(n,5,i),e.render(t,f),e.setRenderTarget(p,m,g),e.xr.enabled=y,n.texture.needsPMREMUpdate=!0}}class Xa extends tn{constructor(e,t,n,i,s,l,c,u,h,f){e=e!==void 0?e:[],t=t!==void 0?t:ar,super(e,t,n,i,s,l,c,u,h,f),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class tv extends wi{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];t.encoding!==void 0&&(ma("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===Pr?an:ei),this.texture=new Xa(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:$t}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Ms(5,5,5),s=new Ti({name:"CubemapFromEquirect",uniforms:wo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Rn,blending:sr});s.uniforms.tEquirect.value=t;const l=new ln(i,s),c=t.minFilter;return t.minFilter===Dr&&(t.minFilter=$t),new ev(1,10,this).update(e,l),t.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let l=0;l<6;l++)e.setRenderTarget(this,l),e.clear(t,n,i);e.setRenderTarget(s)}}const tf=new U,qS=new U,ZS=new yt;class Fi{constructor(e=new U(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=tf.subVectors(n,t).cross(qS.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(tf),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||ZS.getNormalMatrix(e),i=this.coplanarPoint(tf).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Kr=new Ln,dc=new U;class Ya{constructor(e=new Fi,t=new Fi,n=new Fi,i=new Fi,s=new Fi,l=new Fi){this.planes=[e,t,n,i,s,l]}set(e,t,n,i,s,l){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(i),c[4].copy(s),c[5].copy(l),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Ei){const n=this.planes,i=e.elements,s=i[0],l=i[1],c=i[2],u=i[3],h=i[4],f=i[5],p=i[6],m=i[7],g=i[8],y=i[9],M=i[10],x=i[11],v=i[12],w=i[13],E=i[14],A=i[15];if(n[0].setComponents(u-s,m-h,x-g,A-v).normalize(),n[1].setComponents(u+s,m+h,x+g,A+v).normalize(),n[2].setComponents(u+l,m+f,x+y,A+w).normalize(),n[3].setComponents(u-l,m-f,x-y,A-w).normalize(),n[4].setComponents(u-c,m-p,x-M,A-E).normalize(),t===Ei)n[5].setComponents(u+c,m+p,x+M,A+E).normalize();else if(t===Mo)n[5].setComponents(c,p,M,E).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Kr.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Kr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Kr)}intersectsSprite(e){return Kr.center.set(0,0,0),Kr.radius=.7071067811865476,Kr.applyMatrix4(e.matrixWorld),this.intersectsSphere(Kr)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(dc.x=i.normal.x>0?e.max.x:e.min.x,dc.y=i.normal.y>0?e.max.y:e.min.y,dc.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(dc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function nv(){let r=null,e=!1,t=null,n=null;function i(s,l){t(s,l),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function jS(r,e){const t=e.isWebGL2,n=new WeakMap;function i(h,f){const p=h.array,m=h.usage,g=p.byteLength,y=r.createBuffer();r.bindBuffer(f,y),r.bufferData(f,p,m),h.onUploadCallback();let M;if(p instanceof Float32Array)M=r.FLOAT;else if(p instanceof Uint16Array)if(h.isFloat16BufferAttribute)if(t)M=r.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else M=r.UNSIGNED_SHORT;else if(p instanceof Int16Array)M=r.SHORT;else if(p instanceof Uint32Array)M=r.UNSIGNED_INT;else if(p instanceof Int32Array)M=r.INT;else if(p instanceof Int8Array)M=r.BYTE;else if(p instanceof Uint8Array)M=r.UNSIGNED_BYTE;else if(p instanceof Uint8ClampedArray)M=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+p);return{buffer:y,type:M,bytesPerElement:p.BYTES_PER_ELEMENT,version:h.version,size:g}}function s(h,f,p){const m=f.array,g=f._updateRange,y=f.updateRanges;if(r.bindBuffer(p,h),g.count===-1&&y.length===0&&r.bufferSubData(p,0,m),y.length!==0){for(let M=0,x=y.length;M<x;M++){const v=y[M];t?r.bufferSubData(p,v.start*m.BYTES_PER_ELEMENT,m,v.start,v.count):r.bufferSubData(p,v.start*m.BYTES_PER_ELEMENT,m.subarray(v.start,v.start+v.count))}f.clearUpdateRanges()}g.count!==-1&&(t?r.bufferSubData(p,g.offset*m.BYTES_PER_ELEMENT,m,g.offset,g.count):r.bufferSubData(p,g.offset*m.BYTES_PER_ELEMENT,m.subarray(g.offset,g.offset+g.count)),g.count=-1),f.onUploadCallback()}function l(h){return h.isInterleavedBufferAttribute&&(h=h.data),n.get(h)}function c(h){h.isInterleavedBufferAttribute&&(h=h.data);const f=n.get(h);f&&(r.deleteBuffer(f.buffer),n.delete(h))}function u(h,f){if(h.isGLBufferAttribute){const m=n.get(h);(!m||m.version<h.version)&&n.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const p=n.get(h);if(p===void 0)n.set(h,i(h,f));else if(p.version<h.version){if(p.size!==h.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");s(p.buffer,h,f),p.version=h.version}}return{get:l,remove:c,update:u}}class qa extends xt{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,l=t/2,c=Math.floor(n),u=Math.floor(i),h=c+1,f=u+1,p=e/c,m=t/u,g=[],y=[],M=[],x=[];for(let v=0;v<f;v++){const w=v*m-l;for(let E=0;E<h;E++){const A=E*p-s;y.push(A,-w,0),M.push(0,0,1),x.push(E/c),x.push(1-v/u)}}for(let v=0;v<u;v++)for(let w=0;w<c;w++){const E=w+h*v,A=w+h*(v+1),L=w+1+h*(v+1),C=w+1+h*v;g.push(E,A,C),g.push(A,L,C)}this.setIndex(g),this.setAttribute("position",new Xe(y,3)),this.setAttribute("normal",new Xe(M,3)),this.setAttribute("uv",new Xe(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new qa(e.width,e.height,e.widthSegments,e.heightSegments)}}var JS=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,KS=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,QS=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,$S=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,eM=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,tM=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,nM=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,iM=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,rM=`#ifdef USE_BATCHING
	attribute float batchId;
	uniform highp sampler2D batchingTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,sM=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( batchId );
#endif`,oM=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,aM=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,lM=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,cM=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,uM=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,hM=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,fM=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,dM=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,pM=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,mM=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,gM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,_M=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,vM=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,yM=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,xM=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,SM=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,MM=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,EM=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,wM=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,TM=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,AM="gl_FragColor = linearToOutputTexel( gl_FragColor );",bM=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,CM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,RM=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,PM=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,LM=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,IM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,DM=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,NM=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,UM=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,OM=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,FM=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,zM=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,BM=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,kM=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,HM=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,VM=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,GM=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,WM=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,XM=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,YM=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,qM=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,ZM=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,jM=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,JM=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,KM=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,QM=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,$M=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,eE=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,tE=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,nE=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,iE=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,rE=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,sE=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,oE=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,aE=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,lE=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,cE=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,uE=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,hE=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,fE=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,dE=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,pE=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,mE=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,gE=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,_E=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,vE=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,yE=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,xE=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,SE=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,ME=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,EE=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,wE=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,TE=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,AE=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,bE=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,CE=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,RE=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,PE=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,LE=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,IE=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,DE=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,NE=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,UE=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,OE=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,FE=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,zE=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,BE=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,kE=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,HE=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,VE=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color *= toneMappingExposure;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	return color;
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,GE=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,WE=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,XE=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,YE=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,qE=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,ZE=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const jE=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,JE=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,KE=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,QE=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,$E=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,ew=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,tw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,nw=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,iw=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,rw=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,sw=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,ow=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,aw=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,lw=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,cw=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,uw=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,hw=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,fw=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,dw=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,pw=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,mw=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,gw=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,_w=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,vw=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,yw=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,xw=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Sw=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Mw=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Ew=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,ww=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Tw=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Aw=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,bw=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Cw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,gt={alphahash_fragment:JS,alphahash_pars_fragment:KS,alphamap_fragment:QS,alphamap_pars_fragment:$S,alphatest_fragment:eM,alphatest_pars_fragment:tM,aomap_fragment:nM,aomap_pars_fragment:iM,batching_pars_vertex:rM,batching_vertex:sM,begin_vertex:oM,beginnormal_vertex:aM,bsdfs:lM,iridescence_fragment:cM,bumpmap_pars_fragment:uM,clipping_planes_fragment:hM,clipping_planes_pars_fragment:fM,clipping_planes_pars_vertex:dM,clipping_planes_vertex:pM,color_fragment:mM,color_pars_fragment:gM,color_pars_vertex:_M,color_vertex:vM,common:yM,cube_uv_reflection_fragment:xM,defaultnormal_vertex:SM,displacementmap_pars_vertex:MM,displacementmap_vertex:EM,emissivemap_fragment:wM,emissivemap_pars_fragment:TM,colorspace_fragment:AM,colorspace_pars_fragment:bM,envmap_fragment:CM,envmap_common_pars_fragment:RM,envmap_pars_fragment:PM,envmap_pars_vertex:LM,envmap_physical_pars_fragment:GM,envmap_vertex:IM,fog_vertex:DM,fog_pars_vertex:NM,fog_fragment:UM,fog_pars_fragment:OM,gradientmap_pars_fragment:FM,lightmap_fragment:zM,lightmap_pars_fragment:BM,lights_lambert_fragment:kM,lights_lambert_pars_fragment:HM,lights_pars_begin:VM,lights_toon_fragment:WM,lights_toon_pars_fragment:XM,lights_phong_fragment:YM,lights_phong_pars_fragment:qM,lights_physical_fragment:ZM,lights_physical_pars_fragment:jM,lights_fragment_begin:JM,lights_fragment_maps:KM,lights_fragment_end:QM,logdepthbuf_fragment:$M,logdepthbuf_pars_fragment:eE,logdepthbuf_pars_vertex:tE,logdepthbuf_vertex:nE,map_fragment:iE,map_pars_fragment:rE,map_particle_fragment:sE,map_particle_pars_fragment:oE,metalnessmap_fragment:aE,metalnessmap_pars_fragment:lE,morphcolor_vertex:cE,morphnormal_vertex:uE,morphtarget_pars_vertex:hE,morphtarget_vertex:fE,normal_fragment_begin:dE,normal_fragment_maps:pE,normal_pars_fragment:mE,normal_pars_vertex:gE,normal_vertex:_E,normalmap_pars_fragment:vE,clearcoat_normal_fragment_begin:yE,clearcoat_normal_fragment_maps:xE,clearcoat_pars_fragment:SE,iridescence_pars_fragment:ME,opaque_fragment:EE,packing:wE,premultiplied_alpha_fragment:TE,project_vertex:AE,dithering_fragment:bE,dithering_pars_fragment:CE,roughnessmap_fragment:RE,roughnessmap_pars_fragment:PE,shadowmap_pars_fragment:LE,shadowmap_pars_vertex:IE,shadowmap_vertex:DE,shadowmask_pars_fragment:NE,skinbase_vertex:UE,skinning_pars_vertex:OE,skinning_vertex:FE,skinnormal_vertex:zE,specularmap_fragment:BE,specularmap_pars_fragment:kE,tonemapping_fragment:HE,tonemapping_pars_fragment:VE,transmission_fragment:GE,transmission_pars_fragment:WE,uv_pars_fragment:XE,uv_pars_vertex:YE,uv_vertex:qE,worldpos_vertex:ZE,background_vert:jE,background_frag:JE,backgroundCube_vert:KE,backgroundCube_frag:QE,cube_vert:$E,cube_frag:ew,depth_vert:tw,depth_frag:nw,distanceRGBA_vert:iw,distanceRGBA_frag:rw,equirect_vert:sw,equirect_frag:ow,linedashed_vert:aw,linedashed_frag:lw,meshbasic_vert:cw,meshbasic_frag:uw,meshlambert_vert:hw,meshlambert_frag:fw,meshmatcap_vert:dw,meshmatcap_frag:pw,meshnormal_vert:mw,meshnormal_frag:gw,meshphong_vert:_w,meshphong_frag:vw,meshphysical_vert:yw,meshphysical_frag:xw,meshtoon_vert:Sw,meshtoon_frag:Mw,points_vert:Ew,points_frag:ww,shadow_vert:Tw,shadow_frag:Aw,sprite_vert:bw,sprite_frag:Cw},Te={common:{diffuse:{value:new Ue(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new yt},alphaMap:{value:null},alphaMapTransform:{value:new yt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new yt}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new yt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new yt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new yt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new yt},normalScale:{value:new he(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new yt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new yt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new yt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new yt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ue(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ue(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new yt},alphaTest:{value:0},uvTransform:{value:new yt}},sprite:{diffuse:{value:new Ue(16777215)},opacity:{value:1},center:{value:new he(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new yt},alphaMap:{value:null},alphaMapTransform:{value:new yt},alphaTest:{value:0}}},Si={basic:{uniforms:On([Te.common,Te.specularmap,Te.envmap,Te.aomap,Te.lightmap,Te.fog]),vertexShader:gt.meshbasic_vert,fragmentShader:gt.meshbasic_frag},lambert:{uniforms:On([Te.common,Te.specularmap,Te.envmap,Te.aomap,Te.lightmap,Te.emissivemap,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.fog,Te.lights,{emissive:{value:new Ue(0)}}]),vertexShader:gt.meshlambert_vert,fragmentShader:gt.meshlambert_frag},phong:{uniforms:On([Te.common,Te.specularmap,Te.envmap,Te.aomap,Te.lightmap,Te.emissivemap,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.fog,Te.lights,{emissive:{value:new Ue(0)},specular:{value:new Ue(1118481)},shininess:{value:30}}]),vertexShader:gt.meshphong_vert,fragmentShader:gt.meshphong_frag},standard:{uniforms:On([Te.common,Te.envmap,Te.aomap,Te.lightmap,Te.emissivemap,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.roughnessmap,Te.metalnessmap,Te.fog,Te.lights,{emissive:{value:new Ue(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:gt.meshphysical_vert,fragmentShader:gt.meshphysical_frag},toon:{uniforms:On([Te.common,Te.aomap,Te.lightmap,Te.emissivemap,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.gradientmap,Te.fog,Te.lights,{emissive:{value:new Ue(0)}}]),vertexShader:gt.meshtoon_vert,fragmentShader:gt.meshtoon_frag},matcap:{uniforms:On([Te.common,Te.bumpmap,Te.normalmap,Te.displacementmap,Te.fog,{matcap:{value:null}}]),vertexShader:gt.meshmatcap_vert,fragmentShader:gt.meshmatcap_frag},points:{uniforms:On([Te.points,Te.fog]),vertexShader:gt.points_vert,fragmentShader:gt.points_frag},dashed:{uniforms:On([Te.common,Te.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:gt.linedashed_vert,fragmentShader:gt.linedashed_frag},depth:{uniforms:On([Te.common,Te.displacementmap]),vertexShader:gt.depth_vert,fragmentShader:gt.depth_frag},normal:{uniforms:On([Te.common,Te.bumpmap,Te.normalmap,Te.displacementmap,{opacity:{value:1}}]),vertexShader:gt.meshnormal_vert,fragmentShader:gt.meshnormal_frag},sprite:{uniforms:On([Te.sprite,Te.fog]),vertexShader:gt.sprite_vert,fragmentShader:gt.sprite_frag},background:{uniforms:{uvTransform:{value:new yt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:gt.background_vert,fragmentShader:gt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:gt.backgroundCube_vert,fragmentShader:gt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:gt.cube_vert,fragmentShader:gt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:gt.equirect_vert,fragmentShader:gt.equirect_frag},distanceRGBA:{uniforms:On([Te.common,Te.displacementmap,{referencePosition:{value:new U},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:gt.distanceRGBA_vert,fragmentShader:gt.distanceRGBA_frag},shadow:{uniforms:On([Te.lights,Te.fog,{color:{value:new Ue(0)},opacity:{value:1}}]),vertexShader:gt.shadow_vert,fragmentShader:gt.shadow_frag}};Si.physical={uniforms:On([Si.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new yt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new yt},clearcoatNormalScale:{value:new he(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new yt},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new yt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new yt},sheen:{value:0},sheenColor:{value:new Ue(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new yt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new yt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new yt},transmissionSamplerSize:{value:new he},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new yt},attenuationDistance:{value:0},attenuationColor:{value:new Ue(0)},specularColor:{value:new Ue(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new yt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new yt},anisotropyVector:{value:new he},anisotropyMap:{value:null},anisotropyMapTransform:{value:new yt}}]),vertexShader:gt.meshphysical_vert,fragmentShader:gt.meshphysical_frag};const pc={r:0,b:0,g:0};function Rw(r,e,t,n,i,s,l){const c=new Ue(0);let u=s===!0?0:1,h,f,p=null,m=0,g=null;function y(x,v){let w=!1,E=v.isScene===!0?v.background:null;E&&E.isTexture&&(E=(v.backgroundBlurriness>0?t:e).get(E)),E===null?M(c,u):E&&E.isColor&&(M(E,1),w=!0);const A=r.xr.getEnvironmentBlendMode();A==="additive"?n.buffers.color.setClear(0,0,0,1,l):A==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,l),(r.autoClear||w)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),E&&(E.isCubeTexture||E.mapping===bo)?(f===void 0&&(f=new ln(new Ms(1,1,1),new Ti({name:"BackgroundCubeMaterial",uniforms:wo(Si.backgroundCube.uniforms),vertexShader:Si.backgroundCube.vertexShader,fragmentShader:Si.backgroundCube.fragmentShader,side:Rn,depthTest:!1,depthWrite:!1,fog:!1})),f.geometry.deleteAttribute("normal"),f.geometry.deleteAttribute("uv"),f.onBeforeRender=function(L,C,I){this.matrixWorld.copyPosition(I.matrixWorld)},Object.defineProperty(f.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(f)),f.material.uniforms.envMap.value=E,f.material.uniforms.flipEnvMap.value=E.isCubeTexture&&E.isRenderTargetTexture===!1?-1:1,f.material.uniforms.backgroundBlurriness.value=v.backgroundBlurriness,f.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,f.material.toneMapped=It.getTransfer(E.colorSpace)!==Ft,(p!==E||m!==E.version||g!==r.toneMapping)&&(f.material.needsUpdate=!0,p=E,m=E.version,g=r.toneMapping),f.layers.enableAll(),x.unshift(f,f.geometry,f.material,0,0,null)):E&&E.isTexture&&(h===void 0&&(h=new ln(new qa(2,2),new Ti({name:"BackgroundMaterial",uniforms:wo(Si.background.uniforms),vertexShader:Si.background.vertexShader,fragmentShader:Si.background.fragmentShader,side:or,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(h)),h.material.uniforms.t2D.value=E,h.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,h.material.toneMapped=It.getTransfer(E.colorSpace)!==Ft,E.matrixAutoUpdate===!0&&E.updateMatrix(),h.material.uniforms.uvTransform.value.copy(E.matrix),(p!==E||m!==E.version||g!==r.toneMapping)&&(h.material.needsUpdate=!0,p=E,m=E.version,g=r.toneMapping),h.layers.enableAll(),x.unshift(h,h.geometry,h.material,0,0,null))}function M(x,v){x.getRGB(pc,$_(r)),n.buffers.color.setClear(pc.r,pc.g,pc.b,v,l)}return{getClearColor:function(){return c},setClearColor:function(x,v=1){c.set(x),u=v,M(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(x){u=x,M(c,u)},render:y}}function Pw(r,e,t,n){const i=r.getParameter(r.MAX_VERTEX_ATTRIBS),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),l=n.isWebGL2||s!==null,c={},u=x(null);let h=u,f=!1;function p(V,j,te,ue,F){let H=!1;if(l){const X=M(ue,te,j);h!==X&&(h=X,g(h.object)),H=v(V,ue,te,F),H&&w(V,ue,te,F)}else{const X=j.wireframe===!0;(h.geometry!==ue.id||h.program!==te.id||h.wireframe!==X)&&(h.geometry=ue.id,h.program=te.id,h.wireframe=X,H=!0)}F!==null&&t.update(F,r.ELEMENT_ARRAY_BUFFER),(H||f)&&(f=!1,z(V,j,te,ue),F!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.get(F).buffer))}function m(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function g(V){return n.isWebGL2?r.bindVertexArray(V):s.bindVertexArrayOES(V)}function y(V){return n.isWebGL2?r.deleteVertexArray(V):s.deleteVertexArrayOES(V)}function M(V,j,te){const ue=te.wireframe===!0;let F=c[V.id];F===void 0&&(F={},c[V.id]=F);let H=F[j.id];H===void 0&&(H={},F[j.id]=H);let X=H[ue];return X===void 0&&(X=x(m()),H[ue]=X),X}function x(V){const j=[],te=[],ue=[];for(let F=0;F<i;F++)j[F]=0,te[F]=0,ue[F]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:j,enabledAttributes:te,attributeDivisors:ue,object:V,attributes:{},index:null}}function v(V,j,te,ue){const F=h.attributes,H=j.attributes;let X=0;const Z=te.getAttributes();for(const le in Z)if(Z[le].location>=0){const ce=F[le];let Me=H[le];if(Me===void 0&&(le==="instanceMatrix"&&V.instanceMatrix&&(Me=V.instanceMatrix),le==="instanceColor"&&V.instanceColor&&(Me=V.instanceColor)),ce===void 0||ce.attribute!==Me||Me&&ce.data!==Me.data)return!0;X++}return h.attributesNum!==X||h.index!==ue}function w(V,j,te,ue){const F={},H=j.attributes;let X=0;const Z=te.getAttributes();for(const le in Z)if(Z[le].location>=0){let ce=H[le];ce===void 0&&(le==="instanceMatrix"&&V.instanceMatrix&&(ce=V.instanceMatrix),le==="instanceColor"&&V.instanceColor&&(ce=V.instanceColor));const Me={};Me.attribute=ce,ce&&ce.data&&(Me.data=ce.data),F[le]=Me,X++}h.attributes=F,h.attributesNum=X,h.index=ue}function E(){const V=h.newAttributes;for(let j=0,te=V.length;j<te;j++)V[j]=0}function A(V){L(V,0)}function L(V,j){const te=h.newAttributes,ue=h.enabledAttributes,F=h.attributeDivisors;te[V]=1,ue[V]===0&&(r.enableVertexAttribArray(V),ue[V]=1),F[V]!==j&&((n.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](V,j),F[V]=j)}function C(){const V=h.newAttributes,j=h.enabledAttributes;for(let te=0,ue=j.length;te<ue;te++)j[te]!==V[te]&&(r.disableVertexAttribArray(te),j[te]=0)}function I(V,j,te,ue,F,H,X){X===!0?r.vertexAttribIPointer(V,j,te,F,H):r.vertexAttribPointer(V,j,te,ue,F,H)}function z(V,j,te,ue){if(n.isWebGL2===!1&&(V.isInstancedMesh||ue.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;E();const F=ue.attributes,H=te.getAttributes(),X=j.defaultAttributeValues;for(const Z in H){const le=H[Z];if(le.location>=0){let J=F[Z];if(J===void 0&&(Z==="instanceMatrix"&&V.instanceMatrix&&(J=V.instanceMatrix),Z==="instanceColor"&&V.instanceColor&&(J=V.instanceColor)),J!==void 0){const ce=J.normalized,Me=J.itemSize,be=t.get(J);if(be===void 0)continue;const Ae=be.buffer,nt=be.type,ot=be.bytesPerElement,Ve=n.isWebGL2===!0&&(nt===r.INT||nt===r.UNSIGNED_INT||J.gpuType===bd);if(J.isInterleavedBufferAttribute){const Ze=J.data,k=Ze.stride,xe=J.offset;if(Ze.isInstancedInterleavedBuffer){for(let fe=0;fe<le.locationSize;fe++)L(le.location+fe,Ze.meshPerAttribute);V.isInstancedMesh!==!0&&ue._maxInstanceCount===void 0&&(ue._maxInstanceCount=Ze.meshPerAttribute*Ze.count)}else for(let fe=0;fe<le.locationSize;fe++)A(le.location+fe);r.bindBuffer(r.ARRAY_BUFFER,Ae);for(let fe=0;fe<le.locationSize;fe++)I(le.location+fe,Me/le.locationSize,nt,ce,k*ot,(xe+Me/le.locationSize*fe)*ot,Ve)}else{if(J.isInstancedBufferAttribute){for(let Ze=0;Ze<le.locationSize;Ze++)L(le.location+Ze,J.meshPerAttribute);V.isInstancedMesh!==!0&&ue._maxInstanceCount===void 0&&(ue._maxInstanceCount=J.meshPerAttribute*J.count)}else for(let Ze=0;Ze<le.locationSize;Ze++)A(le.location+Ze);r.bindBuffer(r.ARRAY_BUFFER,Ae);for(let Ze=0;Ze<le.locationSize;Ze++)I(le.location+Ze,Me/le.locationSize,nt,ce,Me*ot,Me/le.locationSize*Ze*ot,Ve)}}else if(X!==void 0){const ce=X[Z];if(ce!==void 0)switch(ce.length){case 2:r.vertexAttrib2fv(le.location,ce);break;case 3:r.vertexAttrib3fv(le.location,ce);break;case 4:r.vertexAttrib4fv(le.location,ce);break;default:r.vertexAttrib1fv(le.location,ce)}}}}C()}function b(){$();for(const V in c){const j=c[V];for(const te in j){const ue=j[te];for(const F in ue)y(ue[F].object),delete ue[F];delete j[te]}delete c[V]}}function R(V){if(c[V.id]===void 0)return;const j=c[V.id];for(const te in j){const ue=j[te];for(const F in ue)y(ue[F].object),delete ue[F];delete j[te]}delete c[V.id]}function B(V){for(const j in c){const te=c[j];if(te[V.id]===void 0)continue;const ue=te[V.id];for(const F in ue)y(ue[F].object),delete ue[F];delete te[V.id]}}function $(){ae(),f=!0,h!==u&&(h=u,g(h.object))}function ae(){u.geometry=null,u.program=null,u.wireframe=!1}return{setup:p,reset:$,resetDefaultState:ae,dispose:b,releaseStatesOfGeometry:R,releaseStatesOfProgram:B,initAttributes:E,enableAttribute:A,disableUnusedAttributes:C}}function Lw(r,e,t,n){const i=n.isWebGL2;let s;function l(f){s=f}function c(f,p){r.drawArrays(s,f,p),t.update(p,s,1)}function u(f,p,m){if(m===0)return;let g,y;if(i)g=r,y="drawArraysInstanced";else if(g=e.get("ANGLE_instanced_arrays"),y="drawArraysInstancedANGLE",g===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}g[y](s,f,p,m),t.update(p,s,m)}function h(f,p,m){if(m===0)return;const g=e.get("WEBGL_multi_draw");if(g===null)for(let y=0;y<m;y++)this.render(f[y],p[y]);else{g.multiDrawArraysWEBGL(s,f,0,p,0,m);let y=0;for(let M=0;M<m;M++)y+=p[M];t.update(y,s,1)}}this.setMode=l,this.render=c,this.renderInstances=u,this.renderMultiDraw=h}function Iw(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const I=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(I.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(I){if(I==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";I="mediump"}return I==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const l=typeof WebGL2RenderingContext<"u"&&r.constructor.name==="WebGL2RenderingContext";let c=t.precision!==void 0?t.precision:"highp";const u=s(c);u!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",u,"instead."),c=u);const h=l||e.has("WEBGL_draw_buffers"),f=t.logarithmicDepthBuffer===!0,p=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),m=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),g=r.getParameter(r.MAX_TEXTURE_SIZE),y=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),M=r.getParameter(r.MAX_VERTEX_ATTRIBS),x=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),v=r.getParameter(r.MAX_VARYING_VECTORS),w=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),E=m>0,A=l||e.has("OES_texture_float"),L=E&&A,C=l?r.getParameter(r.MAX_SAMPLES):0;return{isWebGL2:l,drawBuffers:h,getMaxAnisotropy:i,getMaxPrecision:s,precision:c,logarithmicDepthBuffer:f,maxTextures:p,maxVertexTextures:m,maxTextureSize:g,maxCubemapSize:y,maxAttributes:M,maxVertexUniforms:x,maxVaryings:v,maxFragmentUniforms:w,vertexTextures:E,floatFragmentTextures:A,floatVertexTextures:L,maxSamples:C}}function Dw(r){const e=this;let t=null,n=0,i=!1,s=!1;const l=new Fi,c=new yt,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(p,m){const g=p.length!==0||m||n!==0||i;return i=m,n=p.length,g},this.beginShadows=function(){s=!0,f(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(p,m){t=f(p,m,0)},this.setState=function(p,m,g){const y=p.clippingPlanes,M=p.clipIntersection,x=p.clipShadows,v=r.get(p);if(!i||y===null||y.length===0||s&&!x)s?f(null):h();else{const w=s?0:n,E=w*4;let A=v.clippingState||null;u.value=A,A=f(y,m,E,g);for(let L=0;L!==E;++L)A[L]=t[L];v.clippingState=A,this.numIntersection=M?this.numPlanes:0,this.numPlanes+=w}};function h(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function f(p,m,g,y){const M=p!==null?p.length:0;let x=null;if(M!==0){if(x=u.value,y!==!0||x===null){const v=g+M*4,w=m.matrixWorldInverse;c.getNormalMatrix(w),(x===null||x.length<v)&&(x=new Float32Array(v));for(let E=0,A=g;E!==M;++E,A+=4)l.copy(p[E]).applyMatrix4(w,c),l.normal.toArray(x,A),x[A+3]=l.constant}u.value=x,u.needsUpdate=!0}return e.numPlanes=M,e.numIntersection=0,x}}function Nw(r){let e=new WeakMap;function t(l,c){return c===xa?l.mapping=ar:c===Sa&&(l.mapping=Ir),l}function n(l){if(l&&l.isTexture){const c=l.mapping;if(c===xa||c===Sa)if(e.has(l)){const u=e.get(l).texture;return t(u,l.mapping)}else{const u=l.image;if(u&&u.height>0){const h=new tv(u.height/2);return h.fromEquirectangularTexture(r,l),e.set(l,h),l.addEventListener("dispose",i),t(h.texture,l.mapping)}else return null}}return l}function i(l){const c=l.target;c.removeEventListener("dispose",i);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class Lr extends Wa{constructor(e=-1,t=1,n=1,i=-1,s=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=l,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,l){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,l=n+e,c=i+t,u=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,f=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,l=s+h*this.view.width,c-=f*this.view.offsetY,u=c-f*this.view.height}this.projectionMatrix.makeOrthographic(s,l,c,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const mo=4,dg=[.125,.215,.35,.446,.526,.582],ls=20,nf=new Lr,pg=new Ue;let rf=null,sf=0,of=0;const as=(1+Math.sqrt(5))/2,no=1/as,mg=[new U(1,1,1),new U(-1,1,1),new U(1,1,-1),new U(-1,1,-1),new U(0,as,no),new U(0,as,-no),new U(no,0,as),new U(-no,0,as),new U(as,no,0),new U(-as,no,0)];class pd{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){rf=this._renderer.getRenderTarget(),sf=this._renderer.getActiveCubeFace(),of=this._renderer.getActiveMipmapLevel(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=vg(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=_g(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(rf,sf,of),e.scissorTest=!1,mc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===ar||e.mapping===Ir?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),rf=this._renderer.getRenderTarget(),sf=this._renderer.getActiveCubeFace(),of=this._renderer.getActiveMipmapLevel();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:$t,minFilter:$t,generateMipmaps:!1,type:So,format:Fn,colorSpace:Vi,depthBuffer:!1},i=gg(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=gg(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=Uw(s)),this._blurMaterial=Ow(s,e,t)}return i}_compileMaterial(e){const t=new ln(this._lodPlanes[0],e);this._renderer.compile(t,nf)}_sceneToCubeUV(e,t,n,i){const c=new en(90,1,t,n),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],f=this._renderer,p=f.autoClear,m=f.toneMapping;f.getClearColor(pg),f.toneMapping=Bi,f.autoClear=!1;const g=new Or({name:"PMREM.Background",side:Rn,depthWrite:!1,depthTest:!1}),y=new ln(new Ms,g);let M=!1;const x=e.background;x?x.isColor&&(g.color.copy(x),e.background=null,M=!0):(g.color.copy(pg),M=!0);for(let v=0;v<6;v++){const w=v%3;w===0?(c.up.set(0,u[v],0),c.lookAt(h[v],0,0)):w===1?(c.up.set(0,0,u[v]),c.lookAt(0,h[v],0)):(c.up.set(0,u[v],0),c.lookAt(0,0,h[v]));const E=this._cubeSize;mc(i,w*E,v>2?E:0,E,E),f.setRenderTarget(i),M&&f.render(y,c),f.render(e,c)}y.geometry.dispose(),y.material.dispose(),f.toneMapping=m,f.autoClear=p,e.background=x}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===ar||e.mapping===Ir;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=vg()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=_g());const s=i?this._cubemapMaterial:this._equirectMaterial,l=new ln(this._lodPlanes[0],s),c=s.uniforms;c.envMap.value=e;const u=this._cubeSize;mc(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(l,nf)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),l=mg[(i-1)%mg.length];this._blur(e,i-1,i,s,l)}t.autoClear=n}_blur(e,t,n,i,s){const l=this._pingPongRenderTarget;this._halfBlur(e,l,t,n,i,"latitudinal",s),this._halfBlur(l,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,l,c){const u=this._renderer,h=this._blurMaterial;l!=="latitudinal"&&l!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const f=3,p=new ln(this._lodPlanes[i],h),m=h.uniforms,g=this._sizeLods[n]-1,y=isFinite(s)?Math.PI/(2*g):2*Math.PI/(2*ls-1),M=s/y,x=isFinite(s)?1+Math.floor(f*M):ls;x>ls&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${x} samples when the maximum is set to ${ls}`);const v=[];let w=0;for(let I=0;I<ls;++I){const z=I/M,b=Math.exp(-z*z/2);v.push(b),I===0?w+=b:I<x&&(w+=2*b)}for(let I=0;I<v.length;I++)v[I]=v[I]/w;m.envMap.value=e.texture,m.samples.value=x,m.weights.value=v,m.latitudinal.value=l==="latitudinal",c&&(m.poleAxis.value=c);const{_lodMax:E}=this;m.dTheta.value=y,m.mipInt.value=E-n;const A=this._sizeLods[i],L=3*A*(i>E-mo?i-E+mo:0),C=4*(this._cubeSize-A);mc(t,L,C,3*A,2*A),u.setRenderTarget(t),u.render(p,nf)}}function Uw(r){const e=[],t=[],n=[];let i=r;const s=r-mo+1+dg.length;for(let l=0;l<s;l++){const c=Math.pow(2,i);t.push(c);let u=1/c;l>r-mo?u=dg[l-r+mo-1]:l===0&&(u=0),n.push(u);const h=1/(c-2),f=-h,p=1+h,m=[f,f,p,f,p,p,f,f,p,p,f,p],g=6,y=6,M=3,x=2,v=1,w=new Float32Array(M*y*g),E=new Float32Array(x*y*g),A=new Float32Array(v*y*g);for(let C=0;C<g;C++){const I=C%3*2/3-1,z=C>2?0:-1,b=[I,z,0,I+2/3,z,0,I+2/3,z+1,0,I,z,0,I+2/3,z+1,0,I,z+1,0];w.set(b,M*y*C),E.set(m,x*y*C);const R=[C,C,C,C,C,C];A.set(R,v*y*C)}const L=new xt;L.setAttribute("position",new Nt(w,M)),L.setAttribute("uv",new Nt(E,x)),L.setAttribute("faceIndex",new Nt(A,v)),e.push(L),i>mo&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function gg(r,e,t){const n=new wi(r,e,t);return n.texture.mapping=bo,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function mc(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function Ow(r,e,t){const n=new Float32Array(ls),i=new U(0,1,0);return new Ti({name:"SphericalGaussianBlur",defines:{n:ls,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Gd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:sr,depthTest:!1,depthWrite:!1})}function _g(){return new Ti({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Gd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:sr,depthTest:!1,depthWrite:!1})}function vg(){return new Ti({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Gd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:sr,depthTest:!1,depthWrite:!1})}function Gd(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Fw(r){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const u=c.mapping,h=u===xa||u===Sa,f=u===ar||u===Ir;if(h||f)if(c.isRenderTargetTexture&&c.needsPMREMUpdate===!0){c.needsPMREMUpdate=!1;let p=e.get(c);return t===null&&(t=new pd(r)),p=h?t.fromEquirectangular(c,p):t.fromCubemap(c,p),e.set(c,p),p.texture}else{if(e.has(c))return e.get(c).texture;{const p=c.image;if(h&&p&&p.height>0||f&&p&&i(p)){t===null&&(t=new pd(r));const m=h?t.fromEquirectangular(c):t.fromCubemap(c);return e.set(c,m),c.addEventListener("dispose",s),m.texture}else return null}}}return c}function i(c){let u=0;const h=6;for(let f=0;f<h;f++)c[f]!==void 0&&u++;return u===h}function s(c){const u=c.target;u.removeEventListener("dispose",s);const h=e.get(u);h!==void 0&&(e.delete(u),h.dispose())}function l(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:l}}function zw(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?(t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance")):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function Bw(r,e,t,n){const i={},s=new WeakMap;function l(p){const m=p.target;m.index!==null&&e.remove(m.index);for(const y in m.attributes)e.remove(m.attributes[y]);for(const y in m.morphAttributes){const M=m.morphAttributes[y];for(let x=0,v=M.length;x<v;x++)e.remove(M[x])}m.removeEventListener("dispose",l),delete i[m.id];const g=s.get(m);g&&(e.remove(g),s.delete(m)),n.releaseStatesOfGeometry(m),m.isInstancedBufferGeometry===!0&&delete m._maxInstanceCount,t.memory.geometries--}function c(p,m){return i[m.id]===!0||(m.addEventListener("dispose",l),i[m.id]=!0,t.memory.geometries++),m}function u(p){const m=p.attributes;for(const y in m)e.update(m[y],r.ARRAY_BUFFER);const g=p.morphAttributes;for(const y in g){const M=g[y];for(let x=0,v=M.length;x<v;x++)e.update(M[x],r.ARRAY_BUFFER)}}function h(p){const m=[],g=p.index,y=p.attributes.position;let M=0;if(g!==null){const w=g.array;M=g.version;for(let E=0,A=w.length;E<A;E+=3){const L=w[E+0],C=w[E+1],I=w[E+2];m.push(L,C,C,I,I,L)}}else if(y!==void 0){const w=y.array;M=y.version;for(let E=0,A=w.length/3-1;E<A;E+=3){const L=E+0,C=E+1,I=E+2;m.push(L,C,C,I,I,L)}}else return;const x=new(j_(m)?Hd:kd)(m,1);x.version=M;const v=s.get(p);v&&e.remove(v),s.set(p,x)}function f(p){const m=s.get(p);if(m){const g=p.index;g!==null&&m.version<g.version&&h(p)}else h(p);return s.get(p)}return{get:c,update:u,getWireframeAttribute:f}}function kw(r,e,t,n){const i=n.isWebGL2;let s;function l(g){s=g}let c,u;function h(g){c=g.type,u=g.bytesPerElement}function f(g,y){r.drawElements(s,y,c,g*u),t.update(y,s,1)}function p(g,y,M){if(M===0)return;let x,v;if(i)x=r,v="drawElementsInstanced";else if(x=e.get("ANGLE_instanced_arrays"),v="drawElementsInstancedANGLE",x===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}x[v](s,y,c,g*u,M),t.update(y,s,M)}function m(g,y,M){if(M===0)return;const x=e.get("WEBGL_multi_draw");if(x===null)for(let v=0;v<M;v++)this.render(g[v]/u,y[v]);else{x.multiDrawElementsWEBGL(s,y,0,c,g,0,M);let v=0;for(let w=0;w<M;w++)v+=y[w];t.update(v,s,1)}}this.setMode=l,this.setIndex=h,this.render=f,this.renderInstances=p,this.renderMultiDraw=m}function Hw(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,l,c){switch(t.calls++,l){case r.TRIANGLES:t.triangles+=c*(s/3);break;case r.LINES:t.lines+=c*(s/2);break;case r.LINE_STRIP:t.lines+=c*(s-1);break;case r.LINE_LOOP:t.lines+=c*s;break;case r.POINTS:t.points+=c*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",l);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function Vw(r,e){return r[0]-e[0]}function Gw(r,e){return Math.abs(e[1])-Math.abs(r[1])}function Ww(r,e,t){const n={},i=new Float32Array(8),s=new WeakMap,l=new Dt,c=[];for(let h=0;h<8;h++)c[h]=[h,0];function u(h,f,p){const m=h.morphTargetInfluences;if(e.isWebGL2===!0){const g=f.morphAttributes.position||f.morphAttributes.normal||f.morphAttributes.color,y=g!==void 0?g.length:0;let M=s.get(f);if(M===void 0||M.count!==y){let V=function(){$.dispose(),s.delete(f),f.removeEventListener("dispose",V)};M!==void 0&&M.texture.dispose();const w=f.morphAttributes.position!==void 0,E=f.morphAttributes.normal!==void 0,A=f.morphAttributes.color!==void 0,L=f.morphAttributes.position||[],C=f.morphAttributes.normal||[],I=f.morphAttributes.color||[];let z=0;w===!0&&(z=1),E===!0&&(z=2),A===!0&&(z=3);let b=f.attributes.position.count*z,R=1;b>e.maxTextureSize&&(R=Math.ceil(b/e.maxTextureSize),b=e.maxTextureSize);const B=new Float32Array(b*R*4*y),$=new uu(B,b,R,y);$.type=Mi,$.needsUpdate=!0;const ae=z*4;for(let j=0;j<y;j++){const te=L[j],ue=C[j],F=I[j],H=b*R*4*j;for(let X=0;X<te.count;X++){const Z=X*ae;w===!0&&(l.fromBufferAttribute(te,X),B[H+Z+0]=l.x,B[H+Z+1]=l.y,B[H+Z+2]=l.z,B[H+Z+3]=0),E===!0&&(l.fromBufferAttribute(ue,X),B[H+Z+4]=l.x,B[H+Z+5]=l.y,B[H+Z+6]=l.z,B[H+Z+7]=0),A===!0&&(l.fromBufferAttribute(F,X),B[H+Z+8]=l.x,B[H+Z+9]=l.y,B[H+Z+10]=l.z,B[H+Z+11]=F.itemSize===4?l.w:1)}}M={count:y,texture:$,size:new he(b,R)},s.set(f,M),f.addEventListener("dispose",V)}let x=0;for(let w=0;w<m.length;w++)x+=m[w];const v=f.morphTargetsRelative?1:1-x;p.getUniforms().setValue(r,"morphTargetBaseInfluence",v),p.getUniforms().setValue(r,"morphTargetInfluences",m),p.getUniforms().setValue(r,"morphTargetsTexture",M.texture,t),p.getUniforms().setValue(r,"morphTargetsTextureSize",M.size)}else{const g=m===void 0?0:m.length;let y=n[f.id];if(y===void 0||y.length!==g){y=[];for(let E=0;E<g;E++)y[E]=[E,0];n[f.id]=y}for(let E=0;E<g;E++){const A=y[E];A[0]=E,A[1]=m[E]}y.sort(Gw);for(let E=0;E<8;E++)E<g&&y[E][1]?(c[E][0]=y[E][0],c[E][1]=y[E][1]):(c[E][0]=Number.MAX_SAFE_INTEGER,c[E][1]=0);c.sort(Vw);const M=f.morphAttributes.position,x=f.morphAttributes.normal;let v=0;for(let E=0;E<8;E++){const A=c[E],L=A[0],C=A[1];L!==Number.MAX_SAFE_INTEGER&&C?(M&&f.getAttribute("morphTarget"+E)!==M[L]&&f.setAttribute("morphTarget"+E,M[L]),x&&f.getAttribute("morphNormal"+E)!==x[L]&&f.setAttribute("morphNormal"+E,x[L]),i[E]=C,v+=C):(M&&f.hasAttribute("morphTarget"+E)===!0&&f.deleteAttribute("morphTarget"+E),x&&f.hasAttribute("morphNormal"+E)===!0&&f.deleteAttribute("morphNormal"+E),i[E]=0)}const w=f.morphTargetsRelative?1:1-v;p.getUniforms().setValue(r,"morphTargetBaseInfluence",w),p.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:u}}function Xw(r,e,t,n){let i=new WeakMap;function s(u){const h=n.render.frame,f=u.geometry,p=e.get(u,f);if(i.get(p)!==h&&(e.update(p),i.set(p,h)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),i.get(u)!==h&&(t.update(u.instanceMatrix,r.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,r.ARRAY_BUFFER),i.set(u,h))),u.isSkinnedMesh){const m=u.skeleton;i.get(m)!==h&&(m.update(),i.set(m,h))}return p}function l(){i=new WeakMap}function c(u){const h=u.target;h.removeEventListener("dispose",c),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:s,dispose:l}}class Wd extends tn{constructor(e,t,n,i,s,l,c,u,h,f){if(f=f!==void 0?f:Rr,f!==Rr&&f!==vs)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&f===Rr&&(n=ir),n===void 0&&f===vs&&(n=Cr),super(null,i,s,l,c,u,f,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:Qt,this.minFilter=u!==void 0?u:Qt,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}const iv=new tn,rv=new Wd(1,1);rv.compareFunction=Od;const sv=new uu,ov=new Bd,av=new Xa,yg=[],xg=[],Sg=new Float32Array(16),Mg=new Float32Array(9),Eg=new Float32Array(4);function Co(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=yg[i];if(s===void 0&&(s=new Float32Array(i),yg[i]=s),e!==0){n.toArray(s,0);for(let l=1,c=0;l!==e;++l)c+=t,r[l].toArray(s,c)}return s}function cn(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function un(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function hu(r,e){let t=xg[e];t===void 0&&(t=new Int32Array(e),xg[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function Yw(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function qw(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(cn(t,e))return;r.uniform2fv(this.addr,e),un(t,e)}}function Zw(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(cn(t,e))return;r.uniform3fv(this.addr,e),un(t,e)}}function jw(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(cn(t,e))return;r.uniform4fv(this.addr,e),un(t,e)}}function Jw(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(cn(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),un(t,e)}else{if(cn(t,n))return;Eg.set(n),r.uniformMatrix2fv(this.addr,!1,Eg),un(t,n)}}function Kw(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(cn(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),un(t,e)}else{if(cn(t,n))return;Mg.set(n),r.uniformMatrix3fv(this.addr,!1,Mg),un(t,n)}}function Qw(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(cn(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),un(t,e)}else{if(cn(t,n))return;Sg.set(n),r.uniformMatrix4fv(this.addr,!1,Sg),un(t,n)}}function $w(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function e1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(cn(t,e))return;r.uniform2iv(this.addr,e),un(t,e)}}function t1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(cn(t,e))return;r.uniform3iv(this.addr,e),un(t,e)}}function n1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(cn(t,e))return;r.uniform4iv(this.addr,e),un(t,e)}}function i1(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function r1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(cn(t,e))return;r.uniform2uiv(this.addr,e),un(t,e)}}function s1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(cn(t,e))return;r.uniform3uiv(this.addr,e),un(t,e)}}function o1(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(cn(t,e))return;r.uniform4uiv(this.addr,e),un(t,e)}}function a1(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i);const s=this.type===r.SAMPLER_2D_SHADOW?rv:iv;t.setTexture2D(e||s,i)}function l1(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||ov,i)}function c1(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||av,i)}function u1(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||sv,i)}function h1(r){switch(r){case 5126:return Yw;case 35664:return qw;case 35665:return Zw;case 35666:return jw;case 35674:return Jw;case 35675:return Kw;case 35676:return Qw;case 5124:case 35670:return $w;case 35667:case 35671:return e1;case 35668:case 35672:return t1;case 35669:case 35673:return n1;case 5125:return i1;case 36294:return r1;case 36295:return s1;case 36296:return o1;case 35678:case 36198:case 36298:case 36306:case 35682:return a1;case 35679:case 36299:case 36307:return l1;case 35680:case 36300:case 36308:case 36293:return c1;case 36289:case 36303:case 36311:case 36292:return u1}}function f1(r,e){r.uniform1fv(this.addr,e)}function d1(r,e){const t=Co(e,this.size,2);r.uniform2fv(this.addr,t)}function p1(r,e){const t=Co(e,this.size,3);r.uniform3fv(this.addr,t)}function m1(r,e){const t=Co(e,this.size,4);r.uniform4fv(this.addr,t)}function g1(r,e){const t=Co(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function _1(r,e){const t=Co(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function v1(r,e){const t=Co(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function y1(r,e){r.uniform1iv(this.addr,e)}function x1(r,e){r.uniform2iv(this.addr,e)}function S1(r,e){r.uniform3iv(this.addr,e)}function M1(r,e){r.uniform4iv(this.addr,e)}function E1(r,e){r.uniform1uiv(this.addr,e)}function w1(r,e){r.uniform2uiv(this.addr,e)}function T1(r,e){r.uniform3uiv(this.addr,e)}function A1(r,e){r.uniform4uiv(this.addr,e)}function b1(r,e,t){const n=this.cache,i=e.length,s=hu(t,i);cn(n,s)||(r.uniform1iv(this.addr,s),un(n,s));for(let l=0;l!==i;++l)t.setTexture2D(e[l]||iv,s[l])}function C1(r,e,t){const n=this.cache,i=e.length,s=hu(t,i);cn(n,s)||(r.uniform1iv(this.addr,s),un(n,s));for(let l=0;l!==i;++l)t.setTexture3D(e[l]||ov,s[l])}function R1(r,e,t){const n=this.cache,i=e.length,s=hu(t,i);cn(n,s)||(r.uniform1iv(this.addr,s),un(n,s));for(let l=0;l!==i;++l)t.setTextureCube(e[l]||av,s[l])}function P1(r,e,t){const n=this.cache,i=e.length,s=hu(t,i);cn(n,s)||(r.uniform1iv(this.addr,s),un(n,s));for(let l=0;l!==i;++l)t.setTexture2DArray(e[l]||sv,s[l])}function L1(r){switch(r){case 5126:return f1;case 35664:return d1;case 35665:return p1;case 35666:return m1;case 35674:return g1;case 35675:return _1;case 35676:return v1;case 5124:case 35670:return y1;case 35667:case 35671:return x1;case 35668:case 35672:return S1;case 35669:case 35673:return M1;case 5125:return E1;case 36294:return w1;case 36295:return T1;case 36296:return A1;case 35678:case 36198:case 36298:case 36306:case 35682:return b1;case 35679:case 36299:case 36307:return C1;case 35680:case 36300:case 36308:case 36293:return R1;case 36289:case 36303:case 36311:case 36292:return P1}}class I1{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=h1(t.type)}}class D1{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=L1(t.type)}}class N1{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,l=i.length;s!==l;++s){const c=i[s];c.setValue(e,t[c.id],n)}}}const af=/(\w+)(\])?(\[|\.)?/g;function wg(r,e){r.seq.push(e),r.map[e.id]=e}function U1(r,e,t){const n=r.name,i=n.length;for(af.lastIndex=0;;){const s=af.exec(n),l=af.lastIndex;let c=s[1];const u=s[2]==="]",h=s[3];if(u&&(c=c|0),h===void 0||h==="["&&l+2===i){wg(t,h===void 0?new I1(c,r,e):new D1(c,r,e));break}else{let p=t.map[c];p===void 0&&(p=new N1(c),wg(t,p)),t=p}}}class jc{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),l=e.getUniformLocation(t,s.name);U1(s,l,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,l=t.length;s!==l;++s){const c=t[s],u=n[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const l=e[i];l.id in t&&n.push(l)}return n}}function Tg(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}const O1=37297;let F1=0;function z1(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let l=i;l<s;l++){const c=l+1;n.push(`${c===e?">":" "} ${c}: ${t[l]}`)}return n.join(`
`)}function B1(r){const e=It.getPrimaries(It.workingColorSpace),t=It.getPrimaries(r);let n;switch(e===t?n="":e===Ra&&t===Ca?n="LinearDisplayP3ToLinearSRGB":e===Ca&&t===Ra&&(n="LinearSRGBToLinearDisplayP3"),r){case Vi:case Va:return[n,"LinearTransferOETF"];case an:case cu:return[n,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",r),[n,"LinearTransferOETF"]}}function Ag(r,e,t){const n=r.getShaderParameter(e,r.COMPILE_STATUS),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const l=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+z1(r.getShaderSource(e),l)}else return i}function k1(r,e){const t=B1(e);return`vec4 ${r}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`}function H1(r,e){let t;switch(e){case S_:t="Linear";break;case M_:t="Reinhard";break;case E_:t="OptimizedCineon";break;case Td:t="ACESFilmic";break;case T_:t="AgX";break;case w_:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function V1(r){return[r.extensionDerivatives||r.envMapCubeUVHeight||r.bumpMap||r.normalMapTangentSpace||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(go).join(`
`)}function G1(r){return[r.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":""].filter(go).join(`
`)}function W1(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function X1(r,e){const t={},n=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),l=s.name;let c=1;s.type===r.FLOAT_MAT2&&(c=2),s.type===r.FLOAT_MAT3&&(c=3),s.type===r.FLOAT_MAT4&&(c=4),t[l]={type:s.type,location:r.getAttribLocation(e,l),locationSize:c}}return t}function go(r){return r!==""}function bg(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Cg(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Y1=/^[ \t]*#include +<([\w\d./]+)>/gm;function md(r){return r.replace(Y1,Z1)}const q1=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function Z1(r,e){let t=gt[e];if(t===void 0){const n=q1.get(e);if(n!==void 0)t=gt[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return md(t)}const j1=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Rg(r){return r.replace(j1,J1)}function J1(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function Pg(r){let e="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function K1(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===su?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===fa?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===yi&&(e="SHADOWMAP_TYPE_VSM"),e}function Q1(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case ar:case Ir:e="ENVMAP_TYPE_CUBE";break;case bo:e="ENVMAP_TYPE_CUBE_UV";break}return e}function $1(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Ir:e="ENVMAP_MODE_REFRACTION";break}return e}function eT(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case Ha:e="ENVMAP_BLENDING_MULTIPLY";break;case y_:e="ENVMAP_BLENDING_MIX";break;case x_:e="ENVMAP_BLENDING_ADD";break}return e}function tT(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function nT(r,e,t,n){const i=r.getContext(),s=t.defines;let l=t.vertexShader,c=t.fragmentShader;const u=K1(t),h=Q1(t),f=$1(t),p=eT(t),m=tT(t),g=t.isWebGL2?"":V1(t),y=G1(t),M=W1(s),x=i.createProgram();let v,w,E=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(v=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,M].filter(go).join(`
`),v.length>0&&(v+=`
`),w=[g,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,M].filter(go).join(`
`),w.length>0&&(w+=`
`)):(v=[Pg(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,M,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+f:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(go).join(`
`),w=[g,Pg(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,M,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+f:"",t.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Bi?"#define TONE_MAPPING":"",t.toneMapping!==Bi?gt.tonemapping_pars_fragment:"",t.toneMapping!==Bi?H1("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",gt.colorspace_pars_fragment,k1("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(go).join(`
`)),l=md(l),l=bg(l,t),l=Cg(l,t),c=md(c),c=bg(c,t),c=Cg(c,t),l=Rg(l),c=Rg(c),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(E=`#version 300 es
`,v=[y,"precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+v,w=["precision mediump sampler2DArray;","#define varying in",t.glslVersion===fd?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===fd?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+w);const A=E+v+l,L=E+w+c,C=Tg(i,i.VERTEX_SHADER,A),I=Tg(i,i.FRAGMENT_SHADER,L);i.attachShader(x,C),i.attachShader(x,I),t.index0AttributeName!==void 0?i.bindAttribLocation(x,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(x,0,"position"),i.linkProgram(x);function z($){if(r.debug.checkShaderErrors){const ae=i.getProgramInfoLog(x).trim(),V=i.getShaderInfoLog(C).trim(),j=i.getShaderInfoLog(I).trim();let te=!0,ue=!0;if(i.getProgramParameter(x,i.LINK_STATUS)===!1)if(te=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(i,x,C,I);else{const F=Ag(i,C,"vertex"),H=Ag(i,I,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(x,i.VALIDATE_STATUS)+`

Program Info Log: `+ae+`
`+F+`
`+H)}else ae!==""?console.warn("THREE.WebGLProgram: Program Info Log:",ae):(V===""||j==="")&&(ue=!1);ue&&($.diagnostics={runnable:te,programLog:ae,vertexShader:{log:V,prefix:v},fragmentShader:{log:j,prefix:w}})}i.deleteShader(C),i.deleteShader(I),b=new jc(i,x),R=X1(i,x)}let b;this.getUniforms=function(){return b===void 0&&z(this),b};let R;this.getAttributes=function(){return R===void 0&&z(this),R};let B=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return B===!1&&(B=i.getProgramParameter(x,O1)),B},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(x),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=F1++,this.cacheKey=e,this.usedTimes=1,this.program=x,this.vertexShader=C,this.fragmentShader=I,this}let iT=0;class rT{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),l=this._getShaderCacheForMaterial(e);return l.has(i)===!1&&(l.add(i),i.usedTimes++),l.has(s)===!1&&(l.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new sT(e),t.set(e,n)),n}}class sT{constructor(e){this.id=iT++,this.code=e,this.usedTimes=0}}function oT(r,e,t,n,i,s,l){const c=new ms,u=new rT,h=[],f=i.isWebGL2,p=i.logarithmicDepthBuffer,m=i.vertexTextures;let g=i.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function M(b){return b===0?"uv":`uv${b}`}function x(b,R,B,$,ae){const V=$.fog,j=ae.geometry,te=b.isMeshStandardMaterial?$.environment:null,ue=(b.isMeshStandardMaterial?t:e).get(b.envMap||te),F=ue&&ue.mapping===bo?ue.image.height:null,H=y[b.type];b.precision!==null&&(g=i.getMaxPrecision(b.precision),g!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",g,"instead."));const X=j.morphAttributes.position||j.morphAttributes.normal||j.morphAttributes.color,Z=X!==void 0?X.length:0;let le=0;j.morphAttributes.position!==void 0&&(le=1),j.morphAttributes.normal!==void 0&&(le=2),j.morphAttributes.color!==void 0&&(le=3);let J,ce,Me,be;if(H){const kt=Si[H];J=kt.vertexShader,ce=kt.fragmentShader}else J=b.vertexShader,ce=b.fragmentShader,u.update(b),Me=u.getVertexShaderID(b),be=u.getFragmentShaderID(b);const Ae=r.getRenderTarget(),nt=ae.isInstancedMesh===!0,ot=ae.isBatchedMesh===!0,Ve=!!b.map,Ze=!!b.matcap,k=!!ue,xe=!!b.aoMap,fe=!!b.lightMap,Se=!!b.bumpMap,de=!!b.normalMap,Ye=!!b.displacementMap,Pe=!!b.emissiveMap,D=!!b.metalnessMap,P=!!b.roughnessMap,Q=b.anisotropy>0,_e=b.clearcoat>0,ge=b.iridescence>0,pe=b.sheen>0,Ge=b.transmission>0,Ce=Q&&!!b.anisotropyMap,Oe=_e&&!!b.clearcoatMap,Qe=_e&&!!b.clearcoatNormalMap,ut=_e&&!!b.clearcoatRoughnessMap,ve=ge&&!!b.iridescenceMap,wt=ge&&!!b.iridescenceThicknessMap,mt=pe&&!!b.sheenColorMap,at=pe&&!!b.sheenRoughnessMap,Ke=!!b.specularMap,ze=!!b.specularColorMap,G=!!b.specularIntensityMap,me=Ge&&!!b.transmissionMap,Ne=Ge&&!!b.thicknessMap,Ie=!!b.gradientMap,ye=!!b.alphaMap,W=b.alphaTest>0,we=!!b.alphaHash,Re=!!b.extensions,$e=!!j.attributes.uv1,We=!!j.attributes.uv2,Et=!!j.attributes.uv3;let Tt=Bi;return b.toneMapped&&(Ae===null||Ae.isXRRenderTarget===!0)&&(Tt=r.toneMapping),{isWebGL2:f,shaderID:H,shaderType:b.type,shaderName:b.name,vertexShader:J,fragmentShader:ce,defines:b.defines,customVertexShaderID:Me,customFragmentShaderID:be,isRawShaderMaterial:b.isRawShaderMaterial===!0,glslVersion:b.glslVersion,precision:g,batching:ot,instancing:nt,instancingColor:nt&&ae.instanceColor!==null,supportsVertexTextures:m,outputColorSpace:Ae===null?r.outputColorSpace:Ae.isXRRenderTarget===!0?Ae.texture.colorSpace:Vi,map:Ve,matcap:Ze,envMap:k,envMapMode:k&&ue.mapping,envMapCubeUVHeight:F,aoMap:xe,lightMap:fe,bumpMap:Se,normalMap:de,displacementMap:m&&Ye,emissiveMap:Pe,normalMapObjectSpace:de&&b.normalMapType===k_,normalMapTangentSpace:de&&b.normalMapType===Ur,metalnessMap:D,roughnessMap:P,anisotropy:Q,anisotropyMap:Ce,clearcoat:_e,clearcoatMap:Oe,clearcoatNormalMap:Qe,clearcoatRoughnessMap:ut,iridescence:ge,iridescenceMap:ve,iridescenceThicknessMap:wt,sheen:pe,sheenColorMap:mt,sheenRoughnessMap:at,specularMap:Ke,specularColorMap:ze,specularIntensityMap:G,transmission:Ge,transmissionMap:me,thicknessMap:Ne,gradientMap:Ie,opaque:b.transparent===!1&&b.blending===ds,alphaMap:ye,alphaTest:W,alphaHash:we,combine:b.combine,mapUv:Ve&&M(b.map.channel),aoMapUv:xe&&M(b.aoMap.channel),lightMapUv:fe&&M(b.lightMap.channel),bumpMapUv:Se&&M(b.bumpMap.channel),normalMapUv:de&&M(b.normalMap.channel),displacementMapUv:Ye&&M(b.displacementMap.channel),emissiveMapUv:Pe&&M(b.emissiveMap.channel),metalnessMapUv:D&&M(b.metalnessMap.channel),roughnessMapUv:P&&M(b.roughnessMap.channel),anisotropyMapUv:Ce&&M(b.anisotropyMap.channel),clearcoatMapUv:Oe&&M(b.clearcoatMap.channel),clearcoatNormalMapUv:Qe&&M(b.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:ut&&M(b.clearcoatRoughnessMap.channel),iridescenceMapUv:ve&&M(b.iridescenceMap.channel),iridescenceThicknessMapUv:wt&&M(b.iridescenceThicknessMap.channel),sheenColorMapUv:mt&&M(b.sheenColorMap.channel),sheenRoughnessMapUv:at&&M(b.sheenRoughnessMap.channel),specularMapUv:Ke&&M(b.specularMap.channel),specularColorMapUv:ze&&M(b.specularColorMap.channel),specularIntensityMapUv:G&&M(b.specularIntensityMap.channel),transmissionMapUv:me&&M(b.transmissionMap.channel),thicknessMapUv:Ne&&M(b.thicknessMap.channel),alphaMapUv:ye&&M(b.alphaMap.channel),vertexTangents:!!j.attributes.tangent&&(de||Q),vertexColors:b.vertexColors,vertexAlphas:b.vertexColors===!0&&!!j.attributes.color&&j.attributes.color.itemSize===4,vertexUv1s:$e,vertexUv2s:We,vertexUv3s:Et,pointsUvs:ae.isPoints===!0&&!!j.attributes.uv&&(Ve||ye),fog:!!V,useFog:b.fog===!0,fogExp2:V&&V.isFogExp2,flatShading:b.flatShading===!0,sizeAttenuation:b.sizeAttenuation===!0,logarithmicDepthBuffer:p,skinning:ae.isSkinnedMesh===!0,morphTargets:j.morphAttributes.position!==void 0,morphNormals:j.morphAttributes.normal!==void 0,morphColors:j.morphAttributes.color!==void 0,morphTargetsCount:Z,morphTextureStride:le,numDirLights:R.directional.length,numPointLights:R.point.length,numSpotLights:R.spot.length,numSpotLightMaps:R.spotLightMap.length,numRectAreaLights:R.rectArea.length,numHemiLights:R.hemi.length,numDirLightShadows:R.directionalShadowMap.length,numPointLightShadows:R.pointShadowMap.length,numSpotLightShadows:R.spotShadowMap.length,numSpotLightShadowsWithMaps:R.numSpotLightShadowsWithMaps,numLightProbes:R.numLightProbes,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:b.dithering,shadowMapEnabled:r.shadowMap.enabled&&B.length>0,shadowMapType:r.shadowMap.type,toneMapping:Tt,useLegacyLights:r._useLegacyLights,decodeVideoTexture:Ve&&b.map.isVideoTexture===!0&&It.getTransfer(b.map.colorSpace)===Ft,premultipliedAlpha:b.premultipliedAlpha,doubleSided:b.side===zi,flipSided:b.side===Rn,useDepthPacking:b.depthPacking>=0,depthPacking:b.depthPacking||0,index0AttributeName:b.index0AttributeName,extensionDerivatives:Re&&b.extensions.derivatives===!0,extensionFragDepth:Re&&b.extensions.fragDepth===!0,extensionDrawBuffers:Re&&b.extensions.drawBuffers===!0,extensionShaderTextureLOD:Re&&b.extensions.shaderTextureLOD===!0,extensionClipCullDistance:Re&&b.extensions.clipCullDistance&&n.has("WEBGL_clip_cull_distance"),rendererExtensionFragDepth:f||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:f||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:f||n.has("EXT_shader_texture_lod"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:b.customProgramCacheKey()}}function v(b){const R=[];if(b.shaderID?R.push(b.shaderID):(R.push(b.customVertexShaderID),R.push(b.customFragmentShaderID)),b.defines!==void 0)for(const B in b.defines)R.push(B),R.push(b.defines[B]);return b.isRawShaderMaterial===!1&&(w(R,b),E(R,b),R.push(r.outputColorSpace)),R.push(b.customProgramCacheKey),R.join()}function w(b,R){b.push(R.precision),b.push(R.outputColorSpace),b.push(R.envMapMode),b.push(R.envMapCubeUVHeight),b.push(R.mapUv),b.push(R.alphaMapUv),b.push(R.lightMapUv),b.push(R.aoMapUv),b.push(R.bumpMapUv),b.push(R.normalMapUv),b.push(R.displacementMapUv),b.push(R.emissiveMapUv),b.push(R.metalnessMapUv),b.push(R.roughnessMapUv),b.push(R.anisotropyMapUv),b.push(R.clearcoatMapUv),b.push(R.clearcoatNormalMapUv),b.push(R.clearcoatRoughnessMapUv),b.push(R.iridescenceMapUv),b.push(R.iridescenceThicknessMapUv),b.push(R.sheenColorMapUv),b.push(R.sheenRoughnessMapUv),b.push(R.specularMapUv),b.push(R.specularColorMapUv),b.push(R.specularIntensityMapUv),b.push(R.transmissionMapUv),b.push(R.thicknessMapUv),b.push(R.combine),b.push(R.fogExp2),b.push(R.sizeAttenuation),b.push(R.morphTargetsCount),b.push(R.morphAttributeCount),b.push(R.numDirLights),b.push(R.numPointLights),b.push(R.numSpotLights),b.push(R.numSpotLightMaps),b.push(R.numHemiLights),b.push(R.numRectAreaLights),b.push(R.numDirLightShadows),b.push(R.numPointLightShadows),b.push(R.numSpotLightShadows),b.push(R.numSpotLightShadowsWithMaps),b.push(R.numLightProbes),b.push(R.shadowMapType),b.push(R.toneMapping),b.push(R.numClippingPlanes),b.push(R.numClipIntersection),b.push(R.depthPacking)}function E(b,R){c.disableAll(),R.isWebGL2&&c.enable(0),R.supportsVertexTextures&&c.enable(1),R.instancing&&c.enable(2),R.instancingColor&&c.enable(3),R.matcap&&c.enable(4),R.envMap&&c.enable(5),R.normalMapObjectSpace&&c.enable(6),R.normalMapTangentSpace&&c.enable(7),R.clearcoat&&c.enable(8),R.iridescence&&c.enable(9),R.alphaTest&&c.enable(10),R.vertexColors&&c.enable(11),R.vertexAlphas&&c.enable(12),R.vertexUv1s&&c.enable(13),R.vertexUv2s&&c.enable(14),R.vertexUv3s&&c.enable(15),R.vertexTangents&&c.enable(16),R.anisotropy&&c.enable(17),R.alphaHash&&c.enable(18),R.batching&&c.enable(19),b.push(c.mask),c.disableAll(),R.fog&&c.enable(0),R.useFog&&c.enable(1),R.flatShading&&c.enable(2),R.logarithmicDepthBuffer&&c.enable(3),R.skinning&&c.enable(4),R.morphTargets&&c.enable(5),R.morphNormals&&c.enable(6),R.morphColors&&c.enable(7),R.premultipliedAlpha&&c.enable(8),R.shadowMapEnabled&&c.enable(9),R.useLegacyLights&&c.enable(10),R.doubleSided&&c.enable(11),R.flipSided&&c.enable(12),R.useDepthPacking&&c.enable(13),R.dithering&&c.enable(14),R.transmission&&c.enable(15),R.sheen&&c.enable(16),R.opaque&&c.enable(17),R.pointsUvs&&c.enable(18),R.decodeVideoTexture&&c.enable(19),b.push(c.mask)}function A(b){const R=y[b.type];let B;if(R){const $=Si[R];B=Vd.clone($.uniforms)}else B=b.uniforms;return B}function L(b,R){let B;for(let $=0,ae=h.length;$<ae;$++){const V=h[$];if(V.cacheKey===R){B=V,++B.usedTimes;break}}return B===void 0&&(B=new nT(r,R,b,s),h.push(B)),B}function C(b){if(--b.usedTimes===0){const R=h.indexOf(b);h[R]=h[h.length-1],h.pop(),b.destroy()}}function I(b){u.remove(b)}function z(){u.dispose()}return{getParameters:x,getProgramCacheKey:v,getUniforms:A,acquireProgram:L,releaseProgram:C,releaseShaderCache:I,programs:h,dispose:z}}function aT(){let r=new WeakMap;function e(s){let l=r.get(s);return l===void 0&&(l={},r.set(s,l)),l}function t(s){r.delete(s)}function n(s,l,c){r.get(s)[l]=c}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function lT(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function Lg(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function Ig(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function l(p,m,g,y,M,x){let v=r[e];return v===void 0?(v={id:p.id,object:p,geometry:m,material:g,groupOrder:y,renderOrder:p.renderOrder,z:M,group:x},r[e]=v):(v.id=p.id,v.object=p,v.geometry=m,v.material=g,v.groupOrder=y,v.renderOrder=p.renderOrder,v.z=M,v.group=x),e++,v}function c(p,m,g,y,M,x){const v=l(p,m,g,y,M,x);g.transmission>0?n.push(v):g.transparent===!0?i.push(v):t.push(v)}function u(p,m,g,y,M,x){const v=l(p,m,g,y,M,x);g.transmission>0?n.unshift(v):g.transparent===!0?i.unshift(v):t.unshift(v)}function h(p,m){t.length>1&&t.sort(p||lT),n.length>1&&n.sort(m||Lg),i.length>1&&i.sort(m||Lg)}function f(){for(let p=e,m=r.length;p<m;p++){const g=r[p];if(g.id===null)break;g.id=null,g.object=null,g.geometry=null,g.material=null,g.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:c,unshift:u,finish:f,sort:h}}function cT(){let r=new WeakMap;function e(n,i){const s=r.get(n);let l;return s===void 0?(l=new Ig,r.set(n,[l])):i>=s.length?(l=new Ig,s.push(l)):l=s[i],l}function t(){r=new WeakMap}return{get:e,dispose:t}}function uT(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new U,color:new Ue};break;case"SpotLight":t={position:new U,direction:new U,color:new Ue,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new U,color:new Ue,distance:0,decay:0};break;case"HemisphereLight":t={direction:new U,skyColor:new Ue,groundColor:new Ue};break;case"RectAreaLight":t={color:new Ue,position:new U,halfWidth:new U,halfHeight:new U};break}return r[e.id]=t,t}}}function hT(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new he};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new he};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new he,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let fT=0;function dT(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function pT(r,e){const t=new uT,n=hT(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let f=0;f<9;f++)i.probe.push(new U);const s=new U,l=new lt,c=new lt;function u(f,p){let m=0,g=0,y=0;for(let $=0;$<9;$++)i.probe[$].set(0,0,0);let M=0,x=0,v=0,w=0,E=0,A=0,L=0,C=0,I=0,z=0,b=0;f.sort(dT);const R=p===!0?Math.PI:1;for(let $=0,ae=f.length;$<ae;$++){const V=f[$],j=V.color,te=V.intensity,ue=V.distance,F=V.shadow&&V.shadow.map?V.shadow.map.texture:null;if(V.isAmbientLight)m+=j.r*te*R,g+=j.g*te*R,y+=j.b*te*R;else if(V.isLightProbe){for(let H=0;H<9;H++)i.probe[H].addScaledVector(V.sh.coefficients[H],te);b++}else if(V.isDirectionalLight){const H=t.get(V);if(H.color.copy(V.color).multiplyScalar(V.intensity*R),V.castShadow){const X=V.shadow,Z=n.get(V);Z.shadowBias=X.bias,Z.shadowNormalBias=X.normalBias,Z.shadowRadius=X.radius,Z.shadowMapSize=X.mapSize,i.directionalShadow[M]=Z,i.directionalShadowMap[M]=F,i.directionalShadowMatrix[M]=V.shadow.matrix,A++}i.directional[M]=H,M++}else if(V.isSpotLight){const H=t.get(V);H.position.setFromMatrixPosition(V.matrixWorld),H.color.copy(j).multiplyScalar(te*R),H.distance=ue,H.coneCos=Math.cos(V.angle),H.penumbraCos=Math.cos(V.angle*(1-V.penumbra)),H.decay=V.decay,i.spot[v]=H;const X=V.shadow;if(V.map&&(i.spotLightMap[I]=V.map,I++,X.updateMatrices(V),V.castShadow&&z++),i.spotLightMatrix[v]=X.matrix,V.castShadow){const Z=n.get(V);Z.shadowBias=X.bias,Z.shadowNormalBias=X.normalBias,Z.shadowRadius=X.radius,Z.shadowMapSize=X.mapSize,i.spotShadow[v]=Z,i.spotShadowMap[v]=F,C++}v++}else if(V.isRectAreaLight){const H=t.get(V);H.color.copy(j).multiplyScalar(te),H.halfWidth.set(V.width*.5,0,0),H.halfHeight.set(0,V.height*.5,0),i.rectArea[w]=H,w++}else if(V.isPointLight){const H=t.get(V);if(H.color.copy(V.color).multiplyScalar(V.intensity*R),H.distance=V.distance,H.decay=V.decay,V.castShadow){const X=V.shadow,Z=n.get(V);Z.shadowBias=X.bias,Z.shadowNormalBias=X.normalBias,Z.shadowRadius=X.radius,Z.shadowMapSize=X.mapSize,Z.shadowCameraNear=X.camera.near,Z.shadowCameraFar=X.camera.far,i.pointShadow[x]=Z,i.pointShadowMap[x]=F,i.pointShadowMatrix[x]=V.shadow.matrix,L++}i.point[x]=H,x++}else if(V.isHemisphereLight){const H=t.get(V);H.skyColor.copy(V.color).multiplyScalar(te*R),H.groundColor.copy(V.groundColor).multiplyScalar(te*R),i.hemi[E]=H,E++}}w>0&&(e.isWebGL2?r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Te.LTC_FLOAT_1,i.rectAreaLTC2=Te.LTC_FLOAT_2):(i.rectAreaLTC1=Te.LTC_HALF_1,i.rectAreaLTC2=Te.LTC_HALF_2):r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Te.LTC_FLOAT_1,i.rectAreaLTC2=Te.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=Te.LTC_HALF_1,i.rectAreaLTC2=Te.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=m,i.ambient[1]=g,i.ambient[2]=y;const B=i.hash;(B.directionalLength!==M||B.pointLength!==x||B.spotLength!==v||B.rectAreaLength!==w||B.hemiLength!==E||B.numDirectionalShadows!==A||B.numPointShadows!==L||B.numSpotShadows!==C||B.numSpotMaps!==I||B.numLightProbes!==b)&&(i.directional.length=M,i.spot.length=v,i.rectArea.length=w,i.point.length=x,i.hemi.length=E,i.directionalShadow.length=A,i.directionalShadowMap.length=A,i.pointShadow.length=L,i.pointShadowMap.length=L,i.spotShadow.length=C,i.spotShadowMap.length=C,i.directionalShadowMatrix.length=A,i.pointShadowMatrix.length=L,i.spotLightMatrix.length=C+I-z,i.spotLightMap.length=I,i.numSpotLightShadowsWithMaps=z,i.numLightProbes=b,B.directionalLength=M,B.pointLength=x,B.spotLength=v,B.rectAreaLength=w,B.hemiLength=E,B.numDirectionalShadows=A,B.numPointShadows=L,B.numSpotShadows=C,B.numSpotMaps=I,B.numLightProbes=b,i.version=fT++)}function h(f,p){let m=0,g=0,y=0,M=0,x=0;const v=p.matrixWorldInverse;for(let w=0,E=f.length;w<E;w++){const A=f[w];if(A.isDirectionalLight){const L=i.directional[m];L.direction.setFromMatrixPosition(A.matrixWorld),s.setFromMatrixPosition(A.target.matrixWorld),L.direction.sub(s),L.direction.transformDirection(v),m++}else if(A.isSpotLight){const L=i.spot[y];L.position.setFromMatrixPosition(A.matrixWorld),L.position.applyMatrix4(v),L.direction.setFromMatrixPosition(A.matrixWorld),s.setFromMatrixPosition(A.target.matrixWorld),L.direction.sub(s),L.direction.transformDirection(v),y++}else if(A.isRectAreaLight){const L=i.rectArea[M];L.position.setFromMatrixPosition(A.matrixWorld),L.position.applyMatrix4(v),c.identity(),l.copy(A.matrixWorld),l.premultiply(v),c.extractRotation(l),L.halfWidth.set(A.width*.5,0,0),L.halfHeight.set(0,A.height*.5,0),L.halfWidth.applyMatrix4(c),L.halfHeight.applyMatrix4(c),M++}else if(A.isPointLight){const L=i.point[g];L.position.setFromMatrixPosition(A.matrixWorld),L.position.applyMatrix4(v),g++}else if(A.isHemisphereLight){const L=i.hemi[x];L.direction.setFromMatrixPosition(A.matrixWorld),L.direction.transformDirection(v),x++}}}return{setup:u,setupView:h,state:i}}function Dg(r,e){const t=new pT(r,e),n=[],i=[];function s(){n.length=0,i.length=0}function l(p){n.push(p)}function c(p){i.push(p)}function u(p){t.setup(n,p)}function h(p){t.setupView(n,p)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:u,setupLightsView:h,pushLight:l,pushShadow:c}}function mT(r,e){let t=new WeakMap;function n(s,l=0){const c=t.get(s);let u;return c===void 0?(u=new Dg(r,e),t.set(s,[u])):l>=c.length?(u=new Dg(r,e),c.push(u)):u=c[l],u}function i(){t=new WeakMap}return{get:n,dispose:i}}class Xd extends In{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=z_,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Yd extends In{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const gT=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,_T=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function vT(r,e,t){let n=new Ya;const i=new he,s=new he,l=new Dt,c=new Xd({depthPacking:B_}),u=new Yd,h={},f=t.maxTextureSize,p={[or]:Rn,[Rn]:or,[zi]:zi},m=new Ti({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new he},radius:{value:4}},vertexShader:gT,fragmentShader:_T}),g=m.clone();g.defines.HORIZONTAL_PASS=1;const y=new xt;y.setAttribute("position",new Nt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const M=new ln(y,m),x=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=su;let v=this.type;this.render=function(C,I,z){if(x.enabled===!1||x.autoUpdate===!1&&x.needsUpdate===!1||C.length===0)return;const b=r.getRenderTarget(),R=r.getActiveCubeFace(),B=r.getActiveMipmapLevel(),$=r.state;$.setBlending(sr),$.buffers.color.setClear(1,1,1,1),$.buffers.depth.setTest(!0),$.setScissorTest(!1);const ae=v!==yi&&this.type===yi,V=v===yi&&this.type!==yi;for(let j=0,te=C.length;j<te;j++){const ue=C[j],F=ue.shadow;if(F===void 0){console.warn("THREE.WebGLShadowMap:",ue,"has no shadow.");continue}if(F.autoUpdate===!1&&F.needsUpdate===!1)continue;i.copy(F.mapSize);const H=F.getFrameExtents();if(i.multiply(H),s.copy(F.mapSize),(i.x>f||i.y>f)&&(i.x>f&&(s.x=Math.floor(f/H.x),i.x=s.x*H.x,F.mapSize.x=s.x),i.y>f&&(s.y=Math.floor(f/H.y),i.y=s.y*H.y,F.mapSize.y=s.y)),F.map===null||ae===!0||V===!0){const Z=this.type!==yi?{minFilter:Qt,magFilter:Qt}:{};F.map!==null&&F.map.dispose(),F.map=new wi(i.x,i.y,Z),F.map.texture.name=ue.name+".shadowMap",F.camera.updateProjectionMatrix()}r.setRenderTarget(F.map),r.clear();const X=F.getViewportCount();for(let Z=0;Z<X;Z++){const le=F.getViewport(Z);l.set(s.x*le.x,s.y*le.y,s.x*le.z,s.y*le.w),$.viewport(l),F.updateMatrices(ue,Z),n=F.getFrustum(),A(I,z,F.camera,ue,this.type)}F.isPointLightShadow!==!0&&this.type===yi&&w(F,z),F.needsUpdate=!1}v=this.type,x.needsUpdate=!1,r.setRenderTarget(b,R,B)};function w(C,I){const z=e.update(M);m.defines.VSM_SAMPLES!==C.blurSamples&&(m.defines.VSM_SAMPLES=C.blurSamples,g.defines.VSM_SAMPLES=C.blurSamples,m.needsUpdate=!0,g.needsUpdate=!0),C.mapPass===null&&(C.mapPass=new wi(i.x,i.y)),m.uniforms.shadow_pass.value=C.map.texture,m.uniforms.resolution.value=C.mapSize,m.uniforms.radius.value=C.radius,r.setRenderTarget(C.mapPass),r.clear(),r.renderBufferDirect(I,null,z,m,M,null),g.uniforms.shadow_pass.value=C.mapPass.texture,g.uniforms.resolution.value=C.mapSize,g.uniforms.radius.value=C.radius,r.setRenderTarget(C.map),r.clear(),r.renderBufferDirect(I,null,z,g,M,null)}function E(C,I,z,b){let R=null;const B=z.isPointLight===!0?C.customDistanceMaterial:C.customDepthMaterial;if(B!==void 0)R=B;else if(R=z.isPointLight===!0?u:c,r.localClippingEnabled&&I.clipShadows===!0&&Array.isArray(I.clippingPlanes)&&I.clippingPlanes.length!==0||I.displacementMap&&I.displacementScale!==0||I.alphaMap&&I.alphaTest>0||I.map&&I.alphaTest>0){const $=R.uuid,ae=I.uuid;let V=h[$];V===void 0&&(V={},h[$]=V);let j=V[ae];j===void 0&&(j=R.clone(),V[ae]=j,I.addEventListener("dispose",L)),R=j}if(R.visible=I.visible,R.wireframe=I.wireframe,b===yi?R.side=I.shadowSide!==null?I.shadowSide:I.side:R.side=I.shadowSide!==null?I.shadowSide:p[I.side],R.alphaMap=I.alphaMap,R.alphaTest=I.alphaTest,R.map=I.map,R.clipShadows=I.clipShadows,R.clippingPlanes=I.clippingPlanes,R.clipIntersection=I.clipIntersection,R.displacementMap=I.displacementMap,R.displacementScale=I.displacementScale,R.displacementBias=I.displacementBias,R.wireframeLinewidth=I.wireframeLinewidth,R.linewidth=I.linewidth,z.isPointLight===!0&&R.isMeshDistanceMaterial===!0){const $=r.properties.get(R);$.light=z}return R}function A(C,I,z,b,R){if(C.visible===!1)return;if(C.layers.test(I.layers)&&(C.isMesh||C.isLine||C.isPoints)&&(C.castShadow||C.receiveShadow&&R===yi)&&(!C.frustumCulled||n.intersectsObject(C))){C.modelViewMatrix.multiplyMatrices(z.matrixWorldInverse,C.matrixWorld);const ae=e.update(C),V=C.material;if(Array.isArray(V)){const j=ae.groups;for(let te=0,ue=j.length;te<ue;te++){const F=j[te],H=V[F.materialIndex];if(H&&H.visible){const X=E(C,H,b,R);C.onBeforeShadow(r,C,I,z,ae,X,F),r.renderBufferDirect(z,null,ae,X,C,F),C.onAfterShadow(r,C,I,z,ae,X,F)}}}else if(V.visible){const j=E(C,V,b,R);C.onBeforeShadow(r,C,I,z,ae,j,null),r.renderBufferDirect(z,null,ae,j,C,null),C.onAfterShadow(r,C,I,z,ae,j,null)}}const $=C.children;for(let ae=0,V=$.length;ae<V;ae++)A($[ae],I,z,b,R)}function L(C){C.target.removeEventListener("dispose",L);for(const z in h){const b=h[z],R=C.target.uuid;R in b&&(b[R].dispose(),delete b[R])}}}function yT(r,e,t){const n=t.isWebGL2;function i(){let W=!1;const we=new Dt;let Re=null;const $e=new Dt(0,0,0,0);return{setMask:function(We){Re!==We&&!W&&(r.colorMask(We,We,We,We),Re=We)},setLocked:function(We){W=We},setClear:function(We,Et,Tt,Ut,kt){kt===!0&&(We*=Ut,Et*=Ut,Tt*=Ut),we.set(We,Et,Tt,Ut),$e.equals(we)===!1&&(r.clearColor(We,Et,Tt,Ut),$e.copy(we))},reset:function(){W=!1,Re=null,$e.set(-1,0,0,0)}}}function s(){let W=!1,we=null,Re=null,$e=null;return{setTest:function(We){We?ot(r.DEPTH_TEST):Ve(r.DEPTH_TEST)},setMask:function(We){we!==We&&!W&&(r.depthMask(We),we=We)},setFunc:function(We){if(Re!==We){switch(We){case f_:r.depthFunc(r.NEVER);break;case d_:r.depthFunc(r.ALWAYS);break;case p_:r.depthFunc(r.LESS);break;case ya:r.depthFunc(r.LEQUAL);break;case m_:r.depthFunc(r.EQUAL);break;case g_:r.depthFunc(r.GEQUAL);break;case __:r.depthFunc(r.GREATER);break;case v_:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}Re=We}},setLocked:function(We){W=We},setClear:function(We){$e!==We&&(r.clearDepth(We),$e=We)},reset:function(){W=!1,we=null,Re=null,$e=null}}}function l(){let W=!1,we=null,Re=null,$e=null,We=null,Et=null,Tt=null,Ut=null,kt=null;return{setTest:function(At){W||(At?ot(r.STENCIL_TEST):Ve(r.STENCIL_TEST))},setMask:function(At){we!==At&&!W&&(r.stencilMask(At),we=At)},setFunc:function(At,_n,ni){(Re!==At||$e!==_n||We!==ni)&&(r.stencilFunc(At,_n,ni),Re=At,$e=_n,We=ni)},setOp:function(At,_n,ni){(Et!==At||Tt!==_n||Ut!==ni)&&(r.stencilOp(At,_n,ni),Et=At,Tt=_n,Ut=ni)},setLocked:function(At){W=At},setClear:function(At){kt!==At&&(r.clearStencil(At),kt=At)},reset:function(){W=!1,we=null,Re=null,$e=null,We=null,Et=null,Tt=null,Ut=null,kt=null}}}const c=new i,u=new s,h=new l,f=new WeakMap,p=new WeakMap;let m={},g={},y=new WeakMap,M=[],x=null,v=!1,w=null,E=null,A=null,L=null,C=null,I=null,z=null,b=new Ue(0,0,0),R=0,B=!1,$=null,ae=null,V=null,j=null,te=null;const ue=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let F=!1,H=0;const X=r.getParameter(r.VERSION);X.indexOf("WebGL")!==-1?(H=parseFloat(/^WebGL (\d)/.exec(X)[1]),F=H>=1):X.indexOf("OpenGL ES")!==-1&&(H=parseFloat(/^OpenGL ES (\d)/.exec(X)[1]),F=H>=2);let Z=null,le={};const J=r.getParameter(r.SCISSOR_BOX),ce=r.getParameter(r.VIEWPORT),Me=new Dt().fromArray(J),be=new Dt().fromArray(ce);function Ae(W,we,Re,$e){const We=new Uint8Array(4),Et=r.createTexture();r.bindTexture(W,Et),r.texParameteri(W,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(W,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let Tt=0;Tt<Re;Tt++)n&&(W===r.TEXTURE_3D||W===r.TEXTURE_2D_ARRAY)?r.texImage3D(we,0,r.RGBA,1,1,$e,0,r.RGBA,r.UNSIGNED_BYTE,We):r.texImage2D(we+Tt,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,We);return Et}const nt={};nt[r.TEXTURE_2D]=Ae(r.TEXTURE_2D,r.TEXTURE_2D,1),nt[r.TEXTURE_CUBE_MAP]=Ae(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(nt[r.TEXTURE_2D_ARRAY]=Ae(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),nt[r.TEXTURE_3D]=Ae(r.TEXTURE_3D,r.TEXTURE_3D,1,1)),c.setClear(0,0,0,1),u.setClear(1),h.setClear(0),ot(r.DEPTH_TEST),u.setFunc(ya),Pe(!1),D(Df),ot(r.CULL_FACE),de(sr);function ot(W){m[W]!==!0&&(r.enable(W),m[W]=!0)}function Ve(W){m[W]!==!1&&(r.disable(W),m[W]=!1)}function Ze(W,we){return g[W]!==we?(r.bindFramebuffer(W,we),g[W]=we,n&&(W===r.DRAW_FRAMEBUFFER&&(g[r.FRAMEBUFFER]=we),W===r.FRAMEBUFFER&&(g[r.DRAW_FRAMEBUFFER]=we)),!0):!1}function k(W,we){let Re=M,$e=!1;if(W)if(Re=y.get(we),Re===void 0&&(Re=[],y.set(we,Re)),W.isWebGLMultipleRenderTargets){const We=W.texture;if(Re.length!==We.length||Re[0]!==r.COLOR_ATTACHMENT0){for(let Et=0,Tt=We.length;Et<Tt;Et++)Re[Et]=r.COLOR_ATTACHMENT0+Et;Re.length=We.length,$e=!0}}else Re[0]!==r.COLOR_ATTACHMENT0&&(Re[0]=r.COLOR_ATTACHMENT0,$e=!0);else Re[0]!==r.BACK&&(Re[0]=r.BACK,$e=!0);$e&&(t.isWebGL2?r.drawBuffers(Re):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(Re))}function xe(W){return x!==W?(r.useProgram(W),x=W,!0):!1}const fe={[br]:r.FUNC_ADD,[K0]:r.FUNC_SUBTRACT,[Q0]:r.FUNC_REVERSE_SUBTRACT};if(n)fe[Ff]=r.MIN,fe[zf]=r.MAX;else{const W=e.get("EXT_blend_minmax");W!==null&&(fe[Ff]=W.MIN_EXT,fe[zf]=W.MAX_EXT)}const Se={[$0]:r.ZERO,[e_]:r.ONE,[t_]:r.SRC_COLOR,[Kc]:r.SRC_ALPHA,[a_]:r.SRC_ALPHA_SATURATE,[s_]:r.DST_COLOR,[i_]:r.DST_ALPHA,[n_]:r.ONE_MINUS_SRC_COLOR,[Qc]:r.ONE_MINUS_SRC_ALPHA,[o_]:r.ONE_MINUS_DST_COLOR,[r_]:r.ONE_MINUS_DST_ALPHA,[l_]:r.CONSTANT_COLOR,[c_]:r.ONE_MINUS_CONSTANT_COLOR,[u_]:r.CONSTANT_ALPHA,[h_]:r.ONE_MINUS_CONSTANT_ALPHA};function de(W,we,Re,$e,We,Et,Tt,Ut,kt,At){if(W===sr){v===!0&&(Ve(r.BLEND),v=!1);return}if(v===!1&&(ot(r.BLEND),v=!0),W!==J0){if(W!==w||At!==B){if((E!==br||C!==br)&&(r.blendEquation(r.FUNC_ADD),E=br,C=br),At)switch(W){case ds:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Nf:r.blendFunc(r.ONE,r.ONE);break;case Uf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Of:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",W);break}else switch(W){case ds:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Nf:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case Uf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Of:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",W);break}A=null,L=null,I=null,z=null,b.set(0,0,0),R=0,w=W,B=At}return}We=We||we,Et=Et||Re,Tt=Tt||$e,(we!==E||We!==C)&&(r.blendEquationSeparate(fe[we],fe[We]),E=we,C=We),(Re!==A||$e!==L||Et!==I||Tt!==z)&&(r.blendFuncSeparate(Se[Re],Se[$e],Se[Et],Se[Tt]),A=Re,L=$e,I=Et,z=Tt),(Ut.equals(b)===!1||kt!==R)&&(r.blendColor(Ut.r,Ut.g,Ut.b,kt),b.copy(Ut),R=kt),w=W,B=!1}function Ye(W,we){W.side===zi?Ve(r.CULL_FACE):ot(r.CULL_FACE);let Re=W.side===Rn;we&&(Re=!Re),Pe(Re),W.blending===ds&&W.transparent===!1?de(sr):de(W.blending,W.blendEquation,W.blendSrc,W.blendDst,W.blendEquationAlpha,W.blendSrcAlpha,W.blendDstAlpha,W.blendColor,W.blendAlpha,W.premultipliedAlpha),u.setFunc(W.depthFunc),u.setTest(W.depthTest),u.setMask(W.depthWrite),c.setMask(W.colorWrite);const $e=W.stencilWrite;h.setTest($e),$e&&(h.setMask(W.stencilWriteMask),h.setFunc(W.stencilFunc,W.stencilRef,W.stencilFuncMask),h.setOp(W.stencilFail,W.stencilZFail,W.stencilZPass)),Q(W.polygonOffset,W.polygonOffsetFactor,W.polygonOffsetUnits),W.alphaToCoverage===!0?ot(r.SAMPLE_ALPHA_TO_COVERAGE):Ve(r.SAMPLE_ALPHA_TO_COVERAGE)}function Pe(W){$!==W&&(W?r.frontFace(r.CW):r.frontFace(r.CCW),$=W)}function D(W){W!==q0?(ot(r.CULL_FACE),W!==ae&&(W===Df?r.cullFace(r.BACK):W===Z0?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):Ve(r.CULL_FACE),ae=W}function P(W){W!==V&&(F&&r.lineWidth(W),V=W)}function Q(W,we,Re){W?(ot(r.POLYGON_OFFSET_FILL),(j!==we||te!==Re)&&(r.polygonOffset(we,Re),j=we,te=Re)):Ve(r.POLYGON_OFFSET_FILL)}function _e(W){W?ot(r.SCISSOR_TEST):Ve(r.SCISSOR_TEST)}function ge(W){W===void 0&&(W=r.TEXTURE0+ue-1),Z!==W&&(r.activeTexture(W),Z=W)}function pe(W,we,Re){Re===void 0&&(Z===null?Re=r.TEXTURE0+ue-1:Re=Z);let $e=le[Re];$e===void 0&&($e={type:void 0,texture:void 0},le[Re]=$e),($e.type!==W||$e.texture!==we)&&(Z!==Re&&(r.activeTexture(Re),Z=Re),r.bindTexture(W,we||nt[W]),$e.type=W,$e.texture=we)}function Ge(){const W=le[Z];W!==void 0&&W.type!==void 0&&(r.bindTexture(W.type,null),W.type=void 0,W.texture=void 0)}function Ce(){try{r.compressedTexImage2D.apply(r,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function Oe(){try{r.compressedTexImage3D.apply(r,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function Qe(){try{r.texSubImage2D.apply(r,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function ut(){try{r.texSubImage3D.apply(r,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function ve(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function wt(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function mt(){try{r.texStorage2D.apply(r,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function at(){try{r.texStorage3D.apply(r,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function Ke(){try{r.texImage2D.apply(r,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function ze(){try{r.texImage3D.apply(r,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function G(W){Me.equals(W)===!1&&(r.scissor(W.x,W.y,W.z,W.w),Me.copy(W))}function me(W){be.equals(W)===!1&&(r.viewport(W.x,W.y,W.z,W.w),be.copy(W))}function Ne(W,we){let Re=p.get(we);Re===void 0&&(Re=new WeakMap,p.set(we,Re));let $e=Re.get(W);$e===void 0&&($e=r.getUniformBlockIndex(we,W.name),Re.set(W,$e))}function Ie(W,we){const $e=p.get(we).get(W);f.get(we)!==$e&&(r.uniformBlockBinding(we,$e,W.__bindingPointIndex),f.set(we,$e))}function ye(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.blendColor(0,0,0,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),n===!0&&(r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),m={},Z=null,le={},g={},y=new WeakMap,M=[],x=null,v=!1,w=null,E=null,A=null,L=null,C=null,I=null,z=null,b=new Ue(0,0,0),R=0,B=!1,$=null,ae=null,V=null,j=null,te=null,Me.set(0,0,r.canvas.width,r.canvas.height),be.set(0,0,r.canvas.width,r.canvas.height),c.reset(),u.reset(),h.reset()}return{buffers:{color:c,depth:u,stencil:h},enable:ot,disable:Ve,bindFramebuffer:Ze,drawBuffers:k,useProgram:xe,setBlending:de,setMaterial:Ye,setFlipSided:Pe,setCullFace:D,setLineWidth:P,setPolygonOffset:Q,setScissorTest:_e,activeTexture:ge,bindTexture:pe,unbindTexture:Ge,compressedTexImage2D:Ce,compressedTexImage3D:Oe,texImage2D:Ke,texImage3D:ze,updateUBOMapping:Ne,uniformBlockBinding:Ie,texStorage2D:mt,texStorage3D:at,texSubImage2D:Qe,texSubImage3D:ut,compressedTexSubImage2D:ve,compressedTexSubImage3D:wt,scissor:G,viewport:me,reset:ye}}function xT(r,e,t,n,i,s,l){const c=i.isWebGL2,u=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,h=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),f=new WeakMap;let p;const m=new WeakMap;let g=!1;try{g=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function y(D,P){return g?new OffscreenCanvas(D,P):La("canvas")}function M(D,P,Q,_e){let ge=1;if((D.width>_e||D.height>_e)&&(ge=_e/Math.max(D.width,D.height)),ge<1||P===!0)if(typeof HTMLImageElement<"u"&&D instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&D instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&D instanceof ImageBitmap){const pe=P?tu:Math.floor,Ge=pe(ge*D.width),Ce=pe(ge*D.height);p===void 0&&(p=y(Ge,Ce));const Oe=Q?y(Ge,Ce):p;return Oe.width=Ge,Oe.height=Ce,Oe.getContext("2d").drawImage(D,0,0,Ge,Ce),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+D.width+"x"+D.height+") to ("+Ge+"x"+Ce+")."),Oe}else return"data"in D&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+D.width+"x"+D.height+")."),D;return D}function x(D){return dd(D.width)&&dd(D.height)}function v(D){return c?!1:D.wrapS!==Cn||D.wrapT!==Cn||D.minFilter!==Qt&&D.minFilter!==$t}function w(D,P){return D.generateMipmaps&&P&&D.minFilter!==Qt&&D.minFilter!==$t}function E(D){r.generateMipmap(D)}function A(D,P,Q,_e,ge=!1){if(c===!1)return P;if(D!==null){if(r[D]!==void 0)return r[D];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+D+"'")}let pe=P;if(P===r.RED&&(Q===r.FLOAT&&(pe=r.R32F),Q===r.HALF_FLOAT&&(pe=r.R16F),Q===r.UNSIGNED_BYTE&&(pe=r.R8)),P===r.RED_INTEGER&&(Q===r.UNSIGNED_BYTE&&(pe=r.R8UI),Q===r.UNSIGNED_SHORT&&(pe=r.R16UI),Q===r.UNSIGNED_INT&&(pe=r.R32UI),Q===r.BYTE&&(pe=r.R8I),Q===r.SHORT&&(pe=r.R16I),Q===r.INT&&(pe=r.R32I)),P===r.RG&&(Q===r.FLOAT&&(pe=r.RG32F),Q===r.HALF_FLOAT&&(pe=r.RG16F),Q===r.UNSIGNED_BYTE&&(pe=r.RG8)),P===r.RGBA){const Ge=ge?ba:It.getTransfer(_e);Q===r.FLOAT&&(pe=r.RGBA32F),Q===r.HALF_FLOAT&&(pe=r.RGBA16F),Q===r.UNSIGNED_BYTE&&(pe=Ge===Ft?r.SRGB8_ALPHA8:r.RGBA8),Q===r.UNSIGNED_SHORT_4_4_4_4&&(pe=r.RGBA4),Q===r.UNSIGNED_SHORT_5_5_5_1&&(pe=r.RGB5_A1)}return(pe===r.R16F||pe===r.R32F||pe===r.RG16F||pe===r.RG32F||pe===r.RGBA16F||pe===r.RGBA32F)&&e.get("EXT_color_buffer_float"),pe}function L(D,P,Q){return w(D,Q)===!0||D.isFramebufferTexture&&D.minFilter!==Qt&&D.minFilter!==$t?Math.log2(Math.max(P.width,P.height))+1:D.mipmaps!==void 0&&D.mipmaps.length>0?D.mipmaps.length:D.isCompressedTexture&&Array.isArray(D.image)?P.mipmaps.length:1}function C(D){return D===Qt||D===$c||D===da?r.NEAREST:r.LINEAR}function I(D){const P=D.target;P.removeEventListener("dispose",I),b(P),P.isVideoTexture&&f.delete(P)}function z(D){const P=D.target;P.removeEventListener("dispose",z),B(P)}function b(D){const P=n.get(D);if(P.__webglInit===void 0)return;const Q=D.source,_e=m.get(Q);if(_e){const ge=_e[P.__cacheKey];ge.usedTimes--,ge.usedTimes===0&&R(D),Object.keys(_e).length===0&&m.delete(Q)}n.remove(D)}function R(D){const P=n.get(D);r.deleteTexture(P.__webglTexture);const Q=D.source,_e=m.get(Q);delete _e[P.__cacheKey],l.memory.textures--}function B(D){const P=D.texture,Q=n.get(D),_e=n.get(P);if(_e.__webglTexture!==void 0&&(r.deleteTexture(_e.__webglTexture),l.memory.textures--),D.depthTexture&&D.depthTexture.dispose(),D.isWebGLCubeRenderTarget)for(let ge=0;ge<6;ge++){if(Array.isArray(Q.__webglFramebuffer[ge]))for(let pe=0;pe<Q.__webglFramebuffer[ge].length;pe++)r.deleteFramebuffer(Q.__webglFramebuffer[ge][pe]);else r.deleteFramebuffer(Q.__webglFramebuffer[ge]);Q.__webglDepthbuffer&&r.deleteRenderbuffer(Q.__webglDepthbuffer[ge])}else{if(Array.isArray(Q.__webglFramebuffer))for(let ge=0;ge<Q.__webglFramebuffer.length;ge++)r.deleteFramebuffer(Q.__webglFramebuffer[ge]);else r.deleteFramebuffer(Q.__webglFramebuffer);if(Q.__webglDepthbuffer&&r.deleteRenderbuffer(Q.__webglDepthbuffer),Q.__webglMultisampledFramebuffer&&r.deleteFramebuffer(Q.__webglMultisampledFramebuffer),Q.__webglColorRenderbuffer)for(let ge=0;ge<Q.__webglColorRenderbuffer.length;ge++)Q.__webglColorRenderbuffer[ge]&&r.deleteRenderbuffer(Q.__webglColorRenderbuffer[ge]);Q.__webglDepthRenderbuffer&&r.deleteRenderbuffer(Q.__webglDepthRenderbuffer)}if(D.isWebGLMultipleRenderTargets)for(let ge=0,pe=P.length;ge<pe;ge++){const Ge=n.get(P[ge]);Ge.__webglTexture&&(r.deleteTexture(Ge.__webglTexture),l.memory.textures--),n.remove(P[ge])}n.remove(P),n.remove(D)}let $=0;function ae(){$=0}function V(){const D=$;return D>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+D+" texture units while this GPU supports only "+i.maxTextures),$+=1,D}function j(D){const P=[];return P.push(D.wrapS),P.push(D.wrapT),P.push(D.wrapR||0),P.push(D.magFilter),P.push(D.minFilter),P.push(D.anisotropy),P.push(D.internalFormat),P.push(D.format),P.push(D.type),P.push(D.generateMipmaps),P.push(D.premultiplyAlpha),P.push(D.flipY),P.push(D.unpackAlignment),P.push(D.colorSpace),P.join()}function te(D,P){const Q=n.get(D);if(D.isVideoTexture&&Ye(D),D.isRenderTargetTexture===!1&&D.version>0&&Q.__version!==D.version){const _e=D.image;if(_e===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(_e.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Me(Q,D,P);return}}t.bindTexture(r.TEXTURE_2D,Q.__webglTexture,r.TEXTURE0+P)}function ue(D,P){const Q=n.get(D);if(D.version>0&&Q.__version!==D.version){Me(Q,D,P);return}t.bindTexture(r.TEXTURE_2D_ARRAY,Q.__webglTexture,r.TEXTURE0+P)}function F(D,P){const Q=n.get(D);if(D.version>0&&Q.__version!==D.version){Me(Q,D,P);return}t.bindTexture(r.TEXTURE_3D,Q.__webglTexture,r.TEXTURE0+P)}function H(D,P){const Q=n.get(D);if(D.version>0&&Q.__version!==D.version){be(Q,D,P);return}t.bindTexture(r.TEXTURE_CUBE_MAP,Q.__webglTexture,r.TEXTURE0+P)}const X={[Ma]:r.REPEAT,[Cn]:r.CLAMP_TO_EDGE,[Ea]:r.MIRRORED_REPEAT},Z={[Qt]:r.NEAREST,[$c]:r.NEAREST_MIPMAP_NEAREST,[da]:r.NEAREST_MIPMAP_LINEAR,[$t]:r.LINEAR,[Ad]:r.LINEAR_MIPMAP_NEAREST,[Dr]:r.LINEAR_MIPMAP_LINEAR},le={[H_]:r.NEVER,[q_]:r.ALWAYS,[V_]:r.LESS,[Od]:r.LEQUAL,[G_]:r.EQUAL,[Y_]:r.GEQUAL,[W_]:r.GREATER,[X_]:r.NOTEQUAL};function J(D,P,Q){if(Q?(r.texParameteri(D,r.TEXTURE_WRAP_S,X[P.wrapS]),r.texParameteri(D,r.TEXTURE_WRAP_T,X[P.wrapT]),(D===r.TEXTURE_3D||D===r.TEXTURE_2D_ARRAY)&&r.texParameteri(D,r.TEXTURE_WRAP_R,X[P.wrapR]),r.texParameteri(D,r.TEXTURE_MAG_FILTER,Z[P.magFilter]),r.texParameteri(D,r.TEXTURE_MIN_FILTER,Z[P.minFilter])):(r.texParameteri(D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),(D===r.TEXTURE_3D||D===r.TEXTURE_2D_ARRAY)&&r.texParameteri(D,r.TEXTURE_WRAP_R,r.CLAMP_TO_EDGE),(P.wrapS!==Cn||P.wrapT!==Cn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(D,r.TEXTURE_MAG_FILTER,C(P.magFilter)),r.texParameteri(D,r.TEXTURE_MIN_FILTER,C(P.minFilter)),P.minFilter!==Qt&&P.minFilter!==$t&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),P.compareFunction&&(r.texParameteri(D,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(D,r.TEXTURE_COMPARE_FUNC,le[P.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){const _e=e.get("EXT_texture_filter_anisotropic");if(P.magFilter===Qt||P.minFilter!==da&&P.minFilter!==Dr||P.type===Mi&&e.has("OES_texture_float_linear")===!1||c===!1&&P.type===So&&e.has("OES_texture_half_float_linear")===!1)return;(P.anisotropy>1||n.get(P).__currentAnisotropy)&&(r.texParameterf(D,_e.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(P.anisotropy,i.getMaxAnisotropy())),n.get(P).__currentAnisotropy=P.anisotropy)}}function ce(D,P){let Q=!1;D.__webglInit===void 0&&(D.__webglInit=!0,P.addEventListener("dispose",I));const _e=P.source;let ge=m.get(_e);ge===void 0&&(ge={},m.set(_e,ge));const pe=j(P);if(pe!==D.__cacheKey){ge[pe]===void 0&&(ge[pe]={texture:r.createTexture(),usedTimes:0},l.memory.textures++,Q=!0),ge[pe].usedTimes++;const Ge=ge[D.__cacheKey];Ge!==void 0&&(ge[D.__cacheKey].usedTimes--,Ge.usedTimes===0&&R(P)),D.__cacheKey=pe,D.__webglTexture=ge[pe].texture}return Q}function Me(D,P,Q){let _e=r.TEXTURE_2D;(P.isDataArrayTexture||P.isCompressedArrayTexture)&&(_e=r.TEXTURE_2D_ARRAY),P.isData3DTexture&&(_e=r.TEXTURE_3D);const ge=ce(D,P),pe=P.source;t.bindTexture(_e,D.__webglTexture,r.TEXTURE0+Q);const Ge=n.get(pe);if(pe.version!==Ge.__version||ge===!0){t.activeTexture(r.TEXTURE0+Q);const Ce=It.getPrimaries(It.workingColorSpace),Oe=P.colorSpace===ei?null:It.getPrimaries(P.colorSpace),Qe=P.colorSpace===ei||Ce===Oe?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,P.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,P.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,Qe);const ut=v(P)&&x(P.image)===!1;let ve=M(P.image,ut,!1,i.maxTextureSize);ve=Pe(P,ve);const wt=x(ve)||c,mt=s.convert(P.format,P.colorSpace);let at=s.convert(P.type),Ke=A(P.internalFormat,mt,at,P.colorSpace,P.isVideoTexture);J(_e,P,wt);let ze;const G=P.mipmaps,me=c&&P.isVideoTexture!==!0&&Ke!==Dd,Ne=Ge.__version===void 0||ge===!0,Ie=L(P,ve,wt);if(P.isDepthTexture)Ke=r.DEPTH_COMPONENT,c?P.type===Mi?Ke=r.DEPTH_COMPONENT32F:P.type===ir?Ke=r.DEPTH_COMPONENT24:P.type===Cr?Ke=r.DEPTH24_STENCIL8:Ke=r.DEPTH_COMPONENT16:P.type===Mi&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),P.format===Rr&&Ke===r.DEPTH_COMPONENT&&P.type!==au&&P.type!==ir&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),P.type=ir,at=s.convert(P.type)),P.format===vs&&Ke===r.DEPTH_COMPONENT&&(Ke=r.DEPTH_STENCIL,P.type!==Cr&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),P.type=Cr,at=s.convert(P.type))),Ne&&(me?t.texStorage2D(r.TEXTURE_2D,1,Ke,ve.width,ve.height):t.texImage2D(r.TEXTURE_2D,0,Ke,ve.width,ve.height,0,mt,at,null));else if(P.isDataTexture)if(G.length>0&&wt){me&&Ne&&t.texStorage2D(r.TEXTURE_2D,Ie,Ke,G[0].width,G[0].height);for(let ye=0,W=G.length;ye<W;ye++)ze=G[ye],me?t.texSubImage2D(r.TEXTURE_2D,ye,0,0,ze.width,ze.height,mt,at,ze.data):t.texImage2D(r.TEXTURE_2D,ye,Ke,ze.width,ze.height,0,mt,at,ze.data);P.generateMipmaps=!1}else me?(Ne&&t.texStorage2D(r.TEXTURE_2D,Ie,Ke,ve.width,ve.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,ve.width,ve.height,mt,at,ve.data)):t.texImage2D(r.TEXTURE_2D,0,Ke,ve.width,ve.height,0,mt,at,ve.data);else if(P.isCompressedTexture)if(P.isCompressedArrayTexture){me&&Ne&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Ie,Ke,G[0].width,G[0].height,ve.depth);for(let ye=0,W=G.length;ye<W;ye++)ze=G[ye],P.format!==Fn?mt!==null?me?t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,ye,0,0,0,ze.width,ze.height,ve.depth,mt,ze.data,0,0):t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,ye,Ke,ze.width,ze.height,ve.depth,0,ze.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):me?t.texSubImage3D(r.TEXTURE_2D_ARRAY,ye,0,0,0,ze.width,ze.height,ve.depth,mt,at,ze.data):t.texImage3D(r.TEXTURE_2D_ARRAY,ye,Ke,ze.width,ze.height,ve.depth,0,mt,at,ze.data)}else{me&&Ne&&t.texStorage2D(r.TEXTURE_2D,Ie,Ke,G[0].width,G[0].height);for(let ye=0,W=G.length;ye<W;ye++)ze=G[ye],P.format!==Fn?mt!==null?me?t.compressedTexSubImage2D(r.TEXTURE_2D,ye,0,0,ze.width,ze.height,mt,ze.data):t.compressedTexImage2D(r.TEXTURE_2D,ye,Ke,ze.width,ze.height,0,ze.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):me?t.texSubImage2D(r.TEXTURE_2D,ye,0,0,ze.width,ze.height,mt,at,ze.data):t.texImage2D(r.TEXTURE_2D,ye,Ke,ze.width,ze.height,0,mt,at,ze.data)}else if(P.isDataArrayTexture)me?(Ne&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Ie,Ke,ve.width,ve.height,ve.depth),t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,ve.width,ve.height,ve.depth,mt,at,ve.data)):t.texImage3D(r.TEXTURE_2D_ARRAY,0,Ke,ve.width,ve.height,ve.depth,0,mt,at,ve.data);else if(P.isData3DTexture)me?(Ne&&t.texStorage3D(r.TEXTURE_3D,Ie,Ke,ve.width,ve.height,ve.depth),t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,ve.width,ve.height,ve.depth,mt,at,ve.data)):t.texImage3D(r.TEXTURE_3D,0,Ke,ve.width,ve.height,ve.depth,0,mt,at,ve.data);else if(P.isFramebufferTexture){if(Ne)if(me)t.texStorage2D(r.TEXTURE_2D,Ie,Ke,ve.width,ve.height);else{let ye=ve.width,W=ve.height;for(let we=0;we<Ie;we++)t.texImage2D(r.TEXTURE_2D,we,Ke,ye,W,0,mt,at,null),ye>>=1,W>>=1}}else if(G.length>0&&wt){me&&Ne&&t.texStorage2D(r.TEXTURE_2D,Ie,Ke,G[0].width,G[0].height);for(let ye=0,W=G.length;ye<W;ye++)ze=G[ye],me?t.texSubImage2D(r.TEXTURE_2D,ye,0,0,mt,at,ze):t.texImage2D(r.TEXTURE_2D,ye,Ke,mt,at,ze);P.generateMipmaps=!1}else me?(Ne&&t.texStorage2D(r.TEXTURE_2D,Ie,Ke,ve.width,ve.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,mt,at,ve)):t.texImage2D(r.TEXTURE_2D,0,Ke,mt,at,ve);w(P,wt)&&E(_e),Ge.__version=pe.version,P.onUpdate&&P.onUpdate(P)}D.__version=P.version}function be(D,P,Q){if(P.image.length!==6)return;const _e=ce(D,P),ge=P.source;t.bindTexture(r.TEXTURE_CUBE_MAP,D.__webglTexture,r.TEXTURE0+Q);const pe=n.get(ge);if(ge.version!==pe.__version||_e===!0){t.activeTexture(r.TEXTURE0+Q);const Ge=It.getPrimaries(It.workingColorSpace),Ce=P.colorSpace===ei?null:It.getPrimaries(P.colorSpace),Oe=P.colorSpace===ei||Ge===Ce?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,P.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,P.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,Oe);const Qe=P.isCompressedTexture||P.image[0].isCompressedTexture,ut=P.image[0]&&P.image[0].isDataTexture,ve=[];for(let ye=0;ye<6;ye++)!Qe&&!ut?ve[ye]=M(P.image[ye],!1,!0,i.maxCubemapSize):ve[ye]=ut?P.image[ye].image:P.image[ye],ve[ye]=Pe(P,ve[ye]);const wt=ve[0],mt=x(wt)||c,at=s.convert(P.format,P.colorSpace),Ke=s.convert(P.type),ze=A(P.internalFormat,at,Ke,P.colorSpace),G=c&&P.isVideoTexture!==!0,me=pe.__version===void 0||_e===!0;let Ne=L(P,wt,mt);J(r.TEXTURE_CUBE_MAP,P,mt);let Ie;if(Qe){G&&me&&t.texStorage2D(r.TEXTURE_CUBE_MAP,Ne,ze,wt.width,wt.height);for(let ye=0;ye<6;ye++){Ie=ve[ye].mipmaps;for(let W=0;W<Ie.length;W++){const we=Ie[W];P.format!==Fn?at!==null?G?t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ye,W,0,0,we.width,we.height,at,we.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ye,W,ze,we.width,we.height,0,we.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):G?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ye,W,0,0,we.width,we.height,at,Ke,we.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ye,W,ze,we.width,we.height,0,at,Ke,we.data)}}}else{Ie=P.mipmaps,G&&me&&(Ie.length>0&&Ne++,t.texStorage2D(r.TEXTURE_CUBE_MAP,Ne,ze,ve[0].width,ve[0].height));for(let ye=0;ye<6;ye++)if(ut){G?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ye,0,0,0,ve[ye].width,ve[ye].height,at,Ke,ve[ye].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ye,0,ze,ve[ye].width,ve[ye].height,0,at,Ke,ve[ye].data);for(let W=0;W<Ie.length;W++){const Re=Ie[W].image[ye].image;G?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ye,W+1,0,0,Re.width,Re.height,at,Ke,Re.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ye,W+1,ze,Re.width,Re.height,0,at,Ke,Re.data)}}else{G?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ye,0,0,0,at,Ke,ve[ye]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ye,0,ze,at,Ke,ve[ye]);for(let W=0;W<Ie.length;W++){const we=Ie[W];G?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ye,W+1,0,0,at,Ke,we.image[ye]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ye,W+1,ze,at,Ke,we.image[ye])}}}w(P,mt)&&E(r.TEXTURE_CUBE_MAP),pe.__version=ge.version,P.onUpdate&&P.onUpdate(P)}D.__version=P.version}function Ae(D,P,Q,_e,ge,pe){const Ge=s.convert(Q.format,Q.colorSpace),Ce=s.convert(Q.type),Oe=A(Q.internalFormat,Ge,Ce,Q.colorSpace);if(!n.get(P).__hasExternalTextures){const ut=Math.max(1,P.width>>pe),ve=Math.max(1,P.height>>pe);ge===r.TEXTURE_3D||ge===r.TEXTURE_2D_ARRAY?t.texImage3D(ge,pe,Oe,ut,ve,P.depth,0,Ge,Ce,null):t.texImage2D(ge,pe,Oe,ut,ve,0,Ge,Ce,null)}t.bindFramebuffer(r.FRAMEBUFFER,D),de(P)?u.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,_e,ge,n.get(Q).__webglTexture,0,Se(P)):(ge===r.TEXTURE_2D||ge>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&ge<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,_e,ge,n.get(Q).__webglTexture,pe),t.bindFramebuffer(r.FRAMEBUFFER,null)}function nt(D,P,Q){if(r.bindRenderbuffer(r.RENDERBUFFER,D),P.depthBuffer&&!P.stencilBuffer){let _e=c===!0?r.DEPTH_COMPONENT24:r.DEPTH_COMPONENT16;if(Q||de(P)){const ge=P.depthTexture;ge&&ge.isDepthTexture&&(ge.type===Mi?_e=r.DEPTH_COMPONENT32F:ge.type===ir&&(_e=r.DEPTH_COMPONENT24));const pe=Se(P);de(P)?u.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,pe,_e,P.width,P.height):r.renderbufferStorageMultisample(r.RENDERBUFFER,pe,_e,P.width,P.height)}else r.renderbufferStorage(r.RENDERBUFFER,_e,P.width,P.height);r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,D)}else if(P.depthBuffer&&P.stencilBuffer){const _e=Se(P);Q&&de(P)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,_e,r.DEPTH24_STENCIL8,P.width,P.height):de(P)?u.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,_e,r.DEPTH24_STENCIL8,P.width,P.height):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,P.width,P.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,D)}else{const _e=P.isWebGLMultipleRenderTargets===!0?P.texture:[P.texture];for(let ge=0;ge<_e.length;ge++){const pe=_e[ge],Ge=s.convert(pe.format,pe.colorSpace),Ce=s.convert(pe.type),Oe=A(pe.internalFormat,Ge,Ce,pe.colorSpace),Qe=Se(P);Q&&de(P)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,Qe,Oe,P.width,P.height):de(P)?u.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Qe,Oe,P.width,P.height):r.renderbufferStorage(r.RENDERBUFFER,Oe,P.width,P.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function ot(D,P){if(P&&P.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,D),!(P.depthTexture&&P.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(P.depthTexture).__webglTexture||P.depthTexture.image.width!==P.width||P.depthTexture.image.height!==P.height)&&(P.depthTexture.image.width=P.width,P.depthTexture.image.height=P.height,P.depthTexture.needsUpdate=!0),te(P.depthTexture,0);const _e=n.get(P.depthTexture).__webglTexture,ge=Se(P);if(P.depthTexture.format===Rr)de(P)?u.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,_e,0,ge):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,_e,0);else if(P.depthTexture.format===vs)de(P)?u.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,_e,0,ge):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,_e,0);else throw new Error("Unknown depthTexture format")}function Ve(D){const P=n.get(D),Q=D.isWebGLCubeRenderTarget===!0;if(D.depthTexture&&!P.__autoAllocateDepthBuffer){if(Q)throw new Error("target.depthTexture not supported in Cube render targets");ot(P.__webglFramebuffer,D)}else if(Q){P.__webglDepthbuffer=[];for(let _e=0;_e<6;_e++)t.bindFramebuffer(r.FRAMEBUFFER,P.__webglFramebuffer[_e]),P.__webglDepthbuffer[_e]=r.createRenderbuffer(),nt(P.__webglDepthbuffer[_e],D,!1)}else t.bindFramebuffer(r.FRAMEBUFFER,P.__webglFramebuffer),P.__webglDepthbuffer=r.createRenderbuffer(),nt(P.__webglDepthbuffer,D,!1);t.bindFramebuffer(r.FRAMEBUFFER,null)}function Ze(D,P,Q){const _e=n.get(D);P!==void 0&&Ae(_e.__webglFramebuffer,D,D.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),Q!==void 0&&Ve(D)}function k(D){const P=D.texture,Q=n.get(D),_e=n.get(P);D.addEventListener("dispose",z),D.isWebGLMultipleRenderTargets!==!0&&(_e.__webglTexture===void 0&&(_e.__webglTexture=r.createTexture()),_e.__version=P.version,l.memory.textures++);const ge=D.isWebGLCubeRenderTarget===!0,pe=D.isWebGLMultipleRenderTargets===!0,Ge=x(D)||c;if(ge){Q.__webglFramebuffer=[];for(let Ce=0;Ce<6;Ce++)if(c&&P.mipmaps&&P.mipmaps.length>0){Q.__webglFramebuffer[Ce]=[];for(let Oe=0;Oe<P.mipmaps.length;Oe++)Q.__webglFramebuffer[Ce][Oe]=r.createFramebuffer()}else Q.__webglFramebuffer[Ce]=r.createFramebuffer()}else{if(c&&P.mipmaps&&P.mipmaps.length>0){Q.__webglFramebuffer=[];for(let Ce=0;Ce<P.mipmaps.length;Ce++)Q.__webglFramebuffer[Ce]=r.createFramebuffer()}else Q.__webglFramebuffer=r.createFramebuffer();if(pe)if(i.drawBuffers){const Ce=D.texture;for(let Oe=0,Qe=Ce.length;Oe<Qe;Oe++){const ut=n.get(Ce[Oe]);ut.__webglTexture===void 0&&(ut.__webglTexture=r.createTexture(),l.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(c&&D.samples>0&&de(D)===!1){const Ce=pe?P:[P];Q.__webglMultisampledFramebuffer=r.createFramebuffer(),Q.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,Q.__webglMultisampledFramebuffer);for(let Oe=0;Oe<Ce.length;Oe++){const Qe=Ce[Oe];Q.__webglColorRenderbuffer[Oe]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,Q.__webglColorRenderbuffer[Oe]);const ut=s.convert(Qe.format,Qe.colorSpace),ve=s.convert(Qe.type),wt=A(Qe.internalFormat,ut,ve,Qe.colorSpace,D.isXRRenderTarget===!0),mt=Se(D);r.renderbufferStorageMultisample(r.RENDERBUFFER,mt,wt,D.width,D.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Oe,r.RENDERBUFFER,Q.__webglColorRenderbuffer[Oe])}r.bindRenderbuffer(r.RENDERBUFFER,null),D.depthBuffer&&(Q.__webglDepthRenderbuffer=r.createRenderbuffer(),nt(Q.__webglDepthRenderbuffer,D,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(ge){t.bindTexture(r.TEXTURE_CUBE_MAP,_e.__webglTexture),J(r.TEXTURE_CUBE_MAP,P,Ge);for(let Ce=0;Ce<6;Ce++)if(c&&P.mipmaps&&P.mipmaps.length>0)for(let Oe=0;Oe<P.mipmaps.length;Oe++)Ae(Q.__webglFramebuffer[Ce][Oe],D,P,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Ce,Oe);else Ae(Q.__webglFramebuffer[Ce],D,P,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Ce,0);w(P,Ge)&&E(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(pe){const Ce=D.texture;for(let Oe=0,Qe=Ce.length;Oe<Qe;Oe++){const ut=Ce[Oe],ve=n.get(ut);t.bindTexture(r.TEXTURE_2D,ve.__webglTexture),J(r.TEXTURE_2D,ut,Ge),Ae(Q.__webglFramebuffer,D,ut,r.COLOR_ATTACHMENT0+Oe,r.TEXTURE_2D,0),w(ut,Ge)&&E(r.TEXTURE_2D)}t.unbindTexture()}else{let Ce=r.TEXTURE_2D;if((D.isWebGL3DRenderTarget||D.isWebGLArrayRenderTarget)&&(c?Ce=D.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(Ce,_e.__webglTexture),J(Ce,P,Ge),c&&P.mipmaps&&P.mipmaps.length>0)for(let Oe=0;Oe<P.mipmaps.length;Oe++)Ae(Q.__webglFramebuffer[Oe],D,P,r.COLOR_ATTACHMENT0,Ce,Oe);else Ae(Q.__webglFramebuffer,D,P,r.COLOR_ATTACHMENT0,Ce,0);w(P,Ge)&&E(Ce),t.unbindTexture()}D.depthBuffer&&Ve(D)}function xe(D){const P=x(D)||c,Q=D.isWebGLMultipleRenderTargets===!0?D.texture:[D.texture];for(let _e=0,ge=Q.length;_e<ge;_e++){const pe=Q[_e];if(w(pe,P)){const Ge=D.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D,Ce=n.get(pe).__webglTexture;t.bindTexture(Ge,Ce),E(Ge),t.unbindTexture()}}}function fe(D){if(c&&D.samples>0&&de(D)===!1){const P=D.isWebGLMultipleRenderTargets?D.texture:[D.texture],Q=D.width,_e=D.height;let ge=r.COLOR_BUFFER_BIT;const pe=[],Ge=D.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,Ce=n.get(D),Oe=D.isWebGLMultipleRenderTargets===!0;if(Oe)for(let Qe=0;Qe<P.length;Qe++)t.bindFramebuffer(r.FRAMEBUFFER,Ce.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Qe,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,Ce.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Qe,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,Ce.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Ce.__webglFramebuffer);for(let Qe=0;Qe<P.length;Qe++){pe.push(r.COLOR_ATTACHMENT0+Qe),D.depthBuffer&&pe.push(Ge);const ut=Ce.__ignoreDepthValues!==void 0?Ce.__ignoreDepthValues:!1;if(ut===!1&&(D.depthBuffer&&(ge|=r.DEPTH_BUFFER_BIT),D.stencilBuffer&&(ge|=r.STENCIL_BUFFER_BIT)),Oe&&r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,Ce.__webglColorRenderbuffer[Qe]),ut===!0&&(r.invalidateFramebuffer(r.READ_FRAMEBUFFER,[Ge]),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[Ge])),Oe){const ve=n.get(P[Qe]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,ve,0)}r.blitFramebuffer(0,0,Q,_e,0,0,Q,_e,ge,r.NEAREST),h&&r.invalidateFramebuffer(r.READ_FRAMEBUFFER,pe)}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),Oe)for(let Qe=0;Qe<P.length;Qe++){t.bindFramebuffer(r.FRAMEBUFFER,Ce.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Qe,r.RENDERBUFFER,Ce.__webglColorRenderbuffer[Qe]);const ut=n.get(P[Qe]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,Ce.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Qe,r.TEXTURE_2D,ut,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Ce.__webglMultisampledFramebuffer)}}function Se(D){return Math.min(i.maxSamples,D.samples)}function de(D){const P=n.get(D);return c&&D.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&P.__useRenderToTexture!==!1}function Ye(D){const P=l.render.frame;f.get(D)!==P&&(f.set(D,P),D.update())}function Pe(D,P){const Q=D.colorSpace,_e=D.format,ge=D.type;return D.isCompressedTexture===!0||D.isVideoTexture===!0||D.format===eu||Q!==Vi&&Q!==ei&&(It.getTransfer(Q)===Ft?c===!1?e.has("EXT_sRGB")===!0&&_e===Fn?(D.format=eu,D.minFilter=$t,D.generateMipmaps=!1):P=zd.sRGBToLinear(P):(_e!==Fn||ge!==ki)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",Q)),P}this.allocateTextureUnit=V,this.resetTextureUnits=ae,this.setTexture2D=te,this.setTexture2DArray=ue,this.setTexture3D=F,this.setTextureCube=H,this.rebindTextures=Ze,this.setupRenderTarget=k,this.updateRenderTargetMipmap=xe,this.updateMultisampleRenderTarget=fe,this.setupDepthRenderbuffer=Ve,this.setupFrameBufferTexture=Ae,this.useMultisampledRTT=de}function lv(r,e,t){const n=t.isWebGL2;function i(s,l=ei){let c;const u=It.getTransfer(l);if(s===ki)return r.UNSIGNED_BYTE;if(s===Cd)return r.UNSIGNED_SHORT_4_4_4_4;if(s===Rd)return r.UNSIGNED_SHORT_5_5_5_1;if(s===b_)return r.BYTE;if(s===C_)return r.SHORT;if(s===au)return r.UNSIGNED_SHORT;if(s===bd)return r.INT;if(s===ir)return r.UNSIGNED_INT;if(s===Mi)return r.FLOAT;if(s===So)return n?r.HALF_FLOAT:(c=e.get("OES_texture_half_float"),c!==null?c.HALF_FLOAT_OES:null);if(s===R_)return r.ALPHA;if(s===Fn)return r.RGBA;if(s===P_)return r.LUMINANCE;if(s===L_)return r.LUMINANCE_ALPHA;if(s===Rr)return r.DEPTH_COMPONENT;if(s===vs)return r.DEPTH_STENCIL;if(s===eu)return c=e.get("EXT_sRGB"),c!==null?c.SRGB_ALPHA_EXT:null;if(s===I_)return r.RED;if(s===Pd)return r.RED_INTEGER;if(s===D_)return r.RG;if(s===Ld)return r.RG_INTEGER;if(s===Id)return r.RGBA_INTEGER;if(s===Gc||s===Wc||s===Xc||s===Yc)if(u===Ft)if(c=e.get("WEBGL_compressed_texture_s3tc_srgb"),c!==null){if(s===Gc)return c.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===Wc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Xc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===Yc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(c=e.get("WEBGL_compressed_texture_s3tc"),c!==null){if(s===Gc)return c.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Wc)return c.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Xc)return c.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===Yc)return c.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===kf||s===Hf||s===Vf||s===Gf)if(c=e.get("WEBGL_compressed_texture_pvrtc"),c!==null){if(s===kf)return c.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===Hf)return c.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===Vf)return c.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===Gf)return c.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===Dd)return c=e.get("WEBGL_compressed_texture_etc1"),c!==null?c.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===Wf||s===Xf)if(c=e.get("WEBGL_compressed_texture_etc"),c!==null){if(s===Wf)return u===Ft?c.COMPRESSED_SRGB8_ETC2:c.COMPRESSED_RGB8_ETC2;if(s===Xf)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:c.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===Yf||s===qf||s===Zf||s===jf||s===Jf||s===Kf||s===Qf||s===$f||s===ed||s===td||s===nd||s===id||s===rd||s===sd)if(c=e.get("WEBGL_compressed_texture_astc"),c!==null){if(s===Yf)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:c.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===qf)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:c.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===Zf)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:c.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===jf)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:c.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===Jf)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:c.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===Kf)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:c.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===Qf)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:c.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===$f)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:c.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===ed)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:c.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===td)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:c.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===nd)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:c.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===id)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:c.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===rd)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:c.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===sd)return u===Ft?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:c.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===qc||s===od||s===ad)if(c=e.get("EXT_texture_compression_bptc"),c!==null){if(s===qc)return u===Ft?c.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:c.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(s===od)return c.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(s===ad)return c.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(s===N_||s===ld||s===cd||s===ud)if(c=e.get("EXT_texture_compression_rgtc"),c!==null){if(s===qc)return c.COMPRESSED_RED_RGTC1_EXT;if(s===ld)return c.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(s===cd)return c.COMPRESSED_RED_GREEN_RGTC2_EXT;if(s===ud)return c.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return s===Cr?n?r.UNSIGNED_INT_24_8:(c=e.get("WEBGL_depth_texture"),c!==null?c.UNSIGNED_INT_24_8_WEBGL:null):r[s]!==void 0?r[s]:null}return{convert:i}}class cv extends en{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class _o extends Lt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const ST={type:"move"};class lf{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new _o,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new _o,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new U,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new U),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new _o,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new U,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new U),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,l=null;const c=this._targetRay,u=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){l=!0;for(const M of e.hand.values()){const x=t.getJointPose(M,n),v=this._getHandJoint(h,M);x!==null&&(v.matrix.fromArray(x.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.matrixWorldNeedsUpdate=!0,v.jointRadius=x.radius),v.visible=x!==null}const f=h.joints["index-finger-tip"],p=h.joints["thumb-tip"],m=f.position.distanceTo(p.position),g=.02,y=.005;h.inputState.pinching&&m>g+y?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&m<=g-y&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(u.matrix.fromArray(s.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,s.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(s.linearVelocity)):u.hasLinearVelocity=!1,s.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(s.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(ST)))}return c!==null&&(c.visible=i!==null),u!==null&&(u.visible=s!==null),h!==null&&(h.visible=l!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new _o;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class MT extends cr{constructor(e,t){super();const n=this;let i=null,s=1,l=null,c="local-floor",u=1,h=null,f=null,p=null,m=null,g=null,y=null;const M=t.getContextAttributes();let x=null,v=null;const w=[],E=[],A=new he;let L=null;const C=new en;C.layers.enable(1),C.viewport=new Dt;const I=new en;I.layers.enable(2),I.viewport=new Dt;const z=[C,I],b=new cv;b.layers.enable(1),b.layers.enable(2);let R=null,B=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(J){let ce=w[J];return ce===void 0&&(ce=new lf,w[J]=ce),ce.getTargetRaySpace()},this.getControllerGrip=function(J){let ce=w[J];return ce===void 0&&(ce=new lf,w[J]=ce),ce.getGripSpace()},this.getHand=function(J){let ce=w[J];return ce===void 0&&(ce=new lf,w[J]=ce),ce.getHandSpace()};function $(J){const ce=E.indexOf(J.inputSource);if(ce===-1)return;const Me=w[ce];Me!==void 0&&(Me.update(J.inputSource,J.frame,h||l),Me.dispatchEvent({type:J.type,data:J.inputSource}))}function ae(){i.removeEventListener("select",$),i.removeEventListener("selectstart",$),i.removeEventListener("selectend",$),i.removeEventListener("squeeze",$),i.removeEventListener("squeezestart",$),i.removeEventListener("squeezeend",$),i.removeEventListener("end",ae),i.removeEventListener("inputsourceschange",V);for(let J=0;J<w.length;J++){const ce=E[J];ce!==null&&(E[J]=null,w[J].disconnect(ce))}R=null,B=null,e.setRenderTarget(x),g=null,m=null,p=null,i=null,v=null,le.stop(),n.isPresenting=!1,e.setPixelRatio(L),e.setSize(A.width,A.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(J){s=J,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(J){c=J,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||l},this.setReferenceSpace=function(J){h=J},this.getBaseLayer=function(){return m!==null?m:g},this.getBinding=function(){return p},this.getFrame=function(){return y},this.getSession=function(){return i},this.setSession=async function(J){if(i=J,i!==null){if(x=e.getRenderTarget(),i.addEventListener("select",$),i.addEventListener("selectstart",$),i.addEventListener("selectend",$),i.addEventListener("squeeze",$),i.addEventListener("squeezestart",$),i.addEventListener("squeezeend",$),i.addEventListener("end",ae),i.addEventListener("inputsourceschange",V),M.xrCompatible!==!0&&await t.makeXRCompatible(),L=e.getPixelRatio(),e.getSize(A),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const ce={antialias:i.renderState.layers===void 0?M.antialias:!0,alpha:!0,depth:M.depth,stencil:M.stencil,framebufferScaleFactor:s};g=new XRWebGLLayer(i,t,ce),i.updateRenderState({baseLayer:g}),e.setPixelRatio(1),e.setSize(g.framebufferWidth,g.framebufferHeight,!1),v=new wi(g.framebufferWidth,g.framebufferHeight,{format:Fn,type:ki,colorSpace:e.outputColorSpace,stencilBuffer:M.stencil})}else{let ce=null,Me=null,be=null;M.depth&&(be=M.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,ce=M.stencil?vs:Rr,Me=M.stencil?Cr:ir);const Ae={colorFormat:t.RGBA8,depthFormat:be,scaleFactor:s};p=new XRWebGLBinding(i,t),m=p.createProjectionLayer(Ae),i.updateRenderState({layers:[m]}),e.setPixelRatio(1),e.setSize(m.textureWidth,m.textureHeight,!1),v=new wi(m.textureWidth,m.textureHeight,{format:Fn,type:ki,depthTexture:new Wd(m.textureWidth,m.textureHeight,Me,void 0,void 0,void 0,void 0,void 0,void 0,ce),stencilBuffer:M.stencil,colorSpace:e.outputColorSpace,samples:M.antialias?4:0});const nt=e.properties.get(v);nt.__ignoreDepthValues=m.ignoreDepthValues}v.isXRRenderTarget=!0,this.setFoveation(u),h=null,l=await i.requestReferenceSpace(c),le.setContext(i),le.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function V(J){for(let ce=0;ce<J.removed.length;ce++){const Me=J.removed[ce],be=E.indexOf(Me);be>=0&&(E[be]=null,w[be].disconnect(Me))}for(let ce=0;ce<J.added.length;ce++){const Me=J.added[ce];let be=E.indexOf(Me);if(be===-1){for(let nt=0;nt<w.length;nt++)if(nt>=E.length){E.push(Me),be=nt;break}else if(E[nt]===null){E[nt]=Me,be=nt;break}if(be===-1)break}const Ae=w[be];Ae&&Ae.connect(Me)}}const j=new U,te=new U;function ue(J,ce,Me){j.setFromMatrixPosition(ce.matrixWorld),te.setFromMatrixPosition(Me.matrixWorld);const be=j.distanceTo(te),Ae=ce.projectionMatrix.elements,nt=Me.projectionMatrix.elements,ot=Ae[14]/(Ae[10]-1),Ve=Ae[14]/(Ae[10]+1),Ze=(Ae[9]+1)/Ae[5],k=(Ae[9]-1)/Ae[5],xe=(Ae[8]-1)/Ae[0],fe=(nt[8]+1)/nt[0],Se=ot*xe,de=ot*fe,Ye=be/(-xe+fe),Pe=Ye*-xe;ce.matrixWorld.decompose(J.position,J.quaternion,J.scale),J.translateX(Pe),J.translateZ(Ye),J.matrixWorld.compose(J.position,J.quaternion,J.scale),J.matrixWorldInverse.copy(J.matrixWorld).invert();const D=ot+Ye,P=Ve+Ye,Q=Se-Pe,_e=de+(be-Pe),ge=Ze*Ve/P*D,pe=k*Ve/P*D;J.projectionMatrix.makePerspective(Q,_e,ge,pe,D,P),J.projectionMatrixInverse.copy(J.projectionMatrix).invert()}function F(J,ce){ce===null?J.matrixWorld.copy(J.matrix):J.matrixWorld.multiplyMatrices(ce.matrixWorld,J.matrix),J.matrixWorldInverse.copy(J.matrixWorld).invert()}this.updateCamera=function(J){if(i===null)return;b.near=I.near=C.near=J.near,b.far=I.far=C.far=J.far,(R!==b.near||B!==b.far)&&(i.updateRenderState({depthNear:b.near,depthFar:b.far}),R=b.near,B=b.far);const ce=J.parent,Me=b.cameras;F(b,ce);for(let be=0;be<Me.length;be++)F(Me[be],ce);Me.length===2?ue(b,C,I):b.projectionMatrix.copy(C.projectionMatrix),H(J,b,ce)};function H(J,ce,Me){Me===null?J.matrix.copy(ce.matrixWorld):(J.matrix.copy(Me.matrixWorld),J.matrix.invert(),J.matrix.multiply(ce.matrixWorld)),J.matrix.decompose(J.position,J.quaternion,J.scale),J.updateMatrixWorld(!0),J.projectionMatrix.copy(ce.projectionMatrix),J.projectionMatrixInverse.copy(ce.projectionMatrixInverse),J.isPerspectiveCamera&&(J.fov=Eo*2*Math.atan(1/J.projectionMatrix.elements[5]),J.zoom=1)}this.getCamera=function(){return b},this.getFoveation=function(){if(!(m===null&&g===null))return u},this.setFoveation=function(J){u=J,m!==null&&(m.fixedFoveation=J),g!==null&&g.fixedFoveation!==void 0&&(g.fixedFoveation=J)};let X=null;function Z(J,ce){if(f=ce.getViewerPose(h||l),y=ce,f!==null){const Me=f.views;g!==null&&(e.setRenderTargetFramebuffer(v,g.framebuffer),e.setRenderTarget(v));let be=!1;Me.length!==b.cameras.length&&(b.cameras.length=0,be=!0);for(let Ae=0;Ae<Me.length;Ae++){const nt=Me[Ae];let ot=null;if(g!==null)ot=g.getViewport(nt);else{const Ze=p.getViewSubImage(m,nt);ot=Ze.viewport,Ae===0&&(e.setRenderTargetTextures(v,Ze.colorTexture,m.ignoreDepthValues?void 0:Ze.depthStencilTexture),e.setRenderTarget(v))}let Ve=z[Ae];Ve===void 0&&(Ve=new en,Ve.layers.enable(Ae),Ve.viewport=new Dt,z[Ae]=Ve),Ve.matrix.fromArray(nt.transform.matrix),Ve.matrix.decompose(Ve.position,Ve.quaternion,Ve.scale),Ve.projectionMatrix.fromArray(nt.projectionMatrix),Ve.projectionMatrixInverse.copy(Ve.projectionMatrix).invert(),Ve.viewport.set(ot.x,ot.y,ot.width,ot.height),Ae===0&&(b.matrix.copy(Ve.matrix),b.matrix.decompose(b.position,b.quaternion,b.scale)),be===!0&&b.cameras.push(Ve)}}for(let Me=0;Me<w.length;Me++){const be=E[Me],Ae=w[Me];be!==null&&Ae!==void 0&&Ae.update(be,ce,h||l)}X&&X(J,ce),ce.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:ce}),y=null}const le=new nv;le.setAnimationLoop(Z),this.setAnimationLoop=function(J){X=J},this.dispose=function(){}}}function ET(r,e){function t(x,v){x.matrixAutoUpdate===!0&&x.updateMatrix(),v.value.copy(x.matrix)}function n(x,v){v.color.getRGB(x.fogColor.value,$_(r)),v.isFog?(x.fogNear.value=v.near,x.fogFar.value=v.far):v.isFogExp2&&(x.fogDensity.value=v.density)}function i(x,v,w,E,A){v.isMeshBasicMaterial||v.isMeshLambertMaterial?s(x,v):v.isMeshToonMaterial?(s(x,v),p(x,v)):v.isMeshPhongMaterial?(s(x,v),f(x,v)):v.isMeshStandardMaterial?(s(x,v),m(x,v),v.isMeshPhysicalMaterial&&g(x,v,A)):v.isMeshMatcapMaterial?(s(x,v),y(x,v)):v.isMeshDepthMaterial?s(x,v):v.isMeshDistanceMaterial?(s(x,v),M(x,v)):v.isMeshNormalMaterial?s(x,v):v.isLineBasicMaterial?(l(x,v),v.isLineDashedMaterial&&c(x,v)):v.isPointsMaterial?u(x,v,w,E):v.isSpriteMaterial?h(x,v):v.isShadowMaterial?(x.color.value.copy(v.color),x.opacity.value=v.opacity):v.isShaderMaterial&&(v.uniformsNeedUpdate=!1)}function s(x,v){x.opacity.value=v.opacity,v.color&&x.diffuse.value.copy(v.color),v.emissive&&x.emissive.value.copy(v.emissive).multiplyScalar(v.emissiveIntensity),v.map&&(x.map.value=v.map,t(v.map,x.mapTransform)),v.alphaMap&&(x.alphaMap.value=v.alphaMap,t(v.alphaMap,x.alphaMapTransform)),v.bumpMap&&(x.bumpMap.value=v.bumpMap,t(v.bumpMap,x.bumpMapTransform),x.bumpScale.value=v.bumpScale,v.side===Rn&&(x.bumpScale.value*=-1)),v.normalMap&&(x.normalMap.value=v.normalMap,t(v.normalMap,x.normalMapTransform),x.normalScale.value.copy(v.normalScale),v.side===Rn&&x.normalScale.value.negate()),v.displacementMap&&(x.displacementMap.value=v.displacementMap,t(v.displacementMap,x.displacementMapTransform),x.displacementScale.value=v.displacementScale,x.displacementBias.value=v.displacementBias),v.emissiveMap&&(x.emissiveMap.value=v.emissiveMap,t(v.emissiveMap,x.emissiveMapTransform)),v.specularMap&&(x.specularMap.value=v.specularMap,t(v.specularMap,x.specularMapTransform)),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest);const w=e.get(v).envMap;if(w&&(x.envMap.value=w,x.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,x.reflectivity.value=v.reflectivity,x.ior.value=v.ior,x.refractionRatio.value=v.refractionRatio),v.lightMap){x.lightMap.value=v.lightMap;const E=r._useLegacyLights===!0?Math.PI:1;x.lightMapIntensity.value=v.lightMapIntensity*E,t(v.lightMap,x.lightMapTransform)}v.aoMap&&(x.aoMap.value=v.aoMap,x.aoMapIntensity.value=v.aoMapIntensity,t(v.aoMap,x.aoMapTransform))}function l(x,v){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,v.map&&(x.map.value=v.map,t(v.map,x.mapTransform))}function c(x,v){x.dashSize.value=v.dashSize,x.totalSize.value=v.dashSize+v.gapSize,x.scale.value=v.scale}function u(x,v,w,E){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,x.size.value=v.size*w,x.scale.value=E*.5,v.map&&(x.map.value=v.map,t(v.map,x.uvTransform)),v.alphaMap&&(x.alphaMap.value=v.alphaMap,t(v.alphaMap,x.alphaMapTransform)),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest)}function h(x,v){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,x.rotation.value=v.rotation,v.map&&(x.map.value=v.map,t(v.map,x.mapTransform)),v.alphaMap&&(x.alphaMap.value=v.alphaMap,t(v.alphaMap,x.alphaMapTransform)),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest)}function f(x,v){x.specular.value.copy(v.specular),x.shininess.value=Math.max(v.shininess,1e-4)}function p(x,v){v.gradientMap&&(x.gradientMap.value=v.gradientMap)}function m(x,v){x.metalness.value=v.metalness,v.metalnessMap&&(x.metalnessMap.value=v.metalnessMap,t(v.metalnessMap,x.metalnessMapTransform)),x.roughness.value=v.roughness,v.roughnessMap&&(x.roughnessMap.value=v.roughnessMap,t(v.roughnessMap,x.roughnessMapTransform)),e.get(v).envMap&&(x.envMapIntensity.value=v.envMapIntensity)}function g(x,v,w){x.ior.value=v.ior,v.sheen>0&&(x.sheenColor.value.copy(v.sheenColor).multiplyScalar(v.sheen),x.sheenRoughness.value=v.sheenRoughness,v.sheenColorMap&&(x.sheenColorMap.value=v.sheenColorMap,t(v.sheenColorMap,x.sheenColorMapTransform)),v.sheenRoughnessMap&&(x.sheenRoughnessMap.value=v.sheenRoughnessMap,t(v.sheenRoughnessMap,x.sheenRoughnessMapTransform))),v.clearcoat>0&&(x.clearcoat.value=v.clearcoat,x.clearcoatRoughness.value=v.clearcoatRoughness,v.clearcoatMap&&(x.clearcoatMap.value=v.clearcoatMap,t(v.clearcoatMap,x.clearcoatMapTransform)),v.clearcoatRoughnessMap&&(x.clearcoatRoughnessMap.value=v.clearcoatRoughnessMap,t(v.clearcoatRoughnessMap,x.clearcoatRoughnessMapTransform)),v.clearcoatNormalMap&&(x.clearcoatNormalMap.value=v.clearcoatNormalMap,t(v.clearcoatNormalMap,x.clearcoatNormalMapTransform),x.clearcoatNormalScale.value.copy(v.clearcoatNormalScale),v.side===Rn&&x.clearcoatNormalScale.value.negate())),v.iridescence>0&&(x.iridescence.value=v.iridescence,x.iridescenceIOR.value=v.iridescenceIOR,x.iridescenceThicknessMinimum.value=v.iridescenceThicknessRange[0],x.iridescenceThicknessMaximum.value=v.iridescenceThicknessRange[1],v.iridescenceMap&&(x.iridescenceMap.value=v.iridescenceMap,t(v.iridescenceMap,x.iridescenceMapTransform)),v.iridescenceThicknessMap&&(x.iridescenceThicknessMap.value=v.iridescenceThicknessMap,t(v.iridescenceThicknessMap,x.iridescenceThicknessMapTransform))),v.transmission>0&&(x.transmission.value=v.transmission,x.transmissionSamplerMap.value=w.texture,x.transmissionSamplerSize.value.set(w.width,w.height),v.transmissionMap&&(x.transmissionMap.value=v.transmissionMap,t(v.transmissionMap,x.transmissionMapTransform)),x.thickness.value=v.thickness,v.thicknessMap&&(x.thicknessMap.value=v.thicknessMap,t(v.thicknessMap,x.thicknessMapTransform)),x.attenuationDistance.value=v.attenuationDistance,x.attenuationColor.value.copy(v.attenuationColor)),v.anisotropy>0&&(x.anisotropyVector.value.set(v.anisotropy*Math.cos(v.anisotropyRotation),v.anisotropy*Math.sin(v.anisotropyRotation)),v.anisotropyMap&&(x.anisotropyMap.value=v.anisotropyMap,t(v.anisotropyMap,x.anisotropyMapTransform))),x.specularIntensity.value=v.specularIntensity,x.specularColor.value.copy(v.specularColor),v.specularColorMap&&(x.specularColorMap.value=v.specularColorMap,t(v.specularColorMap,x.specularColorMapTransform)),v.specularIntensityMap&&(x.specularIntensityMap.value=v.specularIntensityMap,t(v.specularIntensityMap,x.specularIntensityMapTransform))}function y(x,v){v.matcap&&(x.matcap.value=v.matcap)}function M(x,v){const w=e.get(v).light;x.referencePosition.value.setFromMatrixPosition(w.matrixWorld),x.nearDistance.value=w.shadow.camera.near,x.farDistance.value=w.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function wT(r,e,t,n){let i={},s={},l=[];const c=t.isWebGL2?r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS):0;function u(w,E){const A=E.program;n.uniformBlockBinding(w,A)}function h(w,E){let A=i[w.id];A===void 0&&(y(w),A=f(w),i[w.id]=A,w.addEventListener("dispose",x));const L=E.program;n.updateUBOMapping(w,L);const C=e.render.frame;s[w.id]!==C&&(m(w),s[w.id]=C)}function f(w){const E=p();w.__bindingPointIndex=E;const A=r.createBuffer(),L=w.__size,C=w.usage;return r.bindBuffer(r.UNIFORM_BUFFER,A),r.bufferData(r.UNIFORM_BUFFER,L,C),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,E,A),A}function p(){for(let w=0;w<c;w++)if(l.indexOf(w)===-1)return l.push(w),w;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function m(w){const E=i[w.id],A=w.uniforms,L=w.__cache;r.bindBuffer(r.UNIFORM_BUFFER,E);for(let C=0,I=A.length;C<I;C++){const z=Array.isArray(A[C])?A[C]:[A[C]];for(let b=0,R=z.length;b<R;b++){const B=z[b];if(g(B,C,b,L)===!0){const $=B.__offset,ae=Array.isArray(B.value)?B.value:[B.value];let V=0;for(let j=0;j<ae.length;j++){const te=ae[j],ue=M(te);typeof te=="number"||typeof te=="boolean"?(B.__data[0]=te,r.bufferSubData(r.UNIFORM_BUFFER,$+V,B.__data)):te.isMatrix3?(B.__data[0]=te.elements[0],B.__data[1]=te.elements[1],B.__data[2]=te.elements[2],B.__data[3]=0,B.__data[4]=te.elements[3],B.__data[5]=te.elements[4],B.__data[6]=te.elements[5],B.__data[7]=0,B.__data[8]=te.elements[6],B.__data[9]=te.elements[7],B.__data[10]=te.elements[8],B.__data[11]=0):(te.toArray(B.__data,V),V+=ue.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,$,B.__data)}}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function g(w,E,A,L){const C=w.value,I=E+"_"+A;if(L[I]===void 0)return typeof C=="number"||typeof C=="boolean"?L[I]=C:L[I]=C.clone(),!0;{const z=L[I];if(typeof C=="number"||typeof C=="boolean"){if(z!==C)return L[I]=C,!0}else if(z.equals(C)===!1)return z.copy(C),!0}return!1}function y(w){const E=w.uniforms;let A=0;const L=16;for(let I=0,z=E.length;I<z;I++){const b=Array.isArray(E[I])?E[I]:[E[I]];for(let R=0,B=b.length;R<B;R++){const $=b[R],ae=Array.isArray($.value)?$.value:[$.value];for(let V=0,j=ae.length;V<j;V++){const te=ae[V],ue=M(te),F=A%L;F!==0&&L-F<ue.boundary&&(A+=L-F),$.__data=new Float32Array(ue.storage/Float32Array.BYTES_PER_ELEMENT),$.__offset=A,A+=ue.storage}}}const C=A%L;return C>0&&(A+=L-C),w.__size=A,w.__cache={},this}function M(w){const E={boundary:0,storage:0};return typeof w=="number"||typeof w=="boolean"?(E.boundary=4,E.storage=4):w.isVector2?(E.boundary=8,E.storage=8):w.isVector3||w.isColor?(E.boundary=16,E.storage=12):w.isVector4?(E.boundary=16,E.storage=16):w.isMatrix3?(E.boundary=48,E.storage=48):w.isMatrix4?(E.boundary=64,E.storage=64):w.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",w),E}function x(w){const E=w.target;E.removeEventListener("dispose",x);const A=l.indexOf(E.__bindingPointIndex);l.splice(A,1),r.deleteBuffer(i[E.id]),delete i[E.id],delete s[E.id]}function v(){for(const w in i)r.deleteBuffer(i[w]);l=[],i={},s={}}return{bind:u,update:h,dispose:v}}class qd{constructor(e={}){const{canvas:t=J_(),context:n=null,depth:i=!0,stencil:s=!0,alpha:l=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:h=!1,powerPreference:f="default",failIfMajorPerformanceCaveat:p=!1}=e;this.isWebGLRenderer=!0;let m;n!==null?m=n.getContextAttributes().alpha:m=l;const g=new Uint32Array(4),y=new Int32Array(4);let M=null,x=null;const v=[],w=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=an,this._useLegacyLights=!1,this.toneMapping=Bi,this.toneMappingExposure=1;const E=this;let A=!1,L=0,C=0,I=null,z=-1,b=null;const R=new Dt,B=new Dt;let $=null;const ae=new Ue(0);let V=0,j=t.width,te=t.height,ue=1,F=null,H=null;const X=new Dt(0,0,j,te),Z=new Dt(0,0,j,te);let le=!1;const J=new Ya;let ce=!1,Me=!1,be=null;const Ae=new lt,nt=new he,ot=new U,Ve={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Ze(){return I===null?ue:1}let k=n;function xe(N,K){for(let ie=0;ie<N.length;ie++){const re=N[ie],ne=t.getContext(re,K);if(ne!==null)return ne}return null}try{const N={alpha:!0,depth:i,stencil:s,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:h,powerPreference:f,failIfMajorPerformanceCaveat:p};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${ka}`),t.addEventListener("webglcontextlost",ye,!1),t.addEventListener("webglcontextrestored",W,!1),t.addEventListener("webglcontextcreationerror",we,!1),k===null){const K=["webgl2","webgl","experimental-webgl"];if(E.isWebGL1Renderer===!0&&K.shift(),k=xe(K,N),k===null)throw xe(K)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&k instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),k.getShaderPrecisionFormat===void 0&&(k.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(N){throw console.error("THREE.WebGLRenderer: "+N.message),N}let fe,Se,de,Ye,Pe,D,P,Q,_e,ge,pe,Ge,Ce,Oe,Qe,ut,ve,wt,mt,at,Ke,ze,G,me;function Ne(){fe=new zw(k),Se=new Iw(k,fe,e),fe.init(Se),ze=new lv(k,fe,Se),de=new yT(k,fe,Se),Ye=new Hw(k),Pe=new aT,D=new xT(k,fe,de,Pe,Se,ze,Ye),P=new Nw(E),Q=new Fw(E),_e=new jS(k,Se),G=new Pw(k,fe,_e,Se),ge=new Bw(k,_e,Ye,G),pe=new Xw(k,ge,_e,Ye),mt=new Ww(k,Se,D),ut=new Dw(Pe),Ge=new oT(E,P,Q,fe,Se,G,ut),Ce=new ET(E,Pe),Oe=new cT,Qe=new mT(fe,Se),wt=new Rw(E,P,Q,de,pe,m,u),ve=new vT(E,pe,Se),me=new wT(k,Ye,Se,de),at=new Lw(k,fe,Ye,Se),Ke=new kw(k,fe,Ye,Se),Ye.programs=Ge.programs,E.capabilities=Se,E.extensions=fe,E.properties=Pe,E.renderLists=Oe,E.shadowMap=ve,E.state=de,E.info=Ye}Ne();const Ie=new MT(E,k);this.xr=Ie,this.getContext=function(){return k},this.getContextAttributes=function(){return k.getContextAttributes()},this.forceContextLoss=function(){const N=fe.get("WEBGL_lose_context");N&&N.loseContext()},this.forceContextRestore=function(){const N=fe.get("WEBGL_lose_context");N&&N.restoreContext()},this.getPixelRatio=function(){return ue},this.setPixelRatio=function(N){N!==void 0&&(ue=N,this.setSize(j,te,!1))},this.getSize=function(N){return N.set(j,te)},this.setSize=function(N,K,ie=!0){if(Ie.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}j=N,te=K,t.width=Math.floor(N*ue),t.height=Math.floor(K*ue),ie===!0&&(t.style.width=N+"px",t.style.height=K+"px"),this.setViewport(0,0,N,K)},this.getDrawingBufferSize=function(N){return N.set(j*ue,te*ue).floor()},this.setDrawingBufferSize=function(N,K,ie){j=N,te=K,ue=ie,t.width=Math.floor(N*ie),t.height=Math.floor(K*ie),this.setViewport(0,0,N,K)},this.getCurrentViewport=function(N){return N.copy(R)},this.getViewport=function(N){return N.copy(X)},this.setViewport=function(N,K,ie,re){N.isVector4?X.set(N.x,N.y,N.z,N.w):X.set(N,K,ie,re),de.viewport(R.copy(X).multiplyScalar(ue).floor())},this.getScissor=function(N){return N.copy(Z)},this.setScissor=function(N,K,ie,re){N.isVector4?Z.set(N.x,N.y,N.z,N.w):Z.set(N,K,ie,re),de.scissor(B.copy(Z).multiplyScalar(ue).floor())},this.getScissorTest=function(){return le},this.setScissorTest=function(N){de.setScissorTest(le=N)},this.setOpaqueSort=function(N){F=N},this.setTransparentSort=function(N){H=N},this.getClearColor=function(N){return N.copy(wt.getClearColor())},this.setClearColor=function(){wt.setClearColor.apply(wt,arguments)},this.getClearAlpha=function(){return wt.getClearAlpha()},this.setClearAlpha=function(){wt.setClearAlpha.apply(wt,arguments)},this.clear=function(N=!0,K=!0,ie=!0){let re=0;if(N){let ne=!1;if(I!==null){const Fe=I.texture.format;ne=Fe===Id||Fe===Ld||Fe===Pd}if(ne){const Fe=I.texture.type,je=Fe===ki||Fe===ir||Fe===au||Fe===Cr||Fe===Cd||Fe===Rd,it=wt.getClearColor(),rt=wt.getClearAlpha(),ht=it.r,ct=it.g,ft=it.b;je?(g[0]=ht,g[1]=ct,g[2]=ft,g[3]=rt,k.clearBufferuiv(k.COLOR,0,g)):(y[0]=ht,y[1]=ct,y[2]=ft,y[3]=rt,k.clearBufferiv(k.COLOR,0,y))}else re|=k.COLOR_BUFFER_BIT}K&&(re|=k.DEPTH_BUFFER_BIT),ie&&(re|=k.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),k.clear(re)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",ye,!1),t.removeEventListener("webglcontextrestored",W,!1),t.removeEventListener("webglcontextcreationerror",we,!1),Oe.dispose(),Qe.dispose(),Pe.dispose(),P.dispose(),Q.dispose(),pe.dispose(),G.dispose(),me.dispose(),Ge.dispose(),Ie.dispose(),Ie.removeEventListener("sessionstart",kt),Ie.removeEventListener("sessionend",At),be&&(be.dispose(),be=null),_n.stop()};function ye(N){N.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),A=!0}function W(){console.log("THREE.WebGLRenderer: Context Restored."),A=!1;const N=Ye.autoReset,K=ve.enabled,ie=ve.autoUpdate,re=ve.needsUpdate,ne=ve.type;Ne(),Ye.autoReset=N,ve.enabled=K,ve.autoUpdate=ie,ve.needsUpdate=re,ve.type=ne}function we(N){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",N.statusMessage)}function Re(N){const K=N.target;K.removeEventListener("dispose",Re),$e(K)}function $e(N){We(N),Pe.remove(N)}function We(N){const K=Pe.get(N).programs;K!==void 0&&(K.forEach(function(ie){Ge.releaseProgram(ie)}),N.isShaderMaterial&&Ge.releaseShaderCache(N))}this.renderBufferDirect=function(N,K,ie,re,ne,Fe){K===null&&(K=Ve);const je=ne.isMesh&&ne.matrixWorld.determinant()<0,it=Iu(N,K,ie,re,ne);de.setMaterial(re,je);let rt=ie.index,ht=1;if(re.wireframe===!0){if(rt=ge.getWireframeAttribute(ie),rt===void 0)return;ht=2}const ct=ie.drawRange,ft=ie.attributes.position;let Vt=ct.start*ht,vn=(ct.start+ct.count)*ht;Fe!==null&&(Vt=Math.max(Vt,Fe.start*ht),vn=Math.min(vn,(Fe.start+Fe.count)*ht)),rt!==null?(Vt=Math.max(Vt,0),vn=Math.min(vn,rt.count)):ft!=null&&(Vt=Math.max(Vt,0),vn=Math.min(vn,ft.count));const zt=vn-Vt;if(zt<0||zt===1/0)return;G.setup(ne,re,it,ie,rt);let hn,st=at;if(rt!==null&&(hn=_e.get(rt),st=Ke,st.setIndex(hn)),ne.isMesh)re.wireframe===!0?(de.setLineWidth(re.wireframeLinewidth*Ze()),st.setMode(k.LINES)):st.setMode(k.TRIANGLES);else if(ne.isLine){let ke=re.linewidth;ke===void 0&&(ke=1),de.setLineWidth(ke*Ze()),ne.isLineSegments?st.setMode(k.LINES):ne.isLineLoop?st.setMode(k.LINE_LOOP):st.setMode(k.LINE_STRIP)}else ne.isPoints?st.setMode(k.POINTS):ne.isSprite&&st.setMode(k.TRIANGLES);if(ne.isBatchedMesh)st.renderMultiDraw(ne._multiDrawStarts,ne._multiDrawCounts,ne._multiDrawCount);else if(ne.isInstancedMesh)st.renderInstances(Vt,zt,ne.count);else if(ie.isInstancedBufferGeometry){const ke=ie._maxInstanceCount!==void 0?ie._maxInstanceCount:1/0,ii=Math.min(ie.instanceCount,ke);st.renderInstances(Vt,zt,ii)}else st.render(Vt,zt)};function Et(N,K,ie){N.transparent===!0&&N.side===zi&&N.forceSinglePass===!1?(N.side=Rn,N.needsUpdate=!0,bs(N,K,ie),N.side=or,N.needsUpdate=!0,bs(N,K,ie),N.side=zi):bs(N,K,ie)}this.compile=function(N,K,ie=null){ie===null&&(ie=N),x=Qe.get(ie),x.init(),w.push(x),ie.traverseVisible(function(ne){ne.isLight&&ne.layers.test(K.layers)&&(x.pushLight(ne),ne.castShadow&&x.pushShadow(ne))}),N!==ie&&N.traverseVisible(function(ne){ne.isLight&&ne.layers.test(K.layers)&&(x.pushLight(ne),ne.castShadow&&x.pushShadow(ne))}),x.setupLights(E._useLegacyLights);const re=new Set;return N.traverse(function(ne){const Fe=ne.material;if(Fe)if(Array.isArray(Fe))for(let je=0;je<Fe.length;je++){const it=Fe[je];Et(it,ie,ne),re.add(it)}else Et(Fe,ie,ne),re.add(Fe)}),w.pop(),x=null,re},this.compileAsync=function(N,K,ie=null){const re=this.compile(N,K,ie);return new Promise(ne=>{function Fe(){if(re.forEach(function(je){Pe.get(je).currentProgram.isReady()&&re.delete(je)}),re.size===0){ne(N);return}setTimeout(Fe,10)}fe.get("KHR_parallel_shader_compile")!==null?Fe():setTimeout(Fe,10)})};let Tt=null;function Ut(N){Tt&&Tt(N)}function kt(){_n.stop()}function At(){_n.start()}const _n=new nv;_n.setAnimationLoop(Ut),typeof self<"u"&&_n.setContext(self),this.setAnimationLoop=function(N){Tt=N,Ie.setAnimationLoop(N),N===null?_n.stop():_n.start()},Ie.addEventListener("sessionstart",kt),Ie.addEventListener("sessionend",At),this.render=function(N,K){if(K!==void 0&&K.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(A===!0)return;N.matrixWorldAutoUpdate===!0&&N.updateMatrixWorld(),K.parent===null&&K.matrixWorldAutoUpdate===!0&&K.updateMatrixWorld(),Ie.enabled===!0&&Ie.isPresenting===!0&&(Ie.cameraAutoUpdate===!0&&Ie.updateCamera(K),K=Ie.getCamera()),N.isScene===!0&&N.onBeforeRender(E,N,K,I),x=Qe.get(N,w.length),x.init(),w.push(x),Ae.multiplyMatrices(K.projectionMatrix,K.matrixWorldInverse),J.setFromProjectionMatrix(Ae),Me=this.localClippingEnabled,ce=ut.init(this.clippingPlanes,Me),M=Oe.get(N,v.length),M.init(),v.push(M),ni(N,K,0,E.sortObjects),M.finish(),E.sortObjects===!0&&M.sort(F,H),this.info.render.frame++,ce===!0&&ut.beginShadows();const ie=x.state.shadowsArray;if(ve.render(ie,N,K),ce===!0&&ut.endShadows(),this.info.autoReset===!0&&this.info.reset(),wt.render(M,N),x.setupLights(E._useLegacyLights),K.isArrayCamera){const re=K.cameras;for(let ne=0,Fe=re.length;ne<Fe;ne++){const je=re[ne];Lo(M,N,je,je.viewport)}}else Lo(M,N,K);I!==null&&(D.updateMultisampleRenderTarget(I),D.updateRenderTargetMipmap(I)),N.isScene===!0&&N.onAfterRender(E,N,K),G.resetDefaultState(),z=-1,b=null,w.pop(),w.length>0?x=w[w.length-1]:x=null,v.pop(),v.length>0?M=v[v.length-1]:M=null};function ni(N,K,ie,re){if(N.visible===!1)return;if(N.layers.test(K.layers)){if(N.isGroup)ie=N.renderOrder;else if(N.isLOD)N.autoUpdate===!0&&N.update(K);else if(N.isLight)x.pushLight(N),N.castShadow&&x.pushShadow(N);else if(N.isSprite){if(!N.frustumCulled||J.intersectsSprite(N)){re&&ot.setFromMatrixPosition(N.matrixWorld).applyMatrix4(Ae);const je=pe.update(N),it=N.material;it.visible&&M.push(N,je,it,ie,ot.z,null)}}else if((N.isMesh||N.isLine||N.isPoints)&&(!N.frustumCulled||J.intersectsObject(N))){const je=pe.update(N),it=N.material;if(re&&(N.boundingSphere!==void 0?(N.boundingSphere===null&&N.computeBoundingSphere(),ot.copy(N.boundingSphere.center)):(je.boundingSphere===null&&je.computeBoundingSphere(),ot.copy(je.boundingSphere.center)),ot.applyMatrix4(N.matrixWorld).applyMatrix4(Ae)),Array.isArray(it)){const rt=je.groups;for(let ht=0,ct=rt.length;ht<ct;ht++){const ft=rt[ht],Vt=it[ft.materialIndex];Vt&&Vt.visible&&M.push(N,je,Vt,ie,ot.z,ft)}}else it.visible&&M.push(N,je,it,ie,ot.z,null)}}const Fe=N.children;for(let je=0,it=Fe.length;je<it;je++)ni(Fe[je],K,ie,re)}function Lo(N,K,ie,re){const ne=N.opaque,Fe=N.transmissive,je=N.transparent;x.setupLightsView(ie),ce===!0&&ut.setGlobalState(E.clippingPlanes,ie),Fe.length>0&&Io(ne,Fe,K,ie),re&&de.viewport(R.copy(re)),ne.length>0&&As(ne,K,ie),Fe.length>0&&As(Fe,K,ie),je.length>0&&As(je,K,ie),de.buffers.depth.setTest(!0),de.buffers.depth.setMask(!0),de.buffers.color.setMask(!0),de.setPolygonOffset(!1)}function Io(N,K,ie,re){if((ie.isScene===!0?ie.overrideMaterial:null)!==null)return;const Fe=Se.isWebGL2;be===null&&(be=new wi(1,1,{generateMipmaps:!0,type:fe.has("EXT_color_buffer_half_float")?So:ki,minFilter:Dr,samples:Fe?4:0})),E.getDrawingBufferSize(nt),Fe?be.setSize(nt.x,nt.y):be.setSize(tu(nt.x),tu(nt.y));const je=E.getRenderTarget();E.setRenderTarget(be),E.getClearColor(ae),V=E.getClearAlpha(),V<1&&E.setClearColor(16777215,.5),E.clear();const it=E.toneMapping;E.toneMapping=Bi,As(N,ie,re),D.updateMultisampleRenderTarget(be),D.updateRenderTargetMipmap(be);let rt=!1;for(let ht=0,ct=K.length;ht<ct;ht++){const ft=K[ht],Vt=ft.object,vn=ft.geometry,zt=ft.material,hn=ft.group;if(zt.side===zi&&Vt.layers.test(re.layers)){const st=zt.side;zt.side=Rn,zt.needsUpdate=!0,ur(Vt,ie,re,vn,zt,hn),zt.side=st,zt.needsUpdate=!0,rt=!0}}rt===!0&&(D.updateMultisampleRenderTarget(be),D.updateRenderTargetMipmap(be)),E.setRenderTarget(je),E.setClearColor(ae,V),E.toneMapping=it}function As(N,K,ie){const re=K.isScene===!0?K.overrideMaterial:null;for(let ne=0,Fe=N.length;ne<Fe;ne++){const je=N[ne],it=je.object,rt=je.geometry,ht=re===null?je.material:re,ct=je.group;it.layers.test(ie.layers)&&ur(it,K,ie,rt,ht,ct)}}function ur(N,K,ie,re,ne,Fe){N.onBeforeRender(E,K,ie,re,ne,Fe),N.modelViewMatrix.multiplyMatrices(ie.matrixWorldInverse,N.matrixWorld),N.normalMatrix.getNormalMatrix(N.modelViewMatrix),ne.onBeforeRender(E,K,ie,re,N,Fe),ne.transparent===!0&&ne.side===zi&&ne.forceSinglePass===!1?(ne.side=Rn,ne.needsUpdate=!0,E.renderBufferDirect(ie,K,re,ne,N,Fe),ne.side=or,ne.needsUpdate=!0,E.renderBufferDirect(ie,K,re,ne,N,Fe),ne.side=zi):E.renderBufferDirect(ie,K,re,ne,N,Fe),N.onAfterRender(E,K,ie,re,ne,Fe)}function bs(N,K,ie){K.isScene!==!0&&(K=Ve);const re=Pe.get(N),ne=x.state.lights,Fe=x.state.shadowsArray,je=ne.state.version,it=Ge.getParameters(N,ne.state,Fe,K,ie),rt=Ge.getProgramCacheKey(it);let ht=re.programs;re.environment=N.isMeshStandardMaterial?K.environment:null,re.fog=K.fog,re.envMap=(N.isMeshStandardMaterial?Q:P).get(N.envMap||re.environment),ht===void 0&&(N.addEventListener("dispose",Re),ht=new Map,re.programs=ht);let ct=ht.get(rt);if(ct!==void 0){if(re.currentProgram===ct&&re.lightsStateVersion===je)return el(N,it),ct}else it.uniforms=Ge.getUniforms(N),N.onBuild(ie,it,E),N.onBeforeCompile(it,E),ct=Ge.acquireProgram(it,rt),ht.set(rt,ct),re.uniforms=it.uniforms;const ft=re.uniforms;return(!N.isShaderMaterial&&!N.isRawShaderMaterial||N.clipping===!0)&&(ft.clippingPlanes=ut.uniform),el(N,it),re.needsLights=Nu(N),re.lightsStateVersion=je,re.needsLights&&(ft.ambientLightColor.value=ne.state.ambient,ft.lightProbe.value=ne.state.probe,ft.directionalLights.value=ne.state.directional,ft.directionalLightShadows.value=ne.state.directionalShadow,ft.spotLights.value=ne.state.spot,ft.spotLightShadows.value=ne.state.spotShadow,ft.rectAreaLights.value=ne.state.rectArea,ft.ltc_1.value=ne.state.rectAreaLTC1,ft.ltc_2.value=ne.state.rectAreaLTC2,ft.pointLights.value=ne.state.point,ft.pointLightShadows.value=ne.state.pointShadow,ft.hemisphereLights.value=ne.state.hemi,ft.directionalShadowMap.value=ne.state.directionalShadowMap,ft.directionalShadowMatrix.value=ne.state.directionalShadowMatrix,ft.spotShadowMap.value=ne.state.spotShadowMap,ft.spotLightMatrix.value=ne.state.spotLightMatrix,ft.spotLightMap.value=ne.state.spotLightMap,ft.pointShadowMap.value=ne.state.pointShadowMap,ft.pointShadowMatrix.value=ne.state.pointShadowMatrix),re.currentProgram=ct,re.uniformsList=null,ct}function $a(N){if(N.uniformsList===null){const K=N.currentProgram.getUniforms();N.uniformsList=jc.seqWithValue(K.seq,N.uniforms)}return N.uniformsList}function el(N,K){const ie=Pe.get(N);ie.outputColorSpace=K.outputColorSpace,ie.batching=K.batching,ie.instancing=K.instancing,ie.instancingColor=K.instancingColor,ie.skinning=K.skinning,ie.morphTargets=K.morphTargets,ie.morphNormals=K.morphNormals,ie.morphColors=K.morphColors,ie.morphTargetsCount=K.morphTargetsCount,ie.numClippingPlanes=K.numClippingPlanes,ie.numIntersection=K.numClipIntersection,ie.vertexAlphas=K.vertexAlphas,ie.vertexTangents=K.vertexTangents,ie.toneMapping=K.toneMapping}function Iu(N,K,ie,re,ne){K.isScene!==!0&&(K=Ve),D.resetTextureUnits();const Fe=K.fog,je=re.isMeshStandardMaterial?K.environment:null,it=I===null?E.outputColorSpace:I.isXRRenderTarget===!0?I.texture.colorSpace:Vi,rt=(re.isMeshStandardMaterial?Q:P).get(re.envMap||je),ht=re.vertexColors===!0&&!!ie.attributes.color&&ie.attributes.color.itemSize===4,ct=!!ie.attributes.tangent&&(!!re.normalMap||re.anisotropy>0),ft=!!ie.morphAttributes.position,Vt=!!ie.morphAttributes.normal,vn=!!ie.morphAttributes.color;let zt=Bi;re.toneMapped&&(I===null||I.isXRRenderTarget===!0)&&(zt=E.toneMapping);const hn=ie.morphAttributes.position||ie.morphAttributes.normal||ie.morphAttributes.color,st=hn!==void 0?hn.length:0,ke=Pe.get(re),ii=x.state.lights;if(ce===!0&&(Me===!0||N!==b)){const yn=N===b&&re.id===z;ut.setState(re,N,yn)}let St=!1;re.version===ke.__version?(ke.needsLights&&ke.lightsStateVersion!==ii.state.version||ke.outputColorSpace!==it||ne.isBatchedMesh&&ke.batching===!1||!ne.isBatchedMesh&&ke.batching===!0||ne.isInstancedMesh&&ke.instancing===!1||!ne.isInstancedMesh&&ke.instancing===!0||ne.isSkinnedMesh&&ke.skinning===!1||!ne.isSkinnedMesh&&ke.skinning===!0||ne.isInstancedMesh&&ke.instancingColor===!0&&ne.instanceColor===null||ne.isInstancedMesh&&ke.instancingColor===!1&&ne.instanceColor!==null||ke.envMap!==rt||re.fog===!0&&ke.fog!==Fe||ke.numClippingPlanes!==void 0&&(ke.numClippingPlanes!==ut.numPlanes||ke.numIntersection!==ut.numIntersection)||ke.vertexAlphas!==ht||ke.vertexTangents!==ct||ke.morphTargets!==ft||ke.morphNormals!==Vt||ke.morphColors!==vn||ke.toneMapping!==zt||Se.isWebGL2===!0&&ke.morphTargetsCount!==st)&&(St=!0):(St=!0,ke.__version=re.version);let Xt=ke.currentProgram;St===!0&&(Xt=bs(re,K,ne));let Ci=!1,ri=!1,fn=!1;const jt=Xt.getUniforms(),Ri=ke.uniforms;if(de.useProgram(Xt.program)&&(Ci=!0,ri=!0,fn=!0),re.id!==z&&(z=re.id,ri=!0),Ci||b!==N){jt.setValue(k,"projectionMatrix",N.projectionMatrix),jt.setValue(k,"viewMatrix",N.matrixWorldInverse);const yn=jt.map.cameraPosition;yn!==void 0&&yn.setValue(k,ot.setFromMatrixPosition(N.matrixWorld)),Se.logarithmicDepthBuffer&&jt.setValue(k,"logDepthBufFC",2/(Math.log(N.far+1)/Math.LN2)),(re.isMeshPhongMaterial||re.isMeshToonMaterial||re.isMeshLambertMaterial||re.isMeshBasicMaterial||re.isMeshStandardMaterial||re.isShaderMaterial)&&jt.setValue(k,"isOrthographic",N.isOrthographicCamera===!0),b!==N&&(b=N,ri=!0,fn=!0)}if(ne.isSkinnedMesh){jt.setOptional(k,ne,"bindMatrix"),jt.setOptional(k,ne,"bindMatrixInverse");const yn=ne.skeleton;yn&&(Se.floatVertexTextures?(yn.boneTexture===null&&yn.computeBoneTexture(),jt.setValue(k,"boneTexture",yn.boneTexture,D)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}ne.isBatchedMesh&&(jt.setOptional(k,ne,"batchingTexture"),jt.setValue(k,"batchingTexture",ne._matricesTexture,D));const Cs=ie.morphAttributes;if((Cs.position!==void 0||Cs.normal!==void 0||Cs.color!==void 0&&Se.isWebGL2===!0)&&mt.update(ne,ie,Xt),(ri||ke.receiveShadow!==ne.receiveShadow)&&(ke.receiveShadow=ne.receiveShadow,jt.setValue(k,"receiveShadow",ne.receiveShadow)),re.isMeshGouraudMaterial&&re.envMap!==null&&(Ri.envMap.value=rt,Ri.flipEnvMap.value=rt.isCubeTexture&&rt.isRenderTargetTexture===!1?-1:1),ri&&(jt.setValue(k,"toneMappingExposure",E.toneMappingExposure),ke.needsLights&&Du(Ri,fn),Fe&&re.fog===!0&&Ce.refreshFogUniforms(Ri,Fe),Ce.refreshMaterialUniforms(Ri,re,ue,te,be),jc.upload(k,$a(ke),Ri,D)),re.isShaderMaterial&&re.uniformsNeedUpdate===!0&&(jc.upload(k,$a(ke),Ri,D),re.uniformsNeedUpdate=!1),re.isSpriteMaterial&&jt.setValue(k,"center",ne.center),jt.setValue(k,"modelViewMatrix",ne.modelViewMatrix),jt.setValue(k,"normalMatrix",ne.normalMatrix),jt.setValue(k,"modelMatrix",ne.matrixWorld),re.isShaderMaterial||re.isRawShaderMaterial){const yn=re.uniformsGroups;for(let Rs=0,qn=yn.length;Rs<qn;Rs++)if(Se.isWebGL2){const tl=yn[Rs];me.update(tl,Xt),me.bind(tl,Xt)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Xt}function Du(N,K){N.ambientLightColor.needsUpdate=K,N.lightProbe.needsUpdate=K,N.directionalLights.needsUpdate=K,N.directionalLightShadows.needsUpdate=K,N.pointLights.needsUpdate=K,N.pointLightShadows.needsUpdate=K,N.spotLights.needsUpdate=K,N.spotLightShadows.needsUpdate=K,N.rectAreaLights.needsUpdate=K,N.hemisphereLights.needsUpdate=K}function Nu(N){return N.isMeshLambertMaterial||N.isMeshToonMaterial||N.isMeshPhongMaterial||N.isMeshStandardMaterial||N.isShadowMaterial||N.isShaderMaterial&&N.lights===!0}this.getActiveCubeFace=function(){return L},this.getActiveMipmapLevel=function(){return C},this.getRenderTarget=function(){return I},this.setRenderTargetTextures=function(N,K,ie){Pe.get(N.texture).__webglTexture=K,Pe.get(N.depthTexture).__webglTexture=ie;const re=Pe.get(N);re.__hasExternalTextures=!0,re.__hasExternalTextures&&(re.__autoAllocateDepthBuffer=ie===void 0,re.__autoAllocateDepthBuffer||fe.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),re.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(N,K){const ie=Pe.get(N);ie.__webglFramebuffer=K,ie.__useDefaultFramebuffer=K===void 0},this.setRenderTarget=function(N,K=0,ie=0){I=N,L=K,C=ie;let re=!0,ne=null,Fe=!1,je=!1;if(N){const rt=Pe.get(N);rt.__useDefaultFramebuffer!==void 0?(de.bindFramebuffer(k.FRAMEBUFFER,null),re=!1):rt.__webglFramebuffer===void 0?D.setupRenderTarget(N):rt.__hasExternalTextures&&D.rebindTextures(N,Pe.get(N.texture).__webglTexture,Pe.get(N.depthTexture).__webglTexture);const ht=N.texture;(ht.isData3DTexture||ht.isDataArrayTexture||ht.isCompressedArrayTexture)&&(je=!0);const ct=Pe.get(N).__webglFramebuffer;N.isWebGLCubeRenderTarget?(Array.isArray(ct[K])?ne=ct[K][ie]:ne=ct[K],Fe=!0):Se.isWebGL2&&N.samples>0&&D.useMultisampledRTT(N)===!1?ne=Pe.get(N).__webglMultisampledFramebuffer:Array.isArray(ct)?ne=ct[ie]:ne=ct,R.copy(N.viewport),B.copy(N.scissor),$=N.scissorTest}else R.copy(X).multiplyScalar(ue).floor(),B.copy(Z).multiplyScalar(ue).floor(),$=le;if(de.bindFramebuffer(k.FRAMEBUFFER,ne)&&Se.drawBuffers&&re&&de.drawBuffers(N,ne),de.viewport(R),de.scissor(B),de.setScissorTest($),Fe){const rt=Pe.get(N.texture);k.framebufferTexture2D(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,k.TEXTURE_CUBE_MAP_POSITIVE_X+K,rt.__webglTexture,ie)}else if(je){const rt=Pe.get(N.texture),ht=K||0;k.framebufferTextureLayer(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,rt.__webglTexture,ie||0,ht)}z=-1},this.readRenderTargetPixels=function(N,K,ie,re,ne,Fe,je){if(!(N&&N.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let it=Pe.get(N).__webglFramebuffer;if(N.isWebGLCubeRenderTarget&&je!==void 0&&(it=it[je]),it){de.bindFramebuffer(k.FRAMEBUFFER,it);try{const rt=N.texture,ht=rt.format,ct=rt.type;if(ht!==Fn&&ze.convert(ht)!==k.getParameter(k.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const ft=ct===So&&(fe.has("EXT_color_buffer_half_float")||Se.isWebGL2&&fe.has("EXT_color_buffer_float"));if(ct!==ki&&ze.convert(ct)!==k.getParameter(k.IMPLEMENTATION_COLOR_READ_TYPE)&&!(ct===Mi&&(Se.isWebGL2||fe.has("OES_texture_float")||fe.has("WEBGL_color_buffer_float")))&&!ft){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}K>=0&&K<=N.width-re&&ie>=0&&ie<=N.height-ne&&k.readPixels(K,ie,re,ne,ze.convert(ht),ze.convert(ct),Fe)}finally{const rt=I!==null?Pe.get(I).__webglFramebuffer:null;de.bindFramebuffer(k.FRAMEBUFFER,rt)}}},this.copyFramebufferToTexture=function(N,K,ie=0){const re=Math.pow(2,-ie),ne=Math.floor(K.image.width*re),Fe=Math.floor(K.image.height*re);D.setTexture2D(K,0),k.copyTexSubImage2D(k.TEXTURE_2D,ie,0,0,N.x,N.y,ne,Fe),de.unbindTexture()},this.copyTextureToTexture=function(N,K,ie,re=0){const ne=K.image.width,Fe=K.image.height,je=ze.convert(ie.format),it=ze.convert(ie.type);D.setTexture2D(ie,0),k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,ie.flipY),k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ie.premultiplyAlpha),k.pixelStorei(k.UNPACK_ALIGNMENT,ie.unpackAlignment),K.isDataTexture?k.texSubImage2D(k.TEXTURE_2D,re,N.x,N.y,ne,Fe,je,it,K.image.data):K.isCompressedTexture?k.compressedTexSubImage2D(k.TEXTURE_2D,re,N.x,N.y,K.mipmaps[0].width,K.mipmaps[0].height,je,K.mipmaps[0].data):k.texSubImage2D(k.TEXTURE_2D,re,N.x,N.y,je,it,K.image),re===0&&ie.generateMipmaps&&k.generateMipmap(k.TEXTURE_2D),de.unbindTexture()},this.copyTextureToTexture3D=function(N,K,ie,re,ne=0){if(E.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Fe=N.max.x-N.min.x+1,je=N.max.y-N.min.y+1,it=N.max.z-N.min.z+1,rt=ze.convert(re.format),ht=ze.convert(re.type);let ct;if(re.isData3DTexture)D.setTexture3D(re,0),ct=k.TEXTURE_3D;else if(re.isDataArrayTexture||re.isCompressedArrayTexture)D.setTexture2DArray(re,0),ct=k.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,re.flipY),k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,re.premultiplyAlpha),k.pixelStorei(k.UNPACK_ALIGNMENT,re.unpackAlignment);const ft=k.getParameter(k.UNPACK_ROW_LENGTH),Vt=k.getParameter(k.UNPACK_IMAGE_HEIGHT),vn=k.getParameter(k.UNPACK_SKIP_PIXELS),zt=k.getParameter(k.UNPACK_SKIP_ROWS),hn=k.getParameter(k.UNPACK_SKIP_IMAGES),st=ie.isCompressedTexture?ie.mipmaps[ne]:ie.image;k.pixelStorei(k.UNPACK_ROW_LENGTH,st.width),k.pixelStorei(k.UNPACK_IMAGE_HEIGHT,st.height),k.pixelStorei(k.UNPACK_SKIP_PIXELS,N.min.x),k.pixelStorei(k.UNPACK_SKIP_ROWS,N.min.y),k.pixelStorei(k.UNPACK_SKIP_IMAGES,N.min.z),ie.isDataTexture||ie.isData3DTexture?k.texSubImage3D(ct,ne,K.x,K.y,K.z,Fe,je,it,rt,ht,st.data):ie.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),k.compressedTexSubImage3D(ct,ne,K.x,K.y,K.z,Fe,je,it,rt,st.data)):k.texSubImage3D(ct,ne,K.x,K.y,K.z,Fe,je,it,rt,ht,st),k.pixelStorei(k.UNPACK_ROW_LENGTH,ft),k.pixelStorei(k.UNPACK_IMAGE_HEIGHT,Vt),k.pixelStorei(k.UNPACK_SKIP_PIXELS,vn),k.pixelStorei(k.UNPACK_SKIP_ROWS,zt),k.pixelStorei(k.UNPACK_SKIP_IMAGES,hn),ne===0&&re.generateMipmaps&&k.generateMipmap(ct),de.unbindTexture()},this.initTexture=function(N){N.isCubeTexture?D.setTextureCube(N,0):N.isData3DTexture?D.setTexture3D(N,0):N.isDataArrayTexture||N.isCompressedArrayTexture?D.setTexture2DArray(N,0):D.setTexture2D(N,0),de.unbindTexture()},this.resetState=function(){L=0,C=0,I=null,de.reset(),G.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Ei}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===cu?"display-p3":"srgb",t.unpackColorSpace=It.workingColorSpace===Va?"display-p3":"srgb"}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===an?Pr:Ud}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===Pr?an:Vi}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}class uv extends qd{}uv.prototype.isWebGL1Renderer=!0;class fu{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Ue(e),this.density=t}clone(){return new fu(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class du{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Ue(e),this.near=t,this.far=n}clone(){return new du(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Zd extends Lt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}}class pu{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Pa,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.version=0,this.uuid=ti()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return console.warn("THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ti()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ti()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Un=new U;class ys{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Un.fromBufferAttribute(this,t),Un.applyMatrix4(e),this.setXYZ(t,Un.x,Un.y,Un.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Un.fromBufferAttribute(this,t),Un.applyNormalMatrix(e),this.setXYZ(t,Un.x,Un.y,Un.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Un.fromBufferAttribute(this,t),Un.transformDirection(e),this.setXYZ(t,Un.x,Un.y,Un.z);return this}setX(e,t){return this.normalized&&(t=_t(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=_t(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=_t(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=_t(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Xn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Xn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Xn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Xn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=_t(t,this.array),n=_t(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=_t(t,this.array),n=_t(n,this.array),i=_t(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=_t(t,this.array),n=_t(n,this.array),i=_t(i,this.array),s=_t(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new Nt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new ys(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class jd extends In{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Ue(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let io;const na=new U,ro=new U,so=new U,oo=new he,ia=new he,hv=new lt,gc=new U,ra=new U,_c=new U,Ng=new he,cf=new he,Ug=new he;class fv extends Lt{constructor(e=new jd){if(super(),this.isSprite=!0,this.type="Sprite",io===void 0){io=new xt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new pu(t,5);io.setIndex([0,1,2,0,2,3]),io.setAttribute("position",new ys(n,3,0,!1)),io.setAttribute("uv",new ys(n,2,3,!1))}this.geometry=io,this.material=e,this.center=new he(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),ro.setFromMatrixScale(this.matrixWorld),hv.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),so.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&ro.multiplyScalar(-so.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const l=this.center;vc(gc.set(-.5,-.5,0),so,l,ro,i,s),vc(ra.set(.5,-.5,0),so,l,ro,i,s),vc(_c.set(.5,.5,0),so,l,ro,i,s),Ng.set(0,0),cf.set(1,0),Ug.set(1,1);let c=e.ray.intersectTriangle(gc,ra,_c,!1,na);if(c===null&&(vc(ra.set(-.5,.5,0),so,l,ro,i,s),cf.set(0,1),c=e.ray.intersectTriangle(gc,_c,ra,!1,na),c===null))return;const u=e.ray.origin.distanceTo(na);u<e.near||u>e.far||t.push({distance:u,point:na.clone(),uv:Wn.getInterpolation(na,gc,ra,_c,Ng,cf,Ug,new he),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function vc(r,e,t,n,i,s){oo.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(ia.x=s*oo.x-i*oo.y,ia.y=i*oo.x+s*oo.y):ia.copy(oo),r.copy(e),r.x+=ia.x,r.y+=ia.y,r.applyMatrix4(hv)}const yc=new U,Og=new U;class dv extends Lt{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let s;for(s=0;s<i.length&&!(t<i[s].distance);s++);return i.splice(s,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),e<s)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){yc.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(yc);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){yc.setFromMatrixPosition(e.matrixWorld),Og.setFromMatrixPosition(this.matrixWorld);const n=yc.distanceTo(Og)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s;i++){let l=t[i].distance;if(t[i].object.visible&&(l-=l*t[i].hysteresis),n>=l)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const l=n[i];t.object.levels.push({object:l.object.uuid,distance:l.distance,hysteresis:l.hysteresis})}return t}}const Fg=new U,zg=new Dt,Bg=new Dt,TT=new U,kg=new lt,xc=new U,uf=new Ln,Hg=new lt,hf=new Ss;class pv extends ln{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Bf,this.bindMatrix=new lt,this.bindMatrixInverse=new lt,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new zn),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,xc),this.boundingBox.expandByPoint(xc)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Ln),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,xc),this.boundingSphere.expandByPoint(xc)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),uf.copy(this.boundingSphere),uf.applyMatrix4(i),e.ray.intersectsSphere(uf)!==!1&&(Hg.copy(i).invert(),hf.copy(e.ray).applyMatrix4(Hg),!(this.boundingBox!==null&&hf.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,hf)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Dt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===Bf?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===A_?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;zg.fromBufferAttribute(i.attributes.skinIndex,e),Bg.fromBufferAttribute(i.attributes.skinWeight,e),Fg.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const l=Bg.getComponent(s);if(l!==0){const c=zg.getComponent(s);kg.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),t.addScaledVector(TT.copy(Fg).applyMatrix4(kg),l)}}return t.applyMatrix4(this.bindMatrixInverse)}boneTransform(e,t){return console.warn("THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."),this.applyBoneTransform(e,t)}}class Jd extends Lt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class gs extends tn{constructor(e=null,t=1,n=1,i,s,l,c,u,h=Qt,f=Qt,p,m){super(null,l,c,u,h,f,i,s,p,m),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Vg=new lt,AT=new lt;class mu{constructor(e=[],t=[]){this.uuid=ti(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new lt)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new lt;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,l=e.length;s<l;s++){const c=e[s]?e[s].matrixWorld:AT;Vg.multiplyMatrices(c,t[s]),Vg.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new mu(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new gs(t,e,e,Fn,Mi);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let l=t[s];l===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),l=new Jd),this.bones.push(l),this.boneInverses.push(new lt().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const l=t[i];e.bones.push(l.uuid);const c=n[i];e.boneInverses.push(c.toArray())}return e}}class To extends Nt{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const ao=new lt,Gg=new lt,Sc=[],Wg=new zn,bT=new lt,sa=new ln,oa=new Ln;class mv extends ln{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new To(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,bT)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new zn),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,ao),Wg.copy(e.boundingBox).applyMatrix4(ao),this.boundingBox.union(Wg)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Ln),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,ao),oa.copy(e.boundingSphere).applyMatrix4(ao),this.boundingSphere.union(oa)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(sa.geometry=this.geometry,sa.material=this.material,sa.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),oa.copy(this.boundingSphere),oa.applyMatrix4(n),e.ray.intersectsSphere(oa)!==!1))for(let s=0;s<i;s++){this.getMatrixAt(s,ao),Gg.multiplyMatrices(n,ao),sa.matrixWorld=Gg,sa.raycast(e,Sc);for(let l=0,c=Sc.length;l<c;l++){const u=Sc[l];u.instanceId=s,u.object=this,t.push(u)}Sc.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new To(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}function CT(r,e){return r.z-e.z}function RT(r,e){return e.z-r.z}class PT{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t){const n=this.pool,i=this.list;this.index>=n.length&&n.push({start:-1,count:-1,z:-1});const s=n[this.index];i.push(s),this.index++,s.start=e.start,s.count=e.count,s.z=t}reset(){this.list.length=0,this.index=0}}const lo="batchId",wr=new lt,Xg=new lt,LT=new lt,Yg=new lt,ff=new Ya,Mc=new zn,Qr=new Ln,aa=new U,df=new PT,bn=new ln,Ec=[];function IT(r,e,t=0){const n=e.itemSize;if(r.isInterleavedBufferAttribute||r.array.constructor!==e.array.constructor){const i=r.count;for(let s=0;s<i;s++)for(let l=0;l<n;l++)e.setComponent(s+t,l,r.getComponent(s,l))}else e.array.set(r.array,t*n);e.needsUpdate=!0}class gv extends ln{get maxGeometryCount(){return this._maxGeometryCount}constructor(e,t,n=t*2,i){super(new xt,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._drawRanges=[],this._reservedRanges=[],this._visibility=[],this._active=[],this._bounds=[],this._maxGeometryCount=e,this._maxVertexCount=t,this._maxIndexCount=n,this._geometryInitialized=!1,this._geometryCount=0,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._visibilityChanged=!0,this._matricesTexture=null,this._initMatricesTexture()}_initMatricesTexture(){let e=Math.sqrt(this._maxGeometryCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),n=new gs(t,e,e,Fn,Mi);this._matricesTexture=n}_initializeGeometry(e){const t=this.geometry,n=this._maxVertexCount,i=this._maxGeometryCount,s=this._maxIndexCount;if(this._geometryInitialized===!1){for(const c in e.attributes){const u=e.getAttribute(c),{array:h,itemSize:f,normalized:p}=u,m=new h.constructor(n*f),g=new u.constructor(m,f,p);g.setUsage(u.usage),t.setAttribute(c,g)}if(e.getIndex()!==null){const c=n>65536?new Uint32Array(s):new Uint16Array(s);t.setIndex(new Nt(c,1))}const l=i>65536?new Uint32Array(n):new Uint16Array(n);t.setAttribute(lo,new Nt(l,1)),this._geometryInitialized=!0}}_validateGeometry(e){if(e.getAttribute(lo))throw new Error(`BatchedMesh: Geometry cannot use attribute "${lo}"`);const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('BatchedMesh: All geometries must consistently have "index".');for(const n in t.attributes){if(n===lo)continue;if(!e.hasAttribute(n))throw new Error(`BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=e.getAttribute(n),s=t.getAttribute(n);if(i.itemSize!==s.itemSize||i.normalized!==s.normalized)throw new Error("BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new zn);const e=this._geometryCount,t=this.boundingBox,n=this._active;t.makeEmpty();for(let i=0;i<e;i++)n[i]!==!1&&(this.getMatrixAt(i,wr),this.getBoundingBoxAt(i,Mc).applyMatrix4(wr),t.union(Mc))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Ln);const e=this._geometryCount,t=this.boundingSphere,n=this._active;t.makeEmpty();for(let i=0;i<e;i++)n[i]!==!1&&(this.getMatrixAt(i,wr),this.getBoundingSphereAt(i,Qr).applyMatrix4(wr),t.union(Qr))}addGeometry(e,t=-1,n=-1){if(this._initializeGeometry(e),this._validateGeometry(e),this._geometryCount>=this._maxGeometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");const i={vertexStart:-1,vertexCount:-1,indexStart:-1,indexCount:-1};let s=null;const l=this._reservedRanges,c=this._drawRanges,u=this._bounds;this._geometryCount!==0&&(s=l[l.length-1]),t===-1?i.vertexCount=e.getAttribute("position").count:i.vertexCount=t,s===null?i.vertexStart=0:i.vertexStart=s.vertexStart+s.vertexCount;const h=e.getIndex(),f=h!==null;if(f&&(n===-1?i.indexCount=h.count:i.indexCount=n,s===null?i.indexStart=0:i.indexStart=s.indexStart+s.indexCount),i.indexStart!==-1&&i.indexStart+i.indexCount>this._maxIndexCount||i.vertexStart+i.vertexCount>this._maxVertexCount)throw new Error("BatchedMesh: Reserved space request exceeds the maximum buffer size.");const p=this._visibility,m=this._active,g=this._matricesTexture,y=this._matricesTexture.image.data;p.push(!0),m.push(!0);const M=this._geometryCount;this._geometryCount++,LT.toArray(y,M*16),g.needsUpdate=!0,l.push(i),c.push({start:f?i.indexStart:i.vertexStart,count:-1}),u.push({boxInitialized:!1,box:new zn,sphereInitialized:!1,sphere:new Ln});const x=this.geometry.getAttribute(lo);for(let v=0;v<i.vertexCount;v++)x.setX(i.vertexStart+v,M);return x.needsUpdate=!0,this.setGeometryAt(M,e),M}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const n=this.geometry,i=n.getIndex()!==null,s=n.getIndex(),l=t.getIndex(),c=this._reservedRanges[e];if(i&&l.count>c.indexCount||t.attributes.position.count>c.vertexCount)throw new Error("BatchedMesh: Reserved space not large enough for provided geometry.");const u=c.vertexStart,h=c.vertexCount;for(const g in n.attributes){if(g===lo)continue;const y=t.getAttribute(g),M=n.getAttribute(g);IT(y,M,u);const x=y.itemSize;for(let v=y.count,w=h;v<w;v++){const E=u+v;for(let A=0;A<x;A++)M.setComponent(E,A,0)}M.needsUpdate=!0}if(i){const g=c.indexStart;for(let y=0;y<l.count;y++)s.setX(g+y,u+l.getX(y));for(let y=l.count,M=c.indexCount;y<M;y++)s.setX(g+y,u);s.needsUpdate=!0}const f=this._bounds[e];t.boundingBox!==null?(f.box.copy(t.boundingBox),f.boxInitialized=!0):f.boxInitialized=!1,t.boundingSphere!==null?(f.sphere.copy(t.boundingSphere),f.sphereInitialized=!0):f.sphereInitialized=!1;const p=this._drawRanges[e],m=t.getAttribute("position");return p.count=i?l.count:m.count,this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._active;return e>=t.length||t[e]===!1?this:(t[e]=!1,this._visibilityChanged=!0,this)}getBoundingBoxAt(e,t){if(this._active[e]===!1)return this;const i=this._bounds[e],s=i.box,l=this.geometry;if(i.boxInitialized===!1){s.makeEmpty();const c=l.index,u=l.attributes.position,h=this._drawRanges[e];for(let f=h.start,p=h.start+h.count;f<p;f++){let m=f;c&&(m=c.getX(m)),s.expandByPoint(aa.fromBufferAttribute(u,m))}i.boxInitialized=!0}return t.copy(s),t}getBoundingSphereAt(e,t){if(this._active[e]===!1)return this;const i=this._bounds[e],s=i.sphere,l=this.geometry;if(i.sphereInitialized===!1){s.makeEmpty(),this.getBoundingBoxAt(e,Mc),Mc.getCenter(s.center);const c=l.index,u=l.attributes.position,h=this._drawRanges[e];let f=0;for(let p=h.start,m=h.start+h.count;p<m;p++){let g=p;c&&(g=c.getX(g)),aa.fromBufferAttribute(u,g),f=Math.max(f,s.center.distanceToSquared(aa))}s.radius=Math.sqrt(f),i.sphereInitialized=!0}return t.copy(s),t}setMatrixAt(e,t){const n=this._active,i=this._matricesTexture,s=this._matricesTexture.image.data,l=this._geometryCount;return e>=l||n[e]===!1?this:(t.toArray(s,e*16),i.needsUpdate=!0,this)}getMatrixAt(e,t){const n=this._active,i=this._matricesTexture.image.data,s=this._geometryCount;return e>=s||n[e]===!1?null:t.fromArray(i,e*16)}setVisibleAt(e,t){const n=this._visibility,i=this._active,s=this._geometryCount;return e>=s||i[e]===!1||n[e]===t?this:(n[e]=t,this._visibilityChanged=!0,this)}getVisibleAt(e){const t=this._visibility,n=this._active,i=this._geometryCount;return e>=i||n[e]===!1?!1:t[e]}raycast(e,t){const n=this._visibility,i=this._active,s=this._drawRanges,l=this._geometryCount,c=this.matrixWorld,u=this.geometry;bn.material=this.material,bn.geometry.index=u.index,bn.geometry.attributes=u.attributes,bn.geometry.boundingBox===null&&(bn.geometry.boundingBox=new zn),bn.geometry.boundingSphere===null&&(bn.geometry.boundingSphere=new Ln);for(let h=0;h<l;h++){if(!n[h]||!i[h])continue;const f=s[h];bn.geometry.setDrawRange(f.start,f.count),this.getMatrixAt(h,bn.matrixWorld).premultiply(c),this.getBoundingBoxAt(h,bn.geometry.boundingBox),this.getBoundingSphereAt(h,bn.geometry.boundingSphere),bn.raycast(e,Ec);for(let p=0,m=Ec.length;p<m;p++){const g=Ec[p];g.object=this,g.batchId=h,t.push(g)}Ec.length=0}bn.material=null,bn.geometry.index=null,bn.geometry.attributes={},bn.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._drawRanges=e._drawRanges.map(t=>({...t})),this._reservedRanges=e._reservedRanges.map(t=>({...t})),this._visibility=e._visibility.slice(),this._active=e._active.slice(),this._bounds=e._bounds.map(t=>({boxInitialized:t.boxInitialized,box:t.box.clone(),sphereInitialized:t.sphereInitialized,sphere:t.sphere.clone()})),this._maxGeometryCount=e._maxGeometryCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._geometryCount=e._geometryCount,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.slice(),this}dispose(){return this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this}onBeforeRender(e,t,n,i,s){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const l=i.getIndex(),c=l===null?1:l.array.BYTES_PER_ELEMENT,u=this._visibility,h=this._multiDrawStarts,f=this._multiDrawCounts,p=this._drawRanges,m=this.perObjectFrustumCulled;m&&(Yg.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),ff.setFromProjectionMatrix(Yg,e.isWebGPURenderer?Mo:Ei));let g=0;if(this.sortObjects){Xg.copy(this.matrixWorld).invert(),aa.setFromMatrixPosition(n.matrixWorld).applyMatrix4(Xg);for(let x=0,v=u.length;x<v;x++)if(u[x]){this.getMatrixAt(x,wr),this.getBoundingSphereAt(x,Qr).applyMatrix4(wr);let w=!1;if(m&&(w=!ff.intersectsSphere(Qr)),!w){const E=aa.distanceTo(Qr.center);df.push(p[x],E)}}const y=df.list,M=this.customSort;M===null?y.sort(s.transparent?RT:CT):M.call(this,y,n);for(let x=0,v=y.length;x<v;x++){const w=y[x];h[g]=w.start*c,f[g]=w.count,g++}df.reset()}else for(let y=0,M=u.length;y<M;y++)if(u[y]){let x=!1;if(m&&(this.getMatrixAt(y,wr),this.getBoundingSphereAt(y,Qr).applyMatrix4(wr),x=!ff.intersectsSphere(Qr)),!x){const v=p[y];h[g]=v.start*c,f[g]=v.count,g++}}this._multiDrawCount=g,this._visibilityChanged=!1}onBeforeShadow(e,t,n,i,s,l){this.onBeforeRender(e,null,i,s,l)}}class Bn extends In{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Ue(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const qg=new U,Zg=new U,jg=new lt,pf=new Ss,wc=new Ln;class Nr extends Lt{constructor(e=new xt,t=new Bn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)qg.fromBufferAttribute(t,i-1),Zg.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=qg.distanceTo(Zg);e.setAttribute("lineDistance",new Xe(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),wc.copy(n.boundingSphere),wc.applyMatrix4(i),wc.radius+=s,e.ray.intersectsSphere(wc)===!1)return;jg.copy(i).invert(),pf.copy(e.ray).applyMatrix4(jg);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=new U,f=new U,p=new U,m=new U,g=this.isLineSegments?2:1,y=n.index,x=n.attributes.position;if(y!==null){const v=Math.max(0,l.start),w=Math.min(y.count,l.start+l.count);for(let E=v,A=w-1;E<A;E+=g){const L=y.getX(E),C=y.getX(E+1);if(h.fromBufferAttribute(x,L),f.fromBufferAttribute(x,C),pf.distanceSqToSegment(h,f,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const z=e.ray.origin.distanceTo(m);z<e.near||z>e.far||t.push({distance:z,point:p.clone().applyMatrix4(this.matrixWorld),index:E,face:null,faceIndex:null,object:this})}}else{const v=Math.max(0,l.start),w=Math.min(x.count,l.start+l.count);for(let E=v,A=w-1;E<A;E+=g){if(h.fromBufferAttribute(x,E),f.fromBufferAttribute(x,E+1),pf.distanceSqToSegment(h,f,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const C=e.ray.origin.distanceTo(m);C<e.near||C>e.far||t.push({distance:C,point:p.clone().applyMatrix4(this.matrixWorld),index:E,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}const Jg=new U,Kg=new U;class Gi extends Nr{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)Jg.fromBufferAttribute(t,i),Kg.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Jg.distanceTo(Kg);e.setAttribute("lineDistance",new Xe(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class _v extends Nr{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Kd extends In{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Ue(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const Qg=new lt,gd=new Ss,Tc=new Ln,Ac=new U;class vv extends Lt{constructor(e=new xt,t=new Kd){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Tc.copy(n.boundingSphere),Tc.applyMatrix4(i),Tc.radius+=s,e.ray.intersectsSphere(Tc)===!1)return;Qg.copy(i).invert(),gd.copy(e.ray).applyMatrix4(Qg);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=n.index,p=n.attributes.position;if(h!==null){const m=Math.max(0,l.start),g=Math.min(h.count,l.start+l.count);for(let y=m,M=g;y<M;y++){const x=h.getX(y);Ac.fromBufferAttribute(p,x),$g(Ac,x,u,i,e,t,this)}}else{const m=Math.max(0,l.start),g=Math.min(p.count,l.start+l.count);for(let y=m,M=g;y<M;y++)Ac.fromBufferAttribute(p,y),$g(Ac,y,u,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function $g(r,e,t,n,i,s,l){const c=gd.distanceSqToPoint(r);if(c<t){const u=new U;gd.closestPointToPoint(r,u),u.applyMatrix4(n);const h=i.ray.origin.distanceTo(u);if(h<i.near||h>i.far)return;s.push({distance:h,distanceToRay:Math.sqrt(c),point:u,index:e,face:null,object:l})}}class DT extends tn{constructor(e,t,n,i,s,l,c,u,h){super(e,t,n,i,s,l,c,u,h),this.isVideoTexture=!0,this.minFilter=l!==void 0?l:$t,this.magFilter=s!==void 0?s:$t,this.generateMipmaps=!1;const f=this;function p(){f.needsUpdate=!0,e.requestVideoFrameCallback(p)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(p)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class NT extends tn{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Qt,this.minFilter=Qt,this.generateMipmaps=!1,this.needsUpdate=!0}}class gu extends tn{constructor(e,t,n,i,s,l,c,u,h,f,p,m){super(null,l,c,u,h,f,i,s,p,m),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class UT extends gu{constructor(e,t,n,i,s,l){super(e,t,n,s,l),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Cn}}class OT extends gu{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,ar),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class FT extends tn{constructor(e,t,n,i,s,l,c,u,h){super(e,t,n,i,s,l,c,u,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Ai{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let l=1;l<=e;l++)n=this.getPoint(l/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let l;t?l=t:l=e*n[s-1];let c=0,u=s-1,h;for(;c<=u;)if(i=Math.floor(c+(u-c)/2),h=n[i]-l,h<0)c=i+1;else if(h>0)u=i-1;else{u=i;break}if(i=u,n[i]===l)return i/(s-1);const f=n[i],m=n[i+1]-f,g=(l-f)/m;return(i+g)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const l=this.getPoint(i),c=this.getPoint(s),u=t||(l.isVector2?new he:new U);return u.copy(c).sub(l).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new U,i=[],s=[],l=[],c=new U,u=new lt;for(let g=0;g<=e;g++){const y=g/e;i[g]=this.getTangentAt(y,new U)}s[0]=new U,l[0]=new U;let h=Number.MAX_VALUE;const f=Math.abs(i[0].x),p=Math.abs(i[0].y),m=Math.abs(i[0].z);f<=h&&(h=f,n.set(1,0,0)),p<=h&&(h=p,n.set(0,1,0)),m<=h&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],c),l[0].crossVectors(i[0],s[0]);for(let g=1;g<=e;g++){if(s[g]=s[g-1].clone(),l[g]=l[g-1].clone(),c.crossVectors(i[g-1],i[g]),c.length()>Number.EPSILON){c.normalize();const y=Math.acos(Zt(i[g-1].dot(i[g]),-1,1));s[g].applyMatrix4(u.makeRotationAxis(c,y))}l[g].crossVectors(i[g],s[g])}if(t===!0){let g=Math.acos(Zt(s[0].dot(s[e]),-1,1));g/=e,i[0].dot(c.crossVectors(s[0],s[e]))>0&&(g=-g);for(let y=1;y<=e;y++)s[y].applyMatrix4(u.makeRotationAxis(i[y],g*y)),l[y].crossVectors(i[y],s[y])}return{tangents:i,normals:s,binormals:l}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class _u extends Ai{constructor(e=0,t=0,n=1,i=1,s=0,l=Math.PI*2,c=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=l,this.aClockwise=c,this.aRotation=u}getPoint(e,t){const n=t||new he,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const l=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(l?s=0:s=i),this.aClockwise===!0&&!l&&(s===i?s=-i:s=s-i);const c=this.aStartAngle+e*s;let u=this.aX+this.xRadius*Math.cos(c),h=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const f=Math.cos(this.aRotation),p=Math.sin(this.aRotation),m=u-this.aX,g=h-this.aY;u=m*f-g*p+this.aX,h=m*p+g*f+this.aY}return n.set(u,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class yv extends _u{constructor(e,t,n,i,s,l){super(e,t,n,n,i,s,l),this.isArcCurve=!0,this.type="ArcCurve"}}function Qd(){let r=0,e=0,t=0,n=0;function i(s,l,c,u){r=s,e=c,t=-3*s+3*l-2*c-u,n=2*s-2*l+c+u}return{initCatmullRom:function(s,l,c,u,h){i(l,c,h*(c-s),h*(u-l))},initNonuniformCatmullRom:function(s,l,c,u,h,f,p){let m=(l-s)/h-(c-s)/(h+f)+(c-l)/f,g=(c-l)/f-(u-l)/(f+p)+(u-c)/p;m*=f,g*=f,i(l,c,m,g)},calc:function(s){const l=s*s,c=l*s;return r+e*s+t*l+n*c}}}const bc=new U,mf=new Qd,gf=new Qd,_f=new Qd;class xv extends Ai{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new U){const n=t,i=this.points,s=i.length,l=(s-(this.closed?0:1))*e;let c=Math.floor(l),u=l-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/s)+1)*s:u===0&&c===s-1&&(c=s-2,u=1);let h,f;this.closed||c>0?h=i[(c-1)%s]:(bc.subVectors(i[0],i[1]).add(i[0]),h=bc);const p=i[c%s],m=i[(c+1)%s];if(this.closed||c+2<s?f=i[(c+2)%s]:(bc.subVectors(i[s-1],i[s-2]).add(i[s-1]),f=bc),this.curveType==="centripetal"||this.curveType==="chordal"){const g=this.curveType==="chordal"?.5:.25;let y=Math.pow(h.distanceToSquared(p),g),M=Math.pow(p.distanceToSquared(m),g),x=Math.pow(m.distanceToSquared(f),g);M<1e-4&&(M=1),y<1e-4&&(y=M),x<1e-4&&(x=M),mf.initNonuniformCatmullRom(h.x,p.x,m.x,f.x,y,M,x),gf.initNonuniformCatmullRom(h.y,p.y,m.y,f.y,y,M,x),_f.initNonuniformCatmullRom(h.z,p.z,m.z,f.z,y,M,x)}else this.curveType==="catmullrom"&&(mf.initCatmullRom(h.x,p.x,m.x,f.x,this.tension),gf.initCatmullRom(h.y,p.y,m.y,f.y,this.tension),_f.initCatmullRom(h.z,p.z,m.z,f.z,this.tension));return n.set(mf.calc(u),gf.calc(u),_f.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new U().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function e0(r,e,t,n,i){const s=(n-e)*.5,l=(i-t)*.5,c=r*r,u=r*c;return(2*t-2*n+s+l)*u+(-3*t+3*n-2*s-l)*c+s*r+t}function zT(r,e){const t=1-r;return t*t*e}function BT(r,e){return 2*(1-r)*r*e}function kT(r,e){return r*r*e}function ga(r,e,t,n){return zT(r,e)+BT(r,t)+kT(r,n)}function HT(r,e){const t=1-r;return t*t*t*e}function VT(r,e){const t=1-r;return 3*t*t*r*e}function GT(r,e){return 3*(1-r)*r*r*e}function WT(r,e){return r*r*r*e}function _a(r,e,t,n,i){return HT(r,e)+VT(r,t)+GT(r,n)+WT(r,i)}class $d extends Ai{constructor(e=new he,t=new he,n=new he,i=new he){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new he){const n=t,i=this.v0,s=this.v1,l=this.v2,c=this.v3;return n.set(_a(e,i.x,s.x,l.x,c.x),_a(e,i.y,s.y,l.y,c.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Sv extends Ai{constructor(e=new U,t=new U,n=new U,i=new U){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new U){const n=t,i=this.v0,s=this.v1,l=this.v2,c=this.v3;return n.set(_a(e,i.x,s.x,l.x,c.x),_a(e,i.y,s.y,l.y,c.y),_a(e,i.z,s.z,l.z,c.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class ep extends Ai{constructor(e=new he,t=new he){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new he){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new he){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Mv extends Ai{constructor(e=new U,t=new U){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new U){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new U){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class tp extends Ai{constructor(e=new he,t=new he,n=new he){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new he){const n=t,i=this.v0,s=this.v1,l=this.v2;return n.set(ga(e,i.x,s.x,l.x),ga(e,i.y,s.y,l.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class np extends Ai{constructor(e=new U,t=new U,n=new U){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new U){const n=t,i=this.v0,s=this.v1,l=this.v2;return n.set(ga(e,i.x,s.x,l.x),ga(e,i.y,s.y,l.y),ga(e,i.z,s.z,l.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class ip extends Ai{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new he){const n=t,i=this.points,s=(i.length-1)*e,l=Math.floor(s),c=s-l,u=i[l===0?l:l-1],h=i[l],f=i[l>i.length-2?i.length-1:l+1],p=i[l>i.length-3?i.length-1:l+2];return n.set(e0(c,u.x,h.x,f.x,p.x),e0(c,u.y,h.y,f.y,p.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new he().fromArray(i))}return this}}var nu=Object.freeze({__proto__:null,ArcCurve:yv,CatmullRomCurve3:xv,CubicBezierCurve:$d,CubicBezierCurve3:Sv,EllipseCurve:_u,LineCurve:ep,LineCurve3:Mv,QuadraticBezierCurve:tp,QuadraticBezierCurve3:np,SplineCurve:ip});class Ev extends Ai{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new nu[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const l=i[s]-n,c=this.curves[s],u=c.getLength(),h=u===0?0:1-l/u;return c.getPointAt(h,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const l=s[i],c=l.isEllipseCurve?e*2:l.isLineCurve||l.isLineCurve3?1:l.isSplineCurve?e*l.points.length:e,u=l.getPoints(c);for(let h=0;h<u.length;h++){const f=u[h];n&&n.equals(f)||(t.push(f),n=f)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new nu[i.type]().fromJSON(i))}return this}}class Ia extends Ev{constructor(e){super(),this.type="Path",this.currentPoint=new he,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new ep(this.currentPoint.clone(),new he(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new tp(this.currentPoint.clone(),new he(e,t),new he(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,l){const c=new $d(this.currentPoint.clone(),new he(e,t),new he(n,i),new he(s,l));return this.curves.push(c),this.currentPoint.set(s,l),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new ip(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+c,t+u,n,i,s,l),this}absarc(e,t,n,i,s,l){return this.absellipse(e,t,n,n,i,s,l),this}ellipse(e,t,n,i,s,l,c,u){const h=this.currentPoint.x,f=this.currentPoint.y;return this.absellipse(e+h,t+f,n,i,s,l,c,u),this}absellipse(e,t,n,i,s,l,c,u){const h=new _u(e,t,n,i,s,l,c,u);if(this.curves.length>0){const p=h.getPoint(0);p.equals(this.currentPoint)||this.lineTo(p.x,p.y)}this.curves.push(h);const f=h.getPoint(1);return this.currentPoint.copy(f),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Za extends xt{constructor(e=[new he(0,-.5),new he(.5,0),new he(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=Zt(i,0,Math.PI*2);const s=[],l=[],c=[],u=[],h=[],f=1/t,p=new U,m=new he,g=new U,y=new U,M=new U;let x=0,v=0;for(let w=0;w<=e.length-1;w++)switch(w){case 0:x=e[w+1].x-e[w].x,v=e[w+1].y-e[w].y,g.x=v*1,g.y=-x,g.z=v*0,M.copy(g),g.normalize(),u.push(g.x,g.y,g.z);break;case e.length-1:u.push(M.x,M.y,M.z);break;default:x=e[w+1].x-e[w].x,v=e[w+1].y-e[w].y,g.x=v*1,g.y=-x,g.z=v*0,y.copy(g),g.x+=M.x,g.y+=M.y,g.z+=M.z,g.normalize(),u.push(g.x,g.y,g.z),M.copy(y)}for(let w=0;w<=t;w++){const E=n+w*f*i,A=Math.sin(E),L=Math.cos(E);for(let C=0;C<=e.length-1;C++){p.x=e[C].x*A,p.y=e[C].y,p.z=e[C].x*L,l.push(p.x,p.y,p.z),m.x=w/t,m.y=C/(e.length-1),c.push(m.x,m.y);const I=u[3*C+0]*A,z=u[3*C+1],b=u[3*C+0]*L;h.push(I,z,b)}}for(let w=0;w<t;w++)for(let E=0;E<e.length-1;E++){const A=E+w*e.length,L=A,C=A+e.length,I=A+e.length+1,z=A+1;s.push(L,C,z),s.push(I,z,C)}this.setIndex(s),this.setAttribute("position",new Xe(l,3)),this.setAttribute("uv",new Xe(c,2)),this.setAttribute("normal",new Xe(h,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Za(e.points,e.segments,e.phiStart,e.phiLength)}}class vu extends Za{constructor(e=1,t=1,n=4,i=8){const s=new Ia;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new vu(e.radius,e.length,e.capSegments,e.radialSegments)}}class yu extends xt{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],l=[],c=[],u=[],h=new U,f=new he;l.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(let p=0,m=3;p<=t;p++,m+=3){const g=n+p/t*i;h.x=e*Math.cos(g),h.y=e*Math.sin(g),l.push(h.x,h.y,h.z),c.push(0,0,1),f.x=(l[m]/e+1)/2,f.y=(l[m+1]/e+1)/2,u.push(f.x,f.y)}for(let p=1;p<=t;p++)s.push(p,p+1,0);this.setIndex(s),this.setAttribute("position",new Xe(l,3)),this.setAttribute("normal",new Xe(c,3)),this.setAttribute("uv",new Xe(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new yu(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Ro extends xt{constructor(e=1,t=1,n=1,i=32,s=1,l=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:l,thetaStart:c,thetaLength:u};const h=this;i=Math.floor(i),s=Math.floor(s);const f=[],p=[],m=[],g=[];let y=0;const M=[],x=n/2;let v=0;w(),l===!1&&(e>0&&E(!0),t>0&&E(!1)),this.setIndex(f),this.setAttribute("position",new Xe(p,3)),this.setAttribute("normal",new Xe(m,3)),this.setAttribute("uv",new Xe(g,2));function w(){const A=new U,L=new U;let C=0;const I=(t-e)/n;for(let z=0;z<=s;z++){const b=[],R=z/s,B=R*(t-e)+e;for(let $=0;$<=i;$++){const ae=$/i,V=ae*u+c,j=Math.sin(V),te=Math.cos(V);L.x=B*j,L.y=-R*n+x,L.z=B*te,p.push(L.x,L.y,L.z),A.set(j,I,te).normalize(),m.push(A.x,A.y,A.z),g.push(ae,1-R),b.push(y++)}M.push(b)}for(let z=0;z<i;z++)for(let b=0;b<s;b++){const R=M[b][z],B=M[b+1][z],$=M[b+1][z+1],ae=M[b][z+1];f.push(R,B,ae),f.push(B,$,ae),C+=6}h.addGroup(v,C,0),v+=C}function E(A){const L=y,C=new he,I=new U;let z=0;const b=A===!0?e:t,R=A===!0?1:-1;for(let $=1;$<=i;$++)p.push(0,x*R,0),m.push(0,R,0),g.push(.5,.5),y++;const B=y;for(let $=0;$<=i;$++){const V=$/i*u+c,j=Math.cos(V),te=Math.sin(V);I.x=b*te,I.y=x*R,I.z=b*j,p.push(I.x,I.y,I.z),m.push(0,R,0),C.x=j*.5+.5,C.y=te*.5*R+.5,g.push(C.x,C.y),y++}for(let $=0;$<i;$++){const ae=L+$,V=B+$;A===!0?f.push(V,V+1,ae):f.push(V+1,V,ae),z+=3}h.addGroup(v,z,A===!0?1:2),v+=z}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ro(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class xu extends Ro{constructor(e=1,t=1,n=32,i=1,s=!1,l=0,c=Math.PI*2){super(0,e,t,n,i,s,l,c),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:l,thetaLength:c}}static fromJSON(e){return new xu(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Fr extends xt{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],l=[];c(i),h(n),f(),this.setAttribute("position",new Xe(s,3)),this.setAttribute("normal",new Xe(s.slice(),3)),this.setAttribute("uv",new Xe(l,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(w){const E=new U,A=new U,L=new U;for(let C=0;C<t.length;C+=3)g(t[C+0],E),g(t[C+1],A),g(t[C+2],L),u(E,A,L,w)}function u(w,E,A,L){const C=L+1,I=[];for(let z=0;z<=C;z++){I[z]=[];const b=w.clone().lerp(A,z/C),R=E.clone().lerp(A,z/C),B=C-z;for(let $=0;$<=B;$++)$===0&&z===C?I[z][$]=b:I[z][$]=b.clone().lerp(R,$/B)}for(let z=0;z<C;z++)for(let b=0;b<2*(C-z)-1;b++){const R=Math.floor(b/2);b%2===0?(m(I[z][R+1]),m(I[z+1][R]),m(I[z][R])):(m(I[z][R+1]),m(I[z+1][R+1]),m(I[z+1][R]))}}function h(w){const E=new U;for(let A=0;A<s.length;A+=3)E.x=s[A+0],E.y=s[A+1],E.z=s[A+2],E.normalize().multiplyScalar(w),s[A+0]=E.x,s[A+1]=E.y,s[A+2]=E.z}function f(){const w=new U;for(let E=0;E<s.length;E+=3){w.x=s[E+0],w.y=s[E+1],w.z=s[E+2];const A=x(w)/2/Math.PI+.5,L=v(w)/Math.PI+.5;l.push(A,1-L)}y(),p()}function p(){for(let w=0;w<l.length;w+=6){const E=l[w+0],A=l[w+2],L=l[w+4],C=Math.max(E,A,L),I=Math.min(E,A,L);C>.9&&I<.1&&(E<.2&&(l[w+0]+=1),A<.2&&(l[w+2]+=1),L<.2&&(l[w+4]+=1))}}function m(w){s.push(w.x,w.y,w.z)}function g(w,E){const A=w*3;E.x=e[A+0],E.y=e[A+1],E.z=e[A+2]}function y(){const w=new U,E=new U,A=new U,L=new U,C=new he,I=new he,z=new he;for(let b=0,R=0;b<s.length;b+=9,R+=6){w.set(s[b+0],s[b+1],s[b+2]),E.set(s[b+3],s[b+4],s[b+5]),A.set(s[b+6],s[b+7],s[b+8]),C.set(l[R+0],l[R+1]),I.set(l[R+2],l[R+3]),z.set(l[R+4],l[R+5]),L.copy(w).add(E).add(A).divideScalar(3);const B=x(L);M(C,R+0,w,B),M(I,R+2,E,B),M(z,R+4,A,B)}}function M(w,E,A,L){L<0&&w.x===1&&(l[E]=w.x-1),A.x===0&&A.z===0&&(l[E]=L/2/Math.PI+.5)}function x(w){return Math.atan2(w.z,-w.x)}function v(w){return Math.atan2(-w.y,Math.sqrt(w.x*w.x+w.z*w.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Fr(e.vertices,e.indices,e.radius,e.details)}}class Su extends Fr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],l=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,l,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Su(e.radius,e.detail)}}const Cc=new U,Rc=new U,vf=new U,Pc=new Wn;class wv extends xt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(ps*t),l=e.getIndex(),c=e.getAttribute("position"),u=l?l.count:c.count,h=[0,0,0],f=["a","b","c"],p=new Array(3),m={},g=[];for(let y=0;y<u;y+=3){l?(h[0]=l.getX(y),h[1]=l.getX(y+1),h[2]=l.getX(y+2)):(h[0]=y,h[1]=y+1,h[2]=y+2);const{a:M,b:x,c:v}=Pc;if(M.fromBufferAttribute(c,h[0]),x.fromBufferAttribute(c,h[1]),v.fromBufferAttribute(c,h[2]),Pc.getNormal(vf),p[0]=`${Math.round(M.x*i)},${Math.round(M.y*i)},${Math.round(M.z*i)}`,p[1]=`${Math.round(x.x*i)},${Math.round(x.y*i)},${Math.round(x.z*i)}`,p[2]=`${Math.round(v.x*i)},${Math.round(v.y*i)},${Math.round(v.z*i)}`,!(p[0]===p[1]||p[1]===p[2]||p[2]===p[0]))for(let w=0;w<3;w++){const E=(w+1)%3,A=p[w],L=p[E],C=Pc[f[w]],I=Pc[f[E]],z=`${A}_${L}`,b=`${L}_${A}`;b in m&&m[b]?(vf.dot(m[b].normal)<=s&&(g.push(C.x,C.y,C.z),g.push(I.x,I.y,I.z)),m[b]=null):z in m||(m[z]={index0:h[w],index1:h[E],normal:vf.clone()})}}for(const y in m)if(m[y]){const{index0:M,index1:x}=m[y];Cc.fromBufferAttribute(c,M),Rc.fromBufferAttribute(c,x),g.push(Cc.x,Cc.y,Cc.z),g.push(Rc.x,Rc.y,Rc.z)}this.setAttribute("position",new Xe(g,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class _s extends Ia{constructor(e){super(e),this.uuid=ti(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Ia().fromJSON(i))}return this}}const XT={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=Tv(r,0,i,t,!0);const l=[];if(!s||s.next===s.prev)return l;let c,u,h,f,p,m,g;if(n&&(s=JT(r,e,s,t)),r.length>80*t){c=h=r[0],u=f=r[1];for(let y=t;y<i;y+=t)p=r[y],m=r[y+1],p<c&&(c=p),m<u&&(u=m),p>h&&(h=p),m>f&&(f=m);g=Math.max(h-c,f-u),g=g!==0?32767/g:0}return Da(s,l,t,c,u,g,0),l}};function Tv(r,e,t,n,i){let s,l;if(i===aA(r,e,t,n)>0)for(s=e;s<t;s+=n)l=t0(s,r[s],r[s+1],l);else for(s=t-n;s>=e;s-=n)l=t0(s,r[s],r[s+1],l);return l&&Mu(l,l.next)&&(Ua(l),l=l.next),l}function xs(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(Mu(t,t.next)||Wt(t.prev,t,t.next)===0)){if(Ua(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function Da(r,e,t,n,i,s,l){if(!r)return;!l&&s&&tA(r,n,i,s);let c=r,u,h;for(;r.prev!==r.next;){if(u=r.prev,h=r.next,s?qT(r,n,i,s):YT(r)){e.push(u.i/t|0),e.push(r.i/t|0),e.push(h.i/t|0),Ua(r),r=h.next,c=h.next;continue}if(r=h,r===c){l?l===1?(r=ZT(xs(r),e,t),Da(r,e,t,n,i,s,2)):l===2&&jT(r,e,t,n,i,s):Da(xs(r),e,t,n,i,s,1);break}}}function YT(r){const e=r.prev,t=r,n=r.next;if(Wt(e,t,n)>=0)return!1;const i=e.x,s=t.x,l=n.x,c=e.y,u=t.y,h=n.y,f=i<s?i<l?i:l:s<l?s:l,p=c<u?c<h?c:h:u<h?u:h,m=i>s?i>l?i:l:s>l?s:l,g=c>u?c>h?c:h:u>h?u:h;let y=n.next;for(;y!==e;){if(y.x>=f&&y.x<=m&&y.y>=p&&y.y<=g&&vo(i,c,s,u,l,h,y.x,y.y)&&Wt(y.prev,y,y.next)>=0)return!1;y=y.next}return!0}function qT(r,e,t,n){const i=r.prev,s=r,l=r.next;if(Wt(i,s,l)>=0)return!1;const c=i.x,u=s.x,h=l.x,f=i.y,p=s.y,m=l.y,g=c<u?c<h?c:h:u<h?u:h,y=f<p?f<m?f:m:p<m?p:m,M=c>u?c>h?c:h:u>h?u:h,x=f>p?f>m?f:m:p>m?p:m,v=_d(g,y,e,t,n),w=_d(M,x,e,t,n);let E=r.prevZ,A=r.nextZ;for(;E&&E.z>=v&&A&&A.z<=w;){if(E.x>=g&&E.x<=M&&E.y>=y&&E.y<=x&&E!==i&&E!==l&&vo(c,f,u,p,h,m,E.x,E.y)&&Wt(E.prev,E,E.next)>=0||(E=E.prevZ,A.x>=g&&A.x<=M&&A.y>=y&&A.y<=x&&A!==i&&A!==l&&vo(c,f,u,p,h,m,A.x,A.y)&&Wt(A.prev,A,A.next)>=0))return!1;A=A.nextZ}for(;E&&E.z>=v;){if(E.x>=g&&E.x<=M&&E.y>=y&&E.y<=x&&E!==i&&E!==l&&vo(c,f,u,p,h,m,E.x,E.y)&&Wt(E.prev,E,E.next)>=0)return!1;E=E.prevZ}for(;A&&A.z<=w;){if(A.x>=g&&A.x<=M&&A.y>=y&&A.y<=x&&A!==i&&A!==l&&vo(c,f,u,p,h,m,A.x,A.y)&&Wt(A.prev,A,A.next)>=0)return!1;A=A.nextZ}return!0}function ZT(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!Mu(i,s)&&Av(i,n,n.next,s)&&Na(i,s)&&Na(s,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(s.i/t|0),Ua(n),Ua(n.next),n=r=s),n=n.next}while(n!==r);return xs(n)}function jT(r,e,t,n,i,s){let l=r;do{let c=l.next.next;for(;c!==l.prev;){if(l.i!==c.i&&rA(l,c)){let u=bv(l,c);l=xs(l,l.next),u=xs(u,u.next),Da(l,e,t,n,i,s,0),Da(u,e,t,n,i,s,0);return}c=c.next}l=l.next}while(l!==r)}function JT(r,e,t,n){const i=[];let s,l,c,u,h;for(s=0,l=e.length;s<l;s++)c=e[s]*n,u=s<l-1?e[s+1]*n:r.length,h=Tv(r,c,u,n,!1),h===h.next&&(h.steiner=!0),i.push(iA(h));for(i.sort(KT),s=0;s<i.length;s++)t=QT(i[s],t);return t}function KT(r,e){return r.x-e.x}function QT(r,e){const t=$T(r,e);if(!t)return e;const n=bv(t,r);return xs(n,n.next),xs(t,t.next)}function $T(r,e){let t=e,n=-1/0,i;const s=r.x,l=r.y;do{if(l<=t.y&&l>=t.next.y&&t.next.y!==t.y){const m=t.x+(l-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(m<=s&&m>n&&(n=m,i=t.x<t.next.x?t:t.next,m===s))return i}t=t.next}while(t!==e);if(!i)return null;const c=i,u=i.x,h=i.y;let f=1/0,p;t=i;do s>=t.x&&t.x>=u&&s!==t.x&&vo(l<h?s:n,l,u,h,l<h?n:s,l,t.x,t.y)&&(p=Math.abs(l-t.y)/(s-t.x),Na(t,r)&&(p<f||p===f&&(t.x>i.x||t.x===i.x&&eA(i,t)))&&(i=t,f=p)),t=t.next;while(t!==c);return i}function eA(r,e){return Wt(r.prev,r,e.prev)<0&&Wt(e.next,r,r.next)<0}function tA(r,e,t,n){let i=r;do i.z===0&&(i.z=_d(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,nA(i)}function nA(r){let e,t,n,i,s,l,c,u,h=1;do{for(t=r,r=null,s=null,l=0;t;){for(l++,n=t,c=0,e=0;e<h&&(c++,n=n.nextZ,!!n);e++);for(u=h;c>0||u>0&&n;)c!==0&&(u===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,c--):(i=n,n=n.nextZ,u--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,h*=2}while(l>1);return r}function _d(r,e,t,n,i){return r=(r-t)*i|0,e=(e-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function iA(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function vo(r,e,t,n,i,s,l,c){return(i-l)*(e-c)>=(r-l)*(s-c)&&(r-l)*(n-c)>=(t-l)*(e-c)&&(t-l)*(s-c)>=(i-l)*(n-c)}function rA(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!sA(r,e)&&(Na(r,e)&&Na(e,r)&&oA(r,e)&&(Wt(r.prev,r,e.prev)||Wt(r,e.prev,e))||Mu(r,e)&&Wt(r.prev,r,r.next)>0&&Wt(e.prev,e,e.next)>0)}function Wt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function Mu(r,e){return r.x===e.x&&r.y===e.y}function Av(r,e,t,n){const i=Ic(Wt(r,e,t)),s=Ic(Wt(r,e,n)),l=Ic(Wt(t,n,r)),c=Ic(Wt(t,n,e));return!!(i!==s&&l!==c||i===0&&Lc(r,t,e)||s===0&&Lc(r,n,e)||l===0&&Lc(t,r,n)||c===0&&Lc(t,e,n))}function Lc(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function Ic(r){return r>0?1:r<0?-1:0}function sA(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&Av(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function Na(r,e){return Wt(r.prev,r,r.next)<0?Wt(r,e,r.next)>=0&&Wt(r,r.prev,e)>=0:Wt(r,e,r.prev)<0||Wt(r,r.next,e)<0}function oA(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function bv(r,e){const t=new vd(r.i,r.x,r.y),n=new vd(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function t0(r,e,t,n){const i=new vd(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Ua(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function vd(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function aA(r,e,t,n){let i=0;for(let s=e,l=t-n;s<t;s+=n)i+=(r[l]-r[s])*(r[s+1]+r[l+1]),l=s;return i}class Hi{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return Hi.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];n0(e),i0(n,e);let l=e.length;t.forEach(n0);for(let u=0;u<t.length;u++)i.push(l),l+=t[u].length,i0(n,t[u]);const c=XT.triangulate(n,i);for(let u=0;u<c.length;u+=3)s.push(c.slice(u,u+3));return s}}function n0(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function i0(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class Eu extends xt{constructor(e=new _s([new he(.5,.5),new he(-.5,.5),new he(-.5,-.5),new he(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let c=0,u=e.length;c<u;c++){const h=e[c];l(h)}this.setAttribute("position",new Xe(i,3)),this.setAttribute("uv",new Xe(s,2)),this.computeVertexNormals();function l(c){const u=[],h=t.curveSegments!==void 0?t.curveSegments:12,f=t.steps!==void 0?t.steps:1,p=t.depth!==void 0?t.depth:1;let m=t.bevelEnabled!==void 0?t.bevelEnabled:!0,g=t.bevelThickness!==void 0?t.bevelThickness:.2,y=t.bevelSize!==void 0?t.bevelSize:g-.1,M=t.bevelOffset!==void 0?t.bevelOffset:0,x=t.bevelSegments!==void 0?t.bevelSegments:3;const v=t.extrudePath,w=t.UVGenerator!==void 0?t.UVGenerator:lA;let E,A=!1,L,C,I,z;v&&(E=v.getSpacedPoints(f),A=!0,m=!1,L=v.computeFrenetFrames(f,!1),C=new U,I=new U,z=new U),m||(x=0,g=0,y=0,M=0);const b=c.extractPoints(h);let R=b.shape;const B=b.holes;if(!Hi.isClockWise(R)){R=R.reverse();for(let k=0,xe=B.length;k<xe;k++){const fe=B[k];Hi.isClockWise(fe)&&(B[k]=fe.reverse())}}const ae=Hi.triangulateShape(R,B),V=R;for(let k=0,xe=B.length;k<xe;k++){const fe=B[k];R=R.concat(fe)}function j(k,xe,fe){return xe||console.error("THREE.ExtrudeGeometry: vec does not exist"),k.clone().addScaledVector(xe,fe)}const te=R.length,ue=ae.length;function F(k,xe,fe){let Se,de,Ye;const Pe=k.x-xe.x,D=k.y-xe.y,P=fe.x-k.x,Q=fe.y-k.y,_e=Pe*Pe+D*D,ge=Pe*Q-D*P;if(Math.abs(ge)>Number.EPSILON){const pe=Math.sqrt(_e),Ge=Math.sqrt(P*P+Q*Q),Ce=xe.x-D/pe,Oe=xe.y+Pe/pe,Qe=fe.x-Q/Ge,ut=fe.y+P/Ge,ve=((Qe-Ce)*Q-(ut-Oe)*P)/(Pe*Q-D*P);Se=Ce+Pe*ve-k.x,de=Oe+D*ve-k.y;const wt=Se*Se+de*de;if(wt<=2)return new he(Se,de);Ye=Math.sqrt(wt/2)}else{let pe=!1;Pe>Number.EPSILON?P>Number.EPSILON&&(pe=!0):Pe<-Number.EPSILON?P<-Number.EPSILON&&(pe=!0):Math.sign(D)===Math.sign(Q)&&(pe=!0),pe?(Se=-D,de=Pe,Ye=Math.sqrt(_e)):(Se=Pe,de=D,Ye=Math.sqrt(_e/2))}return new he(Se/Ye,de/Ye)}const H=[];for(let k=0,xe=V.length,fe=xe-1,Se=k+1;k<xe;k++,fe++,Se++)fe===xe&&(fe=0),Se===xe&&(Se=0),H[k]=F(V[k],V[fe],V[Se]);const X=[];let Z,le=H.concat();for(let k=0,xe=B.length;k<xe;k++){const fe=B[k];Z=[];for(let Se=0,de=fe.length,Ye=de-1,Pe=Se+1;Se<de;Se++,Ye++,Pe++)Ye===de&&(Ye=0),Pe===de&&(Pe=0),Z[Se]=F(fe[Se],fe[Ye],fe[Pe]);X.push(Z),le=le.concat(Z)}for(let k=0;k<x;k++){const xe=k/x,fe=g*Math.cos(xe*Math.PI/2),Se=y*Math.sin(xe*Math.PI/2)+M;for(let de=0,Ye=V.length;de<Ye;de++){const Pe=j(V[de],H[de],Se);Ae(Pe.x,Pe.y,-fe)}for(let de=0,Ye=B.length;de<Ye;de++){const Pe=B[de];Z=X[de];for(let D=0,P=Pe.length;D<P;D++){const Q=j(Pe[D],Z[D],Se);Ae(Q.x,Q.y,-fe)}}}const J=y+M;for(let k=0;k<te;k++){const xe=m?j(R[k],le[k],J):R[k];A?(I.copy(L.normals[0]).multiplyScalar(xe.x),C.copy(L.binormals[0]).multiplyScalar(xe.y),z.copy(E[0]).add(I).add(C),Ae(z.x,z.y,z.z)):Ae(xe.x,xe.y,0)}for(let k=1;k<=f;k++)for(let xe=0;xe<te;xe++){const fe=m?j(R[xe],le[xe],J):R[xe];A?(I.copy(L.normals[k]).multiplyScalar(fe.x),C.copy(L.binormals[k]).multiplyScalar(fe.y),z.copy(E[k]).add(I).add(C),Ae(z.x,z.y,z.z)):Ae(fe.x,fe.y,p/f*k)}for(let k=x-1;k>=0;k--){const xe=k/x,fe=g*Math.cos(xe*Math.PI/2),Se=y*Math.sin(xe*Math.PI/2)+M;for(let de=0,Ye=V.length;de<Ye;de++){const Pe=j(V[de],H[de],Se);Ae(Pe.x,Pe.y,p+fe)}for(let de=0,Ye=B.length;de<Ye;de++){const Pe=B[de];Z=X[de];for(let D=0,P=Pe.length;D<P;D++){const Q=j(Pe[D],Z[D],Se);A?Ae(Q.x,Q.y+E[f-1].y,E[f-1].x+fe):Ae(Q.x,Q.y,p+fe)}}}ce(),Me();function ce(){const k=i.length/3;if(m){let xe=0,fe=te*xe;for(let Se=0;Se<ue;Se++){const de=ae[Se];nt(de[2]+fe,de[1]+fe,de[0]+fe)}xe=f+x*2,fe=te*xe;for(let Se=0;Se<ue;Se++){const de=ae[Se];nt(de[0]+fe,de[1]+fe,de[2]+fe)}}else{for(let xe=0;xe<ue;xe++){const fe=ae[xe];nt(fe[2],fe[1],fe[0])}for(let xe=0;xe<ue;xe++){const fe=ae[xe];nt(fe[0]+te*f,fe[1]+te*f,fe[2]+te*f)}}n.addGroup(k,i.length/3-k,0)}function Me(){const k=i.length/3;let xe=0;be(V,xe),xe+=V.length;for(let fe=0,Se=B.length;fe<Se;fe++){const de=B[fe];be(de,xe),xe+=de.length}n.addGroup(k,i.length/3-k,1)}function be(k,xe){let fe=k.length;for(;--fe>=0;){const Se=fe;let de=fe-1;de<0&&(de=k.length-1);for(let Ye=0,Pe=f+x*2;Ye<Pe;Ye++){const D=te*Ye,P=te*(Ye+1),Q=xe+Se+D,_e=xe+de+D,ge=xe+de+P,pe=xe+Se+P;ot(Q,_e,ge,pe)}}}function Ae(k,xe,fe){u.push(k),u.push(xe),u.push(fe)}function nt(k,xe,fe){Ve(k),Ve(xe),Ve(fe);const Se=i.length/3,de=w.generateTopUV(n,i,Se-3,Se-2,Se-1);Ze(de[0]),Ze(de[1]),Ze(de[2])}function ot(k,xe,fe,Se){Ve(k),Ve(xe),Ve(Se),Ve(xe),Ve(fe),Ve(Se);const de=i.length/3,Ye=w.generateSideWallUV(n,i,de-6,de-3,de-2,de-1);Ze(Ye[0]),Ze(Ye[1]),Ze(Ye[3]),Ze(Ye[1]),Ze(Ye[2]),Ze(Ye[3])}function Ve(k){i.push(u[k*3+0]),i.push(u[k*3+1]),i.push(u[k*3+2])}function Ze(k){s.push(k.x),s.push(k.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return cA(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,l=e.shapes.length;s<l;s++){const c=t[e.shapes[s]];n.push(c)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new nu[i.type]().fromJSON(i)),new Eu(n,e.options)}}const lA={generateTopUV:function(r,e,t,n,i){const s=e[t*3],l=e[t*3+1],c=e[n*3],u=e[n*3+1],h=e[i*3],f=e[i*3+1];return[new he(s,l),new he(c,u),new he(h,f)]},generateSideWallUV:function(r,e,t,n,i,s){const l=e[t*3],c=e[t*3+1],u=e[t*3+2],h=e[n*3],f=e[n*3+1],p=e[n*3+2],m=e[i*3],g=e[i*3+1],y=e[i*3+2],M=e[s*3],x=e[s*3+1],v=e[s*3+2];return Math.abs(c-f)<Math.abs(l-h)?[new he(l,1-u),new he(h,1-p),new he(m,1-y),new he(M,1-v)]:[new he(c,1-u),new he(f,1-p),new he(g,1-y),new he(x,1-v)]}};function cA(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class wu extends Fr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new wu(e.radius,e.detail)}}class ja extends Fr{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ja(e.radius,e.detail)}}class Tu extends xt{constructor(e=.5,t=1,n=32,i=1,s=0,l=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:l},n=Math.max(3,n),i=Math.max(1,i);const c=[],u=[],h=[],f=[];let p=e;const m=(t-e)/i,g=new U,y=new he;for(let M=0;M<=i;M++){for(let x=0;x<=n;x++){const v=s+x/n*l;g.x=p*Math.cos(v),g.y=p*Math.sin(v),u.push(g.x,g.y,g.z),h.push(0,0,1),y.x=(g.x/t+1)/2,y.y=(g.y/t+1)/2,f.push(y.x,y.y)}p+=m}for(let M=0;M<i;M++){const x=M*(n+1);for(let v=0;v<n;v++){const w=v+x,E=w,A=w+n+1,L=w+n+2,C=w+1;c.push(E,A,C),c.push(A,L,C)}}this.setIndex(c),this.setAttribute("position",new Xe(u,3)),this.setAttribute("normal",new Xe(h,3)),this.setAttribute("uv",new Xe(f,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Tu(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Au extends xt{constructor(e=new _s([new he(0,.5),new he(-.5,-.5),new he(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],l=[];let c=0,u=0;if(Array.isArray(e)===!1)h(e);else for(let f=0;f<e.length;f++)h(e[f]),this.addGroup(c,u,f),c+=u,u=0;this.setIndex(n),this.setAttribute("position",new Xe(i,3)),this.setAttribute("normal",new Xe(s,3)),this.setAttribute("uv",new Xe(l,2));function h(f){const p=i.length/3,m=f.extractPoints(t);let g=m.shape;const y=m.holes;Hi.isClockWise(g)===!1&&(g=g.reverse());for(let x=0,v=y.length;x<v;x++){const w=y[x];Hi.isClockWise(w)===!0&&(y[x]=w.reverse())}const M=Hi.triangulateShape(g,y);for(let x=0,v=y.length;x<v;x++){const w=y[x];g=g.concat(w)}for(let x=0,v=g.length;x<v;x++){const w=g[x];i.push(w.x,w.y,0),s.push(0,0,1),l.push(w.x,w.y)}for(let x=0,v=M.length;x<v;x++){const w=M[x],E=w[0]+p,A=w[1]+p,L=w[2]+p;n.push(E,A,L),u+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return uA(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const l=t[e.shapes[i]];n.push(l)}return new Au(n,e.curveSegments)}}function uA(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class Ja extends xt{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,l=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:l,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(l+c,Math.PI);let h=0;const f=[],p=new U,m=new U,g=[],y=[],M=[],x=[];for(let v=0;v<=n;v++){const w=[],E=v/n;let A=0;v===0&&l===0?A=.5/t:v===n&&u===Math.PI&&(A=-.5/t);for(let L=0;L<=t;L++){const C=L/t;p.x=-e*Math.cos(i+C*s)*Math.sin(l+E*c),p.y=e*Math.cos(l+E*c),p.z=e*Math.sin(i+C*s)*Math.sin(l+E*c),y.push(p.x,p.y,p.z),m.copy(p).normalize(),M.push(m.x,m.y,m.z),x.push(C+A,1-E),w.push(h++)}f.push(w)}for(let v=0;v<n;v++)for(let w=0;w<t;w++){const E=f[v][w+1],A=f[v][w],L=f[v+1][w],C=f[v+1][w+1];(v!==0||l>0)&&g.push(E,A,C),(v!==n-1||u<Math.PI)&&g.push(A,L,C)}this.setIndex(g),this.setAttribute("position",new Xe(y,3)),this.setAttribute("normal",new Xe(M,3)),this.setAttribute("uv",new Xe(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ja(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class bu extends Fr{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new bu(e.radius,e.detail)}}class Cu extends xt{constructor(e=1,t=.4,n=12,i=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const l=[],c=[],u=[],h=[],f=new U,p=new U,m=new U;for(let g=0;g<=n;g++)for(let y=0;y<=i;y++){const M=y/i*s,x=g/n*Math.PI*2;p.x=(e+t*Math.cos(x))*Math.cos(M),p.y=(e+t*Math.cos(x))*Math.sin(M),p.z=t*Math.sin(x),c.push(p.x,p.y,p.z),f.x=e*Math.cos(M),f.y=e*Math.sin(M),m.subVectors(p,f).normalize(),u.push(m.x,m.y,m.z),h.push(y/i),h.push(g/n)}for(let g=1;g<=n;g++)for(let y=1;y<=i;y++){const M=(i+1)*g+y-1,x=(i+1)*(g-1)+y-1,v=(i+1)*(g-1)+y,w=(i+1)*g+y;l.push(M,x,w),l.push(x,v,w)}this.setIndex(l),this.setAttribute("position",new Xe(c,3)),this.setAttribute("normal",new Xe(u,3)),this.setAttribute("uv",new Xe(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Cu(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Ru extends xt{constructor(e=1,t=.4,n=64,i=8,s=2,l=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:l},n=Math.floor(n),i=Math.floor(i);const c=[],u=[],h=[],f=[],p=new U,m=new U,g=new U,y=new U,M=new U,x=new U,v=new U;for(let E=0;E<=n;++E){const A=E/n*s*Math.PI*2;w(A,s,l,e,g),w(A+.01,s,l,e,y),x.subVectors(y,g),v.addVectors(y,g),M.crossVectors(x,v),v.crossVectors(M,x),M.normalize(),v.normalize();for(let L=0;L<=i;++L){const C=L/i*Math.PI*2,I=-t*Math.cos(C),z=t*Math.sin(C);p.x=g.x+(I*v.x+z*M.x),p.y=g.y+(I*v.y+z*M.y),p.z=g.z+(I*v.z+z*M.z),u.push(p.x,p.y,p.z),m.subVectors(p,g).normalize(),h.push(m.x,m.y,m.z),f.push(E/n),f.push(L/i)}}for(let E=1;E<=n;E++)for(let A=1;A<=i;A++){const L=(i+1)*(E-1)+(A-1),C=(i+1)*E+(A-1),I=(i+1)*E+A,z=(i+1)*(E-1)+A;c.push(L,C,z),c.push(C,I,z)}this.setIndex(c),this.setAttribute("position",new Xe(u,3)),this.setAttribute("normal",new Xe(h,3)),this.setAttribute("uv",new Xe(f,2));function w(E,A,L,C,I){const z=Math.cos(E),b=Math.sin(E),R=L/A*E,B=Math.cos(R);I.x=C*(2+B)*.5*z,I.y=C*(2+B)*b*.5,I.z=C*Math.sin(R)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ru(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Pu extends xt{constructor(e=new np(new U(-1,-1,0),new U(-1,1,0),new U(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const l=e.computeFrenetFrames(t,s);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;const c=new U,u=new U,h=new he;let f=new U;const p=[],m=[],g=[],y=[];M(),this.setIndex(y),this.setAttribute("position",new Xe(p,3)),this.setAttribute("normal",new Xe(m,3)),this.setAttribute("uv",new Xe(g,2));function M(){for(let E=0;E<t;E++)x(E);x(s===!1?t:0),w(),v()}function x(E){f=e.getPointAt(E/t,f);const A=l.normals[E],L=l.binormals[E];for(let C=0;C<=i;C++){const I=C/i*Math.PI*2,z=Math.sin(I),b=-Math.cos(I);u.x=b*A.x+z*L.x,u.y=b*A.y+z*L.y,u.z=b*A.z+z*L.z,u.normalize(),m.push(u.x,u.y,u.z),c.x=f.x+n*u.x,c.y=f.y+n*u.y,c.z=f.z+n*u.z,p.push(c.x,c.y,c.z)}}function v(){for(let E=1;E<=t;E++)for(let A=1;A<=i;A++){const L=(i+1)*(E-1)+(A-1),C=(i+1)*E+(A-1),I=(i+1)*E+A,z=(i+1)*(E-1)+A;y.push(L,C,z),y.push(C,I,z)}}function w(){for(let E=0;E<=t;E++)for(let A=0;A<=i;A++)h.x=E/t,h.y=A/i,g.push(h.x,h.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Pu(new nu[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Cv extends xt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new U,s=new U;if(e.index!==null){const l=e.attributes.position,c=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:c.count,materialIndex:0}]);for(let h=0,f=u.length;h<f;++h){const p=u[h],m=p.start,g=p.count;for(let y=m,M=m+g;y<M;y+=3)for(let x=0;x<3;x++){const v=c.getX(y+x),w=c.getX(y+(x+1)%3);i.fromBufferAttribute(l,v),s.fromBufferAttribute(l,w),r0(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const l=e.attributes.position;for(let c=0,u=l.count/3;c<u;c++)for(let h=0;h<3;h++){const f=3*c+h,p=3*c+(h+1)%3;i.fromBufferAttribute(l,f),s.fromBufferAttribute(l,p),r0(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new Xe(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function r0(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var s0=Object.freeze({__proto__:null,BoxGeometry:Ms,CapsuleGeometry:vu,CircleGeometry:yu,ConeGeometry:xu,CylinderGeometry:Ro,DodecahedronGeometry:Su,EdgesGeometry:wv,ExtrudeGeometry:Eu,IcosahedronGeometry:wu,LatheGeometry:Za,OctahedronGeometry:ja,PlaneGeometry:qa,PolyhedronGeometry:Fr,RingGeometry:Tu,ShapeGeometry:Au,SphereGeometry:Ja,TetrahedronGeometry:bu,TorusGeometry:Cu,TorusKnotGeometry:Ru,TubeGeometry:Pu,WireframeGeometry:Cv});class Rv extends In{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Ue(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class Pv extends Ti{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class rp extends In{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Ue(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ue(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ur,this.normalScale=new he(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Lv extends rp{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new he(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Zt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Ue(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Ue(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Ue(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class Iv extends In{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Ue(16777215),this.specular=new Ue(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ue(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ur,this.normalScale=new he(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ha,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Dv extends In{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ue(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ue(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ur,this.normalScale=new he(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class Nv extends In{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ur,this.normalScale=new he(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Uv extends In{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Ue(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ue(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ur,this.normalScale=new he(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ha,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Ov extends In{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ue(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ur,this.normalScale=new he(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Fv extends Bn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function fs(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function zv(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function Bv(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function yd(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,l=0;l!==n;++s){const c=t[s]*e;for(let u=0;u!==e;++u)i[l++]=r[c+u]}return i}function sp(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let l=s[n];if(l!==void 0)if(Array.isArray(l))do l=s[n],l!==void 0&&(e.push(s.time),t.push.apply(t,l)),s=r[i++];while(s!==void 0);else if(l.toArray!==void 0)do l=s[n],l!==void 0&&(e.push(s.time),l.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do l=s[n],l!==void 0&&(e.push(s.time),t.push(l)),s=r[i++];while(s!==void 0)}function hA(r,e,t,n,i=30){const s=r.clone();s.name=e;const l=[];for(let u=0;u<s.tracks.length;++u){const h=s.tracks[u],f=h.getValueSize(),p=[],m=[];for(let g=0;g<h.times.length;++g){const y=h.times[g]*i;if(!(y<t||y>=n)){p.push(h.times[g]);for(let M=0;M<f;++M)m.push(h.values[g*f+M])}}p.length!==0&&(h.times=fs(p,h.times.constructor),h.values=fs(m,h.values.constructor),l.push(h))}s.tracks=l;let c=1/0;for(let u=0;u<s.tracks.length;++u)c>s.tracks[u].times[0]&&(c=s.tracks[u].times[0]);for(let u=0;u<s.tracks.length;++u)s.tracks[u].shift(-1*c);return s.resetDuration(),s}function fA(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let l=0;l<i;++l){const c=t.tracks[l],u=c.ValueTypeName;if(u==="bool"||u==="string")continue;const h=r.tracks.find(function(v){return v.name===c.name&&v.ValueTypeName===u});if(h===void 0)continue;let f=0;const p=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=p/3);let m=0;const g=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=g/3);const y=c.times.length-1;let M;if(s<=c.times[0]){const v=f,w=p-f;M=c.values.slice(v,w)}else if(s>=c.times[y]){const v=y*p+f,w=v+p-f;M=c.values.slice(v,w)}else{const v=c.createInterpolant(),w=f,E=p-f;v.evaluate(s),M=v.resultBuffer.slice(w,E)}u==="quaternion"&&new Pn().fromArray(M).normalize().conjugate().toArray(M);const x=h.times.length;for(let v=0;v<x;++v){const w=v*g+m;if(u==="quaternion")Pn.multiplyQuaternionsFlat(h.values,w,M,0,h.values,w);else{const E=g-m*2;for(let A=0;A<E;++A)h.values[w+A]-=M[A]}}}return r.blendMode=Nd,r}const dA={convertArray:fs,isTypedArray:zv,getKeyframeOrder:Bv,sortedArray:yd,flattenJSON:sp,subclip:hA,makeClipAdditive:fA};class Ka{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let l;n:{i:if(!(e<i)){for(let c=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(s=i,i=t[++n],e<i)break t}l=t.length;break n}if(!(e>=s)){const c=t[1];e<c&&(n=2,s=c);for(let u=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(i=s,s=t[--n-1],e>=s)break t}l=n,n=0;break n}break e}for(;n<l;){const c=n+l>>>1;e<t[c]?l=c:n=c+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let l=0;l!==i;++l)t[l]=n[s+l];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class kv extends Ka{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:cs,endingEnd:cs}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,l=e+1,c=i[s],u=i[l];if(c===void 0)switch(this.getSettings_().endingStart){case us:s=e,c=2*t-n;break;case Aa:s=i.length-2,c=t+i[s]-i[s+1];break;default:s=e,c=n}if(u===void 0)switch(this.getSettings_().endingEnd){case us:l=e,u=2*n-t;break;case Aa:l=1,u=n+i[1]-i[0];break;default:l=e-1,u=t}const h=(n-t)*.5,f=this.valueSize;this._weightPrev=h/(t-c),this._weightNext=h/(u-n),this._offsetPrev=s*f,this._offsetNext=l*f}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,f=this._offsetPrev,p=this._offsetNext,m=this._weightPrev,g=this._weightNext,y=(n-t)/(i-t),M=y*y,x=M*y,v=-m*x+2*m*M-m*y,w=(1+m)*x+(-1.5-2*m)*M+(-.5+m)*y+1,E=(-1-g)*x+(1.5+g)*M+.5*y,A=g*x-g*M;for(let L=0;L!==c;++L)s[L]=v*l[f+L]+w*l[h+L]+E*l[u+L]+A*l[p+L];return s}}class op extends Ka{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,f=(n-t)/(i-t),p=1-f;for(let m=0;m!==c;++m)s[m]=l[h+m]*p+l[u+m]*f;return s}}class Hv extends Ka{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class bi{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=fs(t,this.TimeBufferType),this.values=fs(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:fs(e.times,Array),values:fs(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Hv(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new op(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new kv(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case wa:t=this.InterpolantFactoryMethodDiscrete;break;case Ta:t=this.InterpolantFactoryMethodLinear;break;case Zc:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return wa;case this.InterpolantFactoryMethodLinear:return Ta;case this.InterpolantFactoryMethodSmooth:return Zc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,l=i-1;for(;s!==i&&n[s]<e;)++s;for(;l!==-1&&n[l]>t;)--l;if(++l,s!==0||l!==i){s>=l&&(l=Math.max(l,1),s=l-1);const c=this.getValueSize();this.times=n.slice(s,l),this.values=this.values.slice(s*c,l*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let l=null;for(let c=0;c!==s;c++){const u=n[c];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,u),e=!1;break}if(l!==null&&l>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,u,l),e=!1;break}l=u}if(i!==void 0&&zv(i))for(let c=0,u=i.length;c!==u;++c){const h=i[c];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,h),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===Zc,s=e.length-1;let l=1;for(let c=1;c<s;++c){let u=!1;const h=e[c],f=e[c+1];if(h!==f&&(c!==1||h!==e[0]))if(i)u=!0;else{const p=c*n,m=p-n,g=p+n;for(let y=0;y!==n;++y){const M=t[p+y];if(M!==t[m+y]||M!==t[g+y]){u=!0;break}}}if(u){if(c!==l){e[l]=e[c];const p=c*n,m=l*n;for(let g=0;g!==n;++g)t[m+g]=t[p+g]}++l}}if(s>0){e[l]=e[s];for(let c=s*n,u=l*n,h=0;h!==n;++h)t[u+h]=t[c+h];++l}return l!==e.length?(this.times=e.slice(0,l),this.values=t.slice(0,l*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}bi.prototype.TimeBufferType=Float32Array;bi.prototype.ValueBufferType=Float32Array;bi.prototype.DefaultInterpolation=Ta;class Es extends bi{}Es.prototype.ValueTypeName="bool";Es.prototype.ValueBufferType=Array;Es.prototype.DefaultInterpolation=wa;Es.prototype.InterpolantFactoryMethodLinear=void 0;Es.prototype.InterpolantFactoryMethodSmooth=void 0;class ap extends bi{}ap.prototype.ValueTypeName="color";class Oa extends bi{}Oa.prototype.ValueTypeName="number";class Vv extends Ka{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=(n-t)/(i-t);let h=e*c;for(let f=h+c;h!==f;h+=4)Pn.slerpFlat(s,0,l,h-c,l,h,u);return s}}class Po extends bi{InterpolantFactoryMethodLinear(e){return new Vv(this.times,this.values,this.getValueSize(),e)}}Po.prototype.ValueTypeName="quaternion";Po.prototype.DefaultInterpolation=Ta;Po.prototype.InterpolantFactoryMethodSmooth=void 0;class ws extends bi{}ws.prototype.ValueTypeName="string";ws.prototype.ValueBufferType=Array;ws.prototype.DefaultInterpolation=wa;ws.prototype.InterpolantFactoryMethodLinear=void 0;ws.prototype.InterpolantFactoryMethodSmooth=void 0;class Fa extends bi{}Fa.prototype.ValueTypeName="vector";class za{constructor(e,t=-1,n,i=lu){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=ti(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let l=0,c=n.length;l!==c;++l)t.push(mA(n[l]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,l=n.length;s!==l;++s)t.push(bi.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,l=[];for(let c=0;c<s;c++){let u=[],h=[];u.push((c+s-1)%s,c,(c+1)%s),h.push(0,1,0);const f=Bv(u);u=yd(u,1,f),h=yd(h,1,f),!i&&u[0]===0&&(u.push(s),h.push(h[0])),l.push(new Oa(".morphTargetInfluences["+t[c].name+"]",u,h).scale(1/n))}return new this(e,-1,l)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let c=0,u=e.length;c<u;c++){const h=e[c],f=h.name.match(s);if(f&&f.length>1){const p=f[1];let m=i[p];m||(i[p]=m=[]),m.push(h)}}const l=[];for(const c in i)l.push(this.CreateFromMorphTargetSequence(c,i[c],t,n));return l}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(p,m,g,y,M){if(g.length!==0){const x=[],v=[];sp(g,x,v,y),x.length!==0&&M.push(new p(m,x,v))}},i=[],s=e.name||"default",l=e.fps||30,c=e.blendMode;let u=e.length||-1;const h=e.hierarchy||[];for(let p=0;p<h.length;p++){const m=h[p].keys;if(!(!m||m.length===0))if(m[0].morphTargets){const g={};let y;for(y=0;y<m.length;y++)if(m[y].morphTargets)for(let M=0;M<m[y].morphTargets.length;M++)g[m[y].morphTargets[M]]=-1;for(const M in g){const x=[],v=[];for(let w=0;w!==m[y].morphTargets.length;++w){const E=m[y];x.push(E.time),v.push(E.morphTarget===M?1:0)}i.push(new Oa(".morphTargetInfluence["+M+"]",x,v))}u=g.length*l}else{const g=".bones["+t[p].name+"]";n(Fa,g+".position",m,"pos",i),n(Po,g+".quaternion",m,"rot",i),n(Fa,g+".scale",m,"scl",i)}}return i.length===0?null:new this(s,u,i,c)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function pA(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Oa;case"vector":case"vector2":case"vector3":case"vector4":return Fa;case"color":return ap;case"quaternion":return Po;case"bool":case"boolean":return Es;case"string":return ws}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function mA(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=pA(r.type);if(r.times===void 0){const t=[],n=[];sp(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const rr={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class lp{constructor(e,t,n){const i=this;let s=!1,l=0,c=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(f){c++,s===!1&&i.onStart!==void 0&&i.onStart(f,l,c),s=!0},this.itemEnd=function(f){l++,i.onProgress!==void 0&&i.onProgress(f,l,c),l===c&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(f){i.onError!==void 0&&i.onError(f)},this.resolveURL=function(f){return u?u(f):f},this.setURLModifier=function(f){return u=f,this},this.addHandler=function(f,p){return h.push(f,p),this},this.removeHandler=function(f){const p=h.indexOf(f);return p!==-1&&h.splice(p,2),this},this.getHandler=function(f){for(let p=0,m=h.length;p<m;p+=2){const g=h[p],y=h[p+1];if(g.global&&(g.lastIndex=0),g.test(f))return y}return null}}}const Gv=new lp;class Yn{constructor(e){this.manager=e!==void 0?e:Gv,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}Yn.DEFAULT_MATERIAL_NAME="__DEFAULT";const tr={};class gA extends Error{constructor(e,t){super(e),this.response=t}}class lr extends Yn{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=rr.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(tr[e]!==void 0){tr[e].push({onLoad:t,onProgress:n,onError:i});return}tr[e]=[],tr[e].push({onLoad:t,onProgress:n,onError:i});const l=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(l).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const f=tr[e],p=h.body.getReader(),m=h.headers.get("Content-Length")||h.headers.get("X-File-Size"),g=m?parseInt(m):0,y=g!==0;let M=0;const x=new ReadableStream({start(v){w();function w(){p.read().then(({done:E,value:A})=>{if(E)v.close();else{M+=A.byteLength;const L=new ProgressEvent("progress",{lengthComputable:y,loaded:M,total:g});for(let C=0,I=f.length;C<I;C++){const z=f[C];z.onProgress&&z.onProgress(L)}v.enqueue(A),w()}})}}});return new Response(x)}else throw new gA(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(u){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(f=>new DOMParser().parseFromString(f,c));case"json":return h.json();default:if(c===void 0)return h.text();{const p=/charset="?([^;"\s]*)"?/i.exec(c),m=p&&p[1]?p[1].toLowerCase():void 0,g=new TextDecoder(m);return h.arrayBuffer().then(y=>g.decode(y))}}}).then(h=>{rr.add(e,h);const f=tr[e];delete tr[e];for(let p=0,m=f.length;p<m;p++){const g=f[p];g.onLoad&&g.onLoad(h)}}).catch(h=>{const f=tr[e];if(f===void 0)throw this.manager.itemError(e),h;delete tr[e];for(let p=0,m=f.length;p<m;p++){const g=f[p];g.onError&&g.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class _A extends Yn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new lr(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=za.parse(e[n]);t.push(i)}return t}}class vA extends Yn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=[],c=new gu,u=new lr(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(s.withCredentials);let h=0;function f(p){u.load(e[p],function(m){const g=s.parse(m,!0);l[p]={width:g.width,height:g.height,format:g.format,mipmaps:g.mipmaps},h+=1,h===6&&(g.mipmapCount===1&&(c.minFilter=$t),c.image=l,c.format=g.format,c.needsUpdate=!0,t&&t(c))},n,i)}if(Array.isArray(e))for(let p=0,m=e.length;p<m;++p)f(p);else u.load(e,function(p){const m=s.parse(p,!0);if(m.isCubemap){const g=m.mipmaps.length/m.mipmapCount;for(let y=0;y<g;y++){l[y]={mipmaps:[]};for(let M=0;M<m.mipmapCount;M++)l[y].mipmaps.push(m.mipmaps[y*m.mipmapCount+M]),l[y].format=m.format,l[y].width=m.width,l[y].height=m.height}c.image=l}else c.image.width=m.width,c.image.height=m.height,c.mipmaps=m.mipmaps;m.mipmapCount===1&&(c.minFilter=$t),c.format=m.format,c.needsUpdate=!0,t&&t(c)},n,i);return c}}class Ba extends Yn{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,l=rr.get(e);if(l!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(l),s.manager.itemEnd(e)},0),l;const c=La("img");function u(){f(),rr.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(p){f(),i&&i(p),s.manager.itemError(e),s.manager.itemEnd(e)}function f(){c.removeEventListener("load",u,!1),c.removeEventListener("error",h,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),s.manager.itemStart(e),c.src=e,c}}class yA extends Yn{constructor(e){super(e)}load(e,t,n,i){const s=new Xa;s.colorSpace=an;const l=new Ba(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);let c=0;function u(h){l.load(e[h],function(f){s.images[h]=f,c++,c===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let h=0;h<e.length;++h)u(h);return s}}class xA extends Yn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new gs,c=new lr(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(s.withCredentials),c.load(e,function(u){let h;try{h=s.parse(u)}catch(f){if(i!==void 0)i(f);else{console.error(f);return}}h.image!==void 0?l.image=h.image:h.data!==void 0&&(l.image.width=h.width,l.image.height=h.height,l.image.data=h.data),l.wrapS=h.wrapS!==void 0?h.wrapS:Cn,l.wrapT=h.wrapT!==void 0?h.wrapT:Cn,l.magFilter=h.magFilter!==void 0?h.magFilter:$t,l.minFilter=h.minFilter!==void 0?h.minFilter:$t,l.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.colorSpace!==void 0?l.colorSpace=h.colorSpace:h.encoding!==void 0&&(l.encoding=h.encoding),h.flipY!==void 0&&(l.flipY=h.flipY),h.format!==void 0&&(l.format=h.format),h.type!==void 0&&(l.type=h.type),h.mipmaps!==void 0&&(l.mipmaps=h.mipmaps,l.minFilter=Dr),h.mipmapCount===1&&(l.minFilter=$t),h.generateMipmaps!==void 0&&(l.generateMipmaps=h.generateMipmaps),l.needsUpdate=!0,t&&t(l,h)},n,i),l}}class SA extends Yn{constructor(e){super(e)}load(e,t,n,i){const s=new tn,l=new Ba(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(e,function(c){s.image=c,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class zr extends Lt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Ue(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class Wv extends zr{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Lt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Ue(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const yf=new lt,o0=new U,a0=new U;class cp{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new he(512,512),this.map=null,this.mapPass=null,this.matrix=new lt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ya,this._frameExtents=new he(1,1),this._viewportCount=1,this._viewports=[new Dt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;o0.setFromMatrixPosition(e.matrixWorld),t.position.copy(o0),a0.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(a0),t.updateMatrixWorld(),yf.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(yf),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(yf)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class MA extends cp{constructor(){super(new en(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=Eo*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class Xv extends zr{constructor(e,t,n=0,i=Math.PI/3,s=0,l=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Lt.DEFAULT_UP),this.updateMatrix(),this.target=new Lt,this.distance=n,this.angle=i,this.penumbra=s,this.decay=l,this.map=null,this.shadow=new MA}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const l0=new lt,la=new U,xf=new U;class EA extends cp{constructor(){super(new en(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new he(4,2),this._viewportCount=6,this._viewports=[new Dt(2,1,1,1),new Dt(0,1,1,1),new Dt(3,1,1,1),new Dt(1,1,1,1),new Dt(3,0,1,1),new Dt(1,0,1,1)],this._cubeDirections=[new U(1,0,0),new U(-1,0,0),new U(0,0,1),new U(0,0,-1),new U(0,1,0),new U(0,-1,0)],this._cubeUps=[new U(0,1,0),new U(0,1,0),new U(0,1,0),new U(0,1,0),new U(0,0,1),new U(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),la.setFromMatrixPosition(e.matrixWorld),n.position.copy(la),xf.copy(n.position),xf.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(xf),n.updateMatrixWorld(),i.makeTranslation(-la.x,-la.y,-la.z),l0.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(l0)}}class Yv extends zr{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new EA}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class wA extends cp{constructor(){super(new Lr(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class qv extends zr{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Lt.DEFAULT_UP),this.updateMatrix(),this.target=new Lt,this.shadow=new wA}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Zv extends zr{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class jv extends zr{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class Jv{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new U)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.282095),t.addScaledVector(l[1],.488603*i),t.addScaledVector(l[2],.488603*s),t.addScaledVector(l[3],.488603*n),t.addScaledVector(l[4],1.092548*(n*i)),t.addScaledVector(l[5],1.092548*(i*s)),t.addScaledVector(l[6],.315392*(3*s*s-1)),t.addScaledVector(l[7],1.092548*(n*s)),t.addScaledVector(l[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.886227),t.addScaledVector(l[1],2*.511664*i),t.addScaledVector(l[2],2*.511664*s),t.addScaledVector(l[3],2*.511664*n),t.addScaledVector(l[4],2*.429043*n*i),t.addScaledVector(l[5],2*.429043*i*s),t.addScaledVector(l[6],.743125*s*s-.247708),t.addScaledVector(l[7],2*.429043*n*s),t.addScaledVector(l[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class Kv extends zr{constructor(e=new Jv,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Lu extends Yn{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,l=new lr(s.manager);l.setPath(s.path),l.setRequestHeader(s.requestHeader),l.setWithCredentials(s.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=Lu.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Ue().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(i.depthFunc=e.depthFunc),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(i.blendSrc=e.blendSrc),e.blendDst!==void 0&&(i.blendDst=e.blendDst),e.blendEquation!==void 0&&(i.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(i.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(i.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==void 0&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const l=e.uniforms[s];switch(i.uniforms[s]={},l.type){case"t":i.uniforms[s].value=n(l.value);break;case"c":i.uniforms[s].value=new Ue().setHex(l.value);break;case"v2":i.uniforms[s].value=new he().fromArray(l.value);break;case"v3":i.uniforms[s].value=new U().fromArray(l.value);break;case"v4":i.uniforms[s].value=new Dt().fromArray(l.value);break;case"m3":i.uniforms[s].value=new yt().fromArray(l.value);break;case"m4":i.uniforms[s].value=new lt().fromArray(l.value);break;default:i.uniforms[s].value=l.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new he().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new he().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:Rv,SpriteMaterial:jd,RawShaderMaterial:Pv,ShaderMaterial:Ti,PointsMaterial:Kd,MeshPhysicalMaterial:Lv,MeshStandardMaterial:rp,MeshPhongMaterial:Iv,MeshToonMaterial:Dv,MeshNormalMaterial:Nv,MeshLambertMaterial:Uv,MeshDepthMaterial:Xd,MeshDistanceMaterial:Yd,MeshBasicMaterial:Or,MeshMatcapMaterial:Ov,LineDashedMaterial:Fv,LineBasicMaterial:Bn,Material:In};return new t[e]}}class xd{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class Qv extends xt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class $v extends Yn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new lr(s.manager);l.setPath(s.path),l.setRequestHeader(s.requestHeader),l.setWithCredentials(s.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(g,y){if(t[y]!==void 0)return t[y];const x=g.interleavedBuffers[y],v=s(g,x.buffer),w=po(x.type,v),E=new pu(w,x.stride);return E.uuid=x.uuid,t[y]=E,E}function s(g,y){if(n[y]!==void 0)return n[y];const x=g.arrayBuffers[y],v=new Uint32Array(x).buffer;return n[y]=v,v}const l=e.isInstancedBufferGeometry?new Qv:new xt,c=e.data.index;if(c!==void 0){const g=po(c.type,c.array);l.setIndex(new Nt(g,1))}const u=e.data.attributes;for(const g in u){const y=u[g];let M;if(y.isInterleavedBufferAttribute){const x=i(e.data,y.data);M=new ys(x,y.itemSize,y.offset,y.normalized)}else{const x=po(y.type,y.array),v=y.isInstancedBufferAttribute?To:Nt;M=new v(x,y.itemSize,y.normalized)}y.name!==void 0&&(M.name=y.name),y.usage!==void 0&&M.setUsage(y.usage),l.setAttribute(g,M)}const h=e.data.morphAttributes;if(h)for(const g in h){const y=h[g],M=[];for(let x=0,v=y.length;x<v;x++){const w=y[x];let E;if(w.isInterleavedBufferAttribute){const A=i(e.data,w.data);E=new ys(A,w.itemSize,w.offset,w.normalized)}else{const A=po(w.type,w.array);E=new Nt(A,w.itemSize,w.normalized)}w.name!==void 0&&(E.name=w.name),M.push(E)}l.morphAttributes[g]=M}e.data.morphTargetsRelative&&(l.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(p!==void 0)for(let g=0,y=p.length;g!==y;++g){const M=p[g];l.addGroup(M.start,M.count,M.materialIndex)}const m=e.data.boundingSphere;if(m!==void 0){const g=new U;m.center!==void 0&&g.fromArray(m.center),l.boundingSphere=new Ln(g,m.radius)}return e.name&&(l.name=e.name),e.userData&&(l.userData=e.userData),l}}class TA extends Yn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=this.path===""?xd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||l;const c=new lr(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(u){let h=null;try{h=JSON.parse(u)}catch(p){i!==void 0&&i(p),console.error("THREE:ObjectLoader: Can't parse "+e+".",p.message);return}const f=h.metadata;if(f===void 0||f.type===void 0||f.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?xd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new lr(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const l=await s.loadAsync(e,t),c=JSON.parse(l),u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(c)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),l=this.parseImages(e.images,function(){t!==void 0&&t(h)}),c=this.parseTextures(e.textures,l),u=this.parseMaterials(e.materials,c),h=this.parseObject(e.object,s,u,c,n),f=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,f),t!==void 0){let p=!1;for(const m in l)if(l[m].data instanceof HTMLImageElement){p=!0;break}p===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),l=this.parseTextures(e.textures,s),c=this.parseMaterials(e.materials,l),u=this.parseObject(e.object,i,c,l,t),h=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,h),u}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new _s().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,l=e.length;s<l;s++){const c=new mu().fromJSON(e[s],i);n[c.uuid]=c}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new $v;for(let s=0,l=e.length;s<l;s++){let c;const u=e[s];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(u);break;default:u.type in s0?c=s0[u.type].fromJSON(u,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}c.uuid=u.uuid,u.name!==void 0&&(c.name=u.name),u.userData!==void 0&&(c.userData=u.userData),n[u.uuid]=c}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new Lu;s.setTextures(t);for(let l=0,c=e.length;l<c;l++){const u=e[l];n[u.uuid]===void 0&&(n[u.uuid]=s.parse(u)),i[u.uuid]=n[u.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=za.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function l(u){return n.manager.itemStart(u),s.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}function c(u){if(typeof u=="string"){const h=u,f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return l(f)}else return u.data?{data:po(u.type,u.data),width:u.width,height:u.height}:null}if(e!==void 0&&e.length>0){const u=new lp(t);s=new Ba(u),s.setCrossOrigin(this.crossOrigin);for(let h=0,f=e.length;h<f;h++){const p=e[h],m=p.url;if(Array.isArray(m)){const g=[];for(let y=0,M=m.length;y<M;y++){const x=m[y],v=c(x);v!==null&&(v instanceof HTMLImageElement?g.push(v):g.push(new gs(v.data,v.width,v.height)))}i[p.uuid]=new hs(g)}else{const g=c(p.url);i[p.uuid]=new hs(g)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:t.resourcePath+c;return await i.loadAsync(u)}else return l.data?{data:po(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){i=new Ba(this.manager),i.setCrossOrigin(this.crossOrigin);for(let l=0,c=e.length;l<c;l++){const u=e[l],h=u.url;if(Array.isArray(h)){const f=[];for(let p=0,m=h.length;p<m;p++){const g=h[p],y=await s(g);y!==null&&(y instanceof HTMLImageElement?f.push(y):f.push(new gs(y.data,y.width,y.height)))}n[u.uuid]=new hs(f)}else{const f=await s(u.url);n[u.uuid]=new hs(f)}}}return n}parseTextures(e,t){function n(s,l){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),l[s])}const i={};if(e!==void 0)for(let s=0,l=e.length;s<l;s++){const c=e[s];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),t[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const u=t[c.image],h=u.data;let f;Array.isArray(h)?(f=new Xa,h.length===6&&(f.needsUpdate=!0)):(h&&h.data?f=new gs:f=new tn,h&&(f.needsUpdate=!0)),f.source=u,f.uuid=c.uuid,c.name!==void 0&&(f.name=c.name),c.mapping!==void 0&&(f.mapping=n(c.mapping,AA)),c.channel!==void 0&&(f.channel=c.channel),c.offset!==void 0&&f.offset.fromArray(c.offset),c.repeat!==void 0&&f.repeat.fromArray(c.repeat),c.center!==void 0&&f.center.fromArray(c.center),c.rotation!==void 0&&(f.rotation=c.rotation),c.wrap!==void 0&&(f.wrapS=n(c.wrap[0],c0),f.wrapT=n(c.wrap[1],c0)),c.format!==void 0&&(f.format=c.format),c.internalFormat!==void 0&&(f.internalFormat=c.internalFormat),c.type!==void 0&&(f.type=c.type),c.colorSpace!==void 0&&(f.colorSpace=c.colorSpace),c.encoding!==void 0&&(f.encoding=c.encoding),c.minFilter!==void 0&&(f.minFilter=n(c.minFilter,u0)),c.magFilter!==void 0&&(f.magFilter=n(c.magFilter,u0)),c.anisotropy!==void 0&&(f.anisotropy=c.anisotropy),c.flipY!==void 0&&(f.flipY=c.flipY),c.generateMipmaps!==void 0&&(f.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(f.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(f.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(f.compareFunction=c.compareFunction),c.userData!==void 0&&(f.userData=c.userData),i[c.uuid]=f}return i}parseObject(e,t,n,i,s){let l;function c(m){return t[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",m),t[m]}function u(m){if(m!==void 0){if(Array.isArray(m)){const g=[];for(let y=0,M=m.length;y<M;y++){const x=m[y];n[x]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",x),g.push(n[x])}return g}return n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),n[m]}}function h(m){return i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",m),i[m]}let f,p;switch(e.type){case"Scene":l=new Zd,e.background!==void 0&&(Number.isInteger(e.background)?l.background=new Ue(e.background):l.background=h(e.background)),e.environment!==void 0&&(l.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?l.fog=new du(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(l.fog=new fu(e.fog.color,e.fog.density)),e.fog.name!==""&&(l.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(l.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(l.backgroundIntensity=e.backgroundIntensity);break;case"PerspectiveCamera":l=new en(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(l.focus=e.focus),e.zoom!==void 0&&(l.zoom=e.zoom),e.filmGauge!==void 0&&(l.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(l.filmOffset=e.filmOffset),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"OrthographicCamera":l=new Lr(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(l.zoom=e.zoom),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"AmbientLight":l=new Zv(e.color,e.intensity);break;case"DirectionalLight":l=new qv(e.color,e.intensity);break;case"PointLight":l=new Yv(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":l=new jv(e.color,e.intensity,e.width,e.height);break;case"SpotLight":l=new Xv(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":l=new Wv(e.color,e.groundColor,e.intensity);break;case"LightProbe":l=new Kv().fromJSON(e);break;case"SkinnedMesh":f=c(e.geometry),p=u(e.material),l=new pv(f,p),e.bindMode!==void 0&&(l.bindMode=e.bindMode),e.bindMatrix!==void 0&&l.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(l.skeleton=e.skeleton);break;case"Mesh":f=c(e.geometry),p=u(e.material),l=new ln(f,p);break;case"InstancedMesh":f=c(e.geometry),p=u(e.material);const m=e.count,g=e.instanceMatrix,y=e.instanceColor;l=new mv(f,p,m),l.instanceMatrix=new To(new Float32Array(g.array),16),y!==void 0&&(l.instanceColor=new To(new Float32Array(y.array),y.itemSize));break;case"BatchedMesh":f=c(e.geometry),p=u(e.material),l=new gv(e.maxGeometryCount,e.maxVertexCount,e.maxIndexCount,p),l.geometry=f,l.perObjectFrustumCulled=e.perObjectFrustumCulled,l.sortObjects=e.sortObjects,l._drawRanges=e.drawRanges,l._reservedRanges=e.reservedRanges,l._visibility=e.visibility,l._active=e.active,l._bounds=e.bounds.map(M=>{const x=new zn;x.min.fromArray(M.boxMin),x.max.fromArray(M.boxMax);const v=new Ln;return v.radius=M.sphereRadius,v.center.fromArray(M.sphereCenter),{boxInitialized:M.boxInitialized,box:x,sphereInitialized:M.sphereInitialized,sphere:v}}),l._maxGeometryCount=e.maxGeometryCount,l._maxVertexCount=e.maxVertexCount,l._maxIndexCount=e.maxIndexCount,l._geometryInitialized=e.geometryInitialized,l._geometryCount=e.geometryCount,l._matricesTexture=h(e.matricesTexture.uuid);break;case"LOD":l=new dv;break;case"Line":l=new Nr(c(e.geometry),u(e.material));break;case"LineLoop":l=new _v(c(e.geometry),u(e.material));break;case"LineSegments":l=new Gi(c(e.geometry),u(e.material));break;case"PointCloud":case"Points":l=new vv(c(e.geometry),u(e.material));break;case"Sprite":l=new fv(u(e.material));break;case"Group":l=new _o;break;case"Bone":l=new Jd;break;default:l=new Lt}if(l.uuid=e.uuid,e.name!==void 0&&(l.name=e.name),e.matrix!==void 0?(l.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(l.matrixAutoUpdate=e.matrixAutoUpdate),l.matrixAutoUpdate&&l.matrix.decompose(l.position,l.quaternion,l.scale)):(e.position!==void 0&&l.position.fromArray(e.position),e.rotation!==void 0&&l.rotation.fromArray(e.rotation),e.quaternion!==void 0&&l.quaternion.fromArray(e.quaternion),e.scale!==void 0&&l.scale.fromArray(e.scale)),e.up!==void 0&&l.up.fromArray(e.up),e.castShadow!==void 0&&(l.castShadow=e.castShadow),e.receiveShadow!==void 0&&(l.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(l.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(l.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(l.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&l.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(l.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(l.visible=e.visible),e.frustumCulled!==void 0&&(l.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(l.renderOrder=e.renderOrder),e.userData!==void 0&&(l.userData=e.userData),e.layers!==void 0&&(l.layers.mask=e.layers),e.children!==void 0){const m=e.children;for(let g=0;g<m.length;g++)l.add(this.parseObject(m[g],t,n,i,s))}if(e.animations!==void 0){const m=e.animations;for(let g=0;g<m.length;g++){const y=m[g];l.animations.push(s[y])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(l.autoUpdate=e.autoUpdate);const m=e.levels;for(let g=0;g<m.length;g++){const y=m[g],M=l.getObjectByProperty("uuid",y.object);M!==void 0&&l.addLevel(M,y.distance,y.hysteresis)}}return l}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const AA={UVMapping:ou,CubeReflectionMapping:ar,CubeRefractionMapping:Ir,EquirectangularReflectionMapping:xa,EquirectangularRefractionMapping:Sa,CubeUVReflectionMapping:bo},c0={RepeatWrapping:Ma,ClampToEdgeWrapping:Cn,MirroredRepeatWrapping:Ea},u0={NearestFilter:Qt,NearestMipmapNearestFilter:$c,NearestMipmapLinearFilter:da,LinearFilter:$t,LinearMipmapNearestFilter:Ad,LinearMipmapLinearFilter:Dr};class bA extends Yn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,l=rr.get(e);if(l!==void 0){if(s.manager.itemStart(e),l.then){l.then(h=>{t&&t(h),s.manager.itemEnd(e)}).catch(h=>{i&&i(h)});return}return setTimeout(function(){t&&t(l),s.manager.itemEnd(e)},0),l}const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader;const u=fetch(e,c).then(function(h){return h.blob()}).then(function(h){return createImageBitmap(h,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(h){return rr.add(e,h),t&&t(h),s.manager.itemEnd(e),h}).catch(function(h){i&&i(h),rr.remove(e),s.manager.itemError(e),s.manager.itemEnd(e)});rr.add(e,u),s.manager.itemStart(e)}}let Dc;class up{static getContext(){return Dc===void 0&&(Dc=new(window.AudioContext||window.webkitAudioContext)),Dc}static setContext(e){Dc=e}}class CA extends Yn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new lr(this.manager);l.setResponseType("arraybuffer"),l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(u){try{const h=u.slice(0);up.getContext().decodeAudioData(h,function(p){t(p)}).catch(c)}catch(h){c(h)}},n,i);function c(u){i?i(u):console.error(u),s.manager.itemError(e)}}}const h0=new lt,f0=new lt,$r=new lt;class RA{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new en,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new en,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,$r.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,l=t.near*Math.tan(ps*t.fov*.5)/t.zoom;let c,u;f0.elements[12]=-i,h0.elements[12]=i,c=-l*t.aspect+s,u=l*t.aspect+s,$r.elements[0]=2*t.near/(u-c),$r.elements[8]=(u+c)/(u-c),this.cameraL.projectionMatrix.copy($r),c=-l*t.aspect-s,u=l*t.aspect-s,$r.elements[0]=2*t.near/(u-c),$r.elements[8]=(u+c)/(u-c),this.cameraR.projectionMatrix.copy($r)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(f0),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(h0)}}class hp{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=d0(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=d0();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function d0(){return(typeof performance>"u"?Date:performance).now()}const es=new U,p0=new Pn,PA=new U,ts=new U;class LA extends Lt{constructor(){super(),this.type="AudioListener",this.context=up.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new hp}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(es,p0,PA),ts.set(0,0,-1).applyQuaternion(p0),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(es.x,i),t.positionY.linearRampToValueAtTime(es.y,i),t.positionZ.linearRampToValueAtTime(es.z,i),t.forwardX.linearRampToValueAtTime(ts.x,i),t.forwardY.linearRampToValueAtTime(ts.y,i),t.forwardZ.linearRampToValueAtTime(ts.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(es.x,es.y,es.z),t.setOrientation(ts.x,ts.y,ts.z,n.x,n.y,n.z)}}class ey extends Lt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const ns=new U,m0=new Pn,IA=new U,is=new U;class DA extends ey{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(ns,m0,IA),is.set(0,0,1).applyQuaternion(m0);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(ns.x,n),t.positionY.linearRampToValueAtTime(ns.y,n),t.positionZ.linearRampToValueAtTime(ns.z,n),t.orientationX.linearRampToValueAtTime(is.x,n),t.orientationY.linearRampToValueAtTime(is.y,n),t.orientationZ.linearRampToValueAtTime(is.z,n)}else t.setPosition(ns.x,ns.y,ns.z),t.setOrientation(is.x,is.y,is.z)}}class NA{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class ty{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,l;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let l=this.cumulativeWeight;if(l===0){for(let c=0;c!==i;++c)n[s+c]=n[c];l=t}else{l+=t;const c=t/l;this._mixBufferRegion(n,s,0,c,i)}this.cumulativeWeight=l}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,l=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const u=t*this._origIndex;this._mixBufferRegion(n,i,u,1-s,t)}l>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let u=t,h=t+t;u!==h;++u)if(n[u]!==n[u+t]){c.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,l=i;s!==l;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let l=0;l!==s;++l)e[t+l]=e[n+l]}_slerp(e,t,n,i){Pn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const l=this._workIndex*s;Pn.multiplyQuaternionsFlat(e,l,e,t,e,n),Pn.slerpFlat(e,t,e,t,e,l,i)}_lerp(e,t,n,i,s){const l=1-i;for(let c=0;c!==s;++c){const u=t+c;e[u]=e[u]*l+e[n+c]*i}}_lerpAdditive(e,t,n,i,s){for(let l=0;l!==s;++l){const c=t+l;e[c]=e[c]+e[n+l]*i}}}const fp="\\[\\]\\.:\\/",UA=new RegExp("["+fp+"]","g"),dp="[^"+fp+"]",OA="[^"+fp.replace("\\.","")+"]",FA=/((?:WC+[\/:])*)/.source.replace("WC",dp),zA=/(WCOD+)?/.source.replace("WCOD",OA),BA=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",dp),kA=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",dp),HA=new RegExp("^"+FA+zA+BA+kA+"$"),VA=["material","materials","bones","map"];class GA{constructor(e,t,n){const i=n||bt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class bt{constructor(e,t,n){this.path=t,this.parsedPath=n||bt.parseTrackName(t),this.node=bt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new bt.Composite(e,t,n):new bt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(UA,"")}static parseTrackName(e){const t=HA.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);VA.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let l=0;l<s.length;l++){const c=s[l];if(c.name===t||c.uuid===t)return c;const u=n(c.children);if(u)return u}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=bt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let f=0;f<e.length;f++)if(e[f].name===h){h=f;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const l=e[i];if(l===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}u=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=s}else l.fromArray!==void 0&&l.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(u=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}bt.Composite=GA;bt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};bt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};bt.prototype.GetterByBindingType=[bt.prototype._getValue_direct,bt.prototype._getValue_array,bt.prototype._getValue_arrayElement,bt.prototype._getValue_toArray];bt.prototype.SetterByBindingTypeAndVersioning=[[bt.prototype._setValue_direct,bt.prototype._setValue_direct_setNeedsUpdate,bt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[bt.prototype._setValue_array,bt.prototype._setValue_array_setNeedsUpdate,bt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[bt.prototype._setValue_arrayElement,bt.prototype._setValue_arrayElement_setNeedsUpdate,bt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[bt.prototype._setValue_fromArray,bt.prototype._setValue_fromArray_setNeedsUpdate,bt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class WA{constructor(){this.isAnimationObjectGroup=!0,this.uuid=ti(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,l=s.length;let c,u=e.length,h=this.nCachedObjects_;for(let f=0,p=arguments.length;f!==p;++f){const m=arguments[f],g=m.uuid;let y=t[g];if(y===void 0){y=u++,t[g]=y,e.push(m);for(let M=0,x=l;M!==x;++M)s[M].push(new bt(m,n[M],i[M]))}else if(y<h){c=e[y];const M=--h,x=e[M];t[x.uuid]=y,e[y]=x,t[g]=M,e[M]=m;for(let v=0,w=l;v!==w;++v){const E=s[v],A=E[M];let L=E[y];E[y]=A,L===void 0&&(L=new bt(m,n[v],i[v])),E[M]=L}}else e[y]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let l=0,c=arguments.length;l!==c;++l){const u=arguments[l],h=u.uuid,f=t[h];if(f!==void 0&&f>=s){const p=s++,m=e[p];t[m.uuid]=f,e[f]=m,t[h]=p,e[p]=u;for(let g=0,y=i;g!==y;++g){const M=n[g],x=M[p],v=M[f];M[f]=x,M[p]=v}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,l=e.length;for(let c=0,u=arguments.length;c!==u;++c){const h=arguments[c],f=h.uuid,p=t[f];if(p!==void 0)if(delete t[f],p<s){const m=--s,g=e[m],y=--l,M=e[y];t[g.uuid]=p,e[p]=g,t[M.uuid]=m,e[m]=M,e.pop();for(let x=0,v=i;x!==v;++x){const w=n[x],E=w[m],A=w[y];w[p]=E,w[m]=A,w.pop()}}else{const m=--l,g=e[m];m>0&&(t[g.uuid]=p),e[p]=g,e.pop();for(let y=0,M=i;y!==M;++y){const x=n[y];x[p]=x[m],x.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const l=this._paths,c=this._parsedPaths,u=this._objects,h=u.length,f=this.nCachedObjects_,p=new Array(h);i=s.length,n[e]=i,l.push(e),c.push(t),s.push(p);for(let m=f,g=u.length;m!==g;++m){const y=u[m];p[m]=new bt(y,e,t)}return p}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,l=this._bindings,c=l.length-1,u=l[c],h=e[c];t[h]=n,l[n]=u,l.pop(),s[n]=s[c],s.pop(),i[n]=i[c],i.pop()}}}class ny{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,l=s.length,c=new Array(l),u={endingStart:cs,endingEnd:cs};for(let h=0;h!==l;++h){const f=s[h].createInterpolant(null);c[h]=f,f.settings=u}this._interpolantSettings=u,this._interpolants=c,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=O_,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,l=s/i,c=i/s;e.warp(1,l,t),this.warp(c,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,l=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const u=c.parameterPositions,h=c.sampleValues;return u[0]=s,u[1]=s+n,h[0]=e/l,h[1]=t/l,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const u=(e-s)*n;u<0||n===0?t=0:(this._startTime=null,t=n*u)}t*=this._updateTimeScale(e);const l=this._updateTime(t),c=this._updateWeight(e);if(c>0){const u=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case Nd:for(let f=0,p=u.length;f!==p;++f)u[f].evaluate(l),h[f].accumulateAdditive(c);break;case lu:default:for(let f=0,p=u.length;f!==p;++f)u[f].evaluate(l),h[f].accumulate(i,c)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const l=n===F_;if(e===0)return s===-1?i:l&&(s&1)===1?t-i:i;if(n===U_){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,l)):this._setEndings(this.repetitions===0,!0,l)),i>=t||i<0){const c=Math.floor(i/t);i-=t*c,s+=Math.abs(c);const u=this.repetitions-s;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const h=e<0;this._setEndings(h,!h,l)}else this._setEndings(!1,!1,l);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(l&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=us,i.endingEnd=us):(e?i.endingStart=this.zeroSlopeAtStart?us:cs:i.endingStart=Aa,t?i.endingEnd=this.zeroSlopeAtEnd?us:cs:i.endingEnd=Aa)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let l=this._weightInterpolant;l===null&&(l=i._lendControlInterpolant(),this._weightInterpolant=l);const c=l.parameterPositions,u=l.sampleValues;return c[0]=s,u[0]=t,c[1]=s+e,u[1]=n,this}}const XA=new Float32Array(1);class YA extends cr{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,l=e._propertyBindings,c=e._interpolants,u=n.uuid,h=this._bindingsByRootAndName;let f=h[u];f===void 0&&(f={},h[u]=f);for(let p=0;p!==s;++p){const m=i[p],g=m.name;let y=f[g];if(y!==void 0)++y.referenceCount,l[p]=y;else{if(y=l[p],y!==void 0){y._cacheIndex===null&&(++y.referenceCount,this._addInactiveBinding(y,u,g));continue}const M=t&&t._propertyBindings[p].binding.parsedPath;y=new ty(bt.create(n,g,M),m.ValueTypeName,m.getValueSize()),++y.referenceCount,this._addInactiveBinding(y,u,g),l[p]=y}c[p].resultBuffer=y.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let l=s[t];if(l===void 0)l={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=l;else{const c=l.knownActions;e._byClipCacheIndex=c.length,c.push(e)}e._cacheIndex=i.length,i.push(e),l.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,l=this._actionsByClip,c=l[s],u=c.knownActions,h=u[u.length-1],f=e._byClipCacheIndex;h._byClipCacheIndex=f,u[f]=h,u.pop(),e._byClipCacheIndex=null;const p=c.actionByRoot,m=(e._localRoot||this._root).uuid;delete p[m],u.length===0&&delete l[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let l=i[t];l===void 0&&(l={},i[t]=l),l[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,l=this._bindingsByRootAndName,c=l[i],u=t[t.length-1],h=e._cacheIndex;u._cacheIndex=h,t[h]=u,t.pop(),delete c[s],Object.keys(c).length===0&&delete l[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new op(new Float32Array(2),new Float32Array(2),1,XA),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let l=typeof e=="string"?za.findByName(i,e):e;const c=l!==null?l.uuid:e,u=this._actionsByClip[c];let h=null;if(n===void 0&&(l!==null?n=l.blendMode:n=lu),u!==void 0){const p=u.actionByRoot[s];if(p!==void 0&&p.blendMode===n)return p;h=u.knownActions[0],l===null&&(l=h._clip)}if(l===null)return null;const f=new ny(this,l,t,n);return this._bindAction(f,h),this._addInactiveAction(f,c,s),f}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?za.findByName(n,e):e,l=s?s.uuid:e,c=this._actionsByClip[l];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),l=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,s,l);const c=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)c[h].apply(l);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const l=s.knownActions;for(let c=0,u=l.length;c!==u;++c){const h=l[c];this._deactivateAction(h);const f=h._cacheIndex,p=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,p._cacheIndex=f,t[f]=p,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const l in n){const c=n[l].actionByRoot,u=c[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const l in s){const c=s[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class pp{constructor(e){this.value=e}clone(){return new pp(this.value.clone===void 0?this.value:this.value.clone())}}let qA=0;class ZA extends cr{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:qA++}),this.name="",this.usage=Pa,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++){const s=Array.isArray(t[n])?t[n]:[t[n]];for(let l=0;l<s.length;l++)this.uniforms.push(s[l].clone())}return this}clone(){return new this.constructor().copy(this)}}class jA extends pu{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class JA{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class iy{constructor(e,t,n=0,i=1/0){this.ray=new Ss(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new ms,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return Sd(e,this,n,t),n.sort(g0),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)Sd(e[i],this,n,t);return n.sort(g0),n}}function g0(r,e){return r.distance-e.distance}function Sd(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),n===!0){const i=r.children;for(let s=0,l=i.length;s<l;s++)Sd(i[s],e,t,!0)}}class Md{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Zt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class KA{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const _0=new he;class QA{constructor(e=new he(1/0,1/0),t=new he(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=_0.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,_0).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const v0=new U,Nc=new U;class $A{constructor(e=new U,t=new U){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){v0.subVectors(e,this.start),Nc.subVectors(this.end,this.start);const n=Nc.dot(Nc);let s=Nc.dot(v0)/n;return t&&(s=Zt(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const y0=new U;class eb extends Lt{constructor(e,t){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new xt,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let l=0,c=1,u=32;l<u;l++,c++){const h=l/u*Math.PI*2,f=c/u*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(f),Math.sin(f),1)}n.setAttribute("position",new Xe(i,3));const s=new Bn({fog:!1,toneMapped:!1});this.cone=new Gi(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),y0.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(y0),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Tr=new U,Uc=new lt,Sf=new lt;class tb extends Gi{constructor(e){const t=ry(e),n=new xt,i=[],s=[],l=new Ue(0,0,1),c=new Ue(0,1,0);for(let h=0;h<t.length;h++){const f=t[h];f.parent&&f.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(l.r,l.g,l.b),s.push(c.r,c.g,c.b))}n.setAttribute("position",new Xe(i,3)),n.setAttribute("color",new Xe(s,3));const u=new Bn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Sf.copy(this.root.matrixWorld).invert();for(let s=0,l=0;s<t.length;s++){const c=t[s];c.parent&&c.parent.isBone&&(Uc.multiplyMatrices(Sf,c.matrixWorld),Tr.setFromMatrixPosition(Uc),i.setXYZ(l,Tr.x,Tr.y,Tr.z),Uc.multiplyMatrices(Sf,c.parent.matrixWorld),Tr.setFromMatrixPosition(Uc),i.setXYZ(l+1,Tr.x,Tr.y,Tr.z),l+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function ry(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,ry(r.children[t]));return e}class nb extends ln{constructor(e,t,n){const i=new Ja(t,4,2),s=new Or({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const ib=new U,x0=new Ue,S0=new Ue;class rb extends Lt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new ja(t);i.rotateY(Math.PI*.5),this.material=new Or({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),l=new Float32Array(s.count*3);i.setAttribute("color",new Nt(l,3)),this.add(new ln(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");x0.copy(this.light.color),S0.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?x0:S0;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(ib.setFromMatrixPosition(this.light.matrixWorld).negate())}}class sb extends Gi{constructor(e=10,t=10,n=4473924,i=8947848){n=new Ue(n),i=new Ue(i);const s=t/2,l=e/t,c=e/2,u=[],h=[];for(let m=0,g=0,y=-c;m<=t;m++,y+=l){u.push(-c,0,y,c,0,y),u.push(y,0,-c,y,0,c);const M=m===s?n:i;M.toArray(h,g),g+=3,M.toArray(h,g),g+=3,M.toArray(h,g),g+=3,M.toArray(h,g),g+=3}const f=new xt;f.setAttribute("position",new Xe(u,3)),f.setAttribute("color",new Xe(h,3));const p=new Bn({vertexColors:!0,toneMapped:!1});super(f,p),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class ob extends Gi{constructor(e=10,t=16,n=8,i=64,s=4473924,l=8947848){s=new Ue(s),l=new Ue(l);const c=[],u=[];if(t>1)for(let p=0;p<t;p++){const m=p/t*(Math.PI*2),g=Math.sin(m)*e,y=Math.cos(m)*e;c.push(0,0,0),c.push(g,0,y);const M=p&1?s:l;u.push(M.r,M.g,M.b),u.push(M.r,M.g,M.b)}for(let p=0;p<n;p++){const m=p&1?s:l,g=e-e/n*p;for(let y=0;y<i;y++){let M=y/i*(Math.PI*2),x=Math.sin(M)*g,v=Math.cos(M)*g;c.push(x,0,v),u.push(m.r,m.g,m.b),M=(y+1)/i*(Math.PI*2),x=Math.sin(M)*g,v=Math.cos(M)*g,c.push(x,0,v),u.push(m.r,m.g,m.b)}}const h=new xt;h.setAttribute("position",new Xe(c,3)),h.setAttribute("color",new Xe(u,3));const f=new Bn({vertexColors:!0,toneMapped:!1});super(h,f),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const M0=new U,Oc=new U,E0=new U;class ab extends Lt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new xt;i.setAttribute("position",new Xe([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Bn({fog:!1,toneMapped:!1});this.lightPlane=new Nr(i,s),this.add(this.lightPlane),i=new xt,i.setAttribute("position",new Xe([0,0,0,0,0,1],3)),this.targetLine=new Nr(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),M0.setFromMatrixPosition(this.light.matrixWorld),Oc.setFromMatrixPosition(this.light.target.matrixWorld),E0.subVectors(Oc,M0),this.lightPlane.lookAt(Oc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Oc),this.targetLine.scale.z=E0.length()}}const Fc=new U,qt=new Wa;class lb extends Gi{constructor(e){const t=new xt,n=new Bn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],l={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(y,M){u(y),u(M)}function u(y){i.push(0,0,0),s.push(0,0,0),l[y]===void 0&&(l[y]=[]),l[y].push(i.length/3-1)}t.setAttribute("position",new Xe(i,3)),t.setAttribute("color",new Xe(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=l,this.update();const h=new Ue(16755200),f=new Ue(16711680),p=new Ue(43775),m=new Ue(16777215),g=new Ue(3355443);this.setColors(h,f,p,m,g)}setColors(e,t,n,i,s){const c=this.geometry.getAttribute("color");c.setXYZ(0,e.r,e.g,e.b),c.setXYZ(1,e.r,e.g,e.b),c.setXYZ(2,e.r,e.g,e.b),c.setXYZ(3,e.r,e.g,e.b),c.setXYZ(4,e.r,e.g,e.b),c.setXYZ(5,e.r,e.g,e.b),c.setXYZ(6,e.r,e.g,e.b),c.setXYZ(7,e.r,e.g,e.b),c.setXYZ(8,e.r,e.g,e.b),c.setXYZ(9,e.r,e.g,e.b),c.setXYZ(10,e.r,e.g,e.b),c.setXYZ(11,e.r,e.g,e.b),c.setXYZ(12,e.r,e.g,e.b),c.setXYZ(13,e.r,e.g,e.b),c.setXYZ(14,e.r,e.g,e.b),c.setXYZ(15,e.r,e.g,e.b),c.setXYZ(16,e.r,e.g,e.b),c.setXYZ(17,e.r,e.g,e.b),c.setXYZ(18,e.r,e.g,e.b),c.setXYZ(19,e.r,e.g,e.b),c.setXYZ(20,e.r,e.g,e.b),c.setXYZ(21,e.r,e.g,e.b),c.setXYZ(22,e.r,e.g,e.b),c.setXYZ(23,e.r,e.g,e.b),c.setXYZ(24,t.r,t.g,t.b),c.setXYZ(25,t.r,t.g,t.b),c.setXYZ(26,t.r,t.g,t.b),c.setXYZ(27,t.r,t.g,t.b),c.setXYZ(28,t.r,t.g,t.b),c.setXYZ(29,t.r,t.g,t.b),c.setXYZ(30,t.r,t.g,t.b),c.setXYZ(31,t.r,t.g,t.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,s.r,s.g,s.b),c.setXYZ(41,s.r,s.g,s.b),c.setXYZ(42,s.r,s.g,s.b),c.setXYZ(43,s.r,s.g,s.b),c.setXYZ(44,s.r,s.g,s.b),c.setXYZ(45,s.r,s.g,s.b),c.setXYZ(46,s.r,s.g,s.b),c.setXYZ(47,s.r,s.g,s.b),c.setXYZ(48,s.r,s.g,s.b),c.setXYZ(49,s.r,s.g,s.b),c.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;qt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Kt("c",t,e,qt,0,0,-1),Kt("t",t,e,qt,0,0,1),Kt("n1",t,e,qt,-1,-1,-1),Kt("n2",t,e,qt,n,-1,-1),Kt("n3",t,e,qt,-1,i,-1),Kt("n4",t,e,qt,n,i,-1),Kt("f1",t,e,qt,-1,-1,1),Kt("f2",t,e,qt,n,-1,1),Kt("f3",t,e,qt,-1,i,1),Kt("f4",t,e,qt,n,i,1),Kt("u1",t,e,qt,n*.7,i*1.1,-1),Kt("u2",t,e,qt,-1*.7,i*1.1,-1),Kt("u3",t,e,qt,0,i*2,-1),Kt("cf1",t,e,qt,-1,0,1),Kt("cf2",t,e,qt,n,0,1),Kt("cf3",t,e,qt,0,-1,1),Kt("cf4",t,e,qt,0,i,1),Kt("cn1",t,e,qt,-1,0,-1),Kt("cn2",t,e,qt,n,0,-1),Kt("cn3",t,e,qt,0,-1,-1),Kt("cn4",t,e,qt,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Kt(r,e,t,n,i,s,l){Fc.set(i,s,l).unproject(n);const c=e[r];if(c!==void 0){const u=t.getAttribute("position");for(let h=0,f=c.length;h<f;h++)u.setXYZ(c[h],Fc.x,Fc.y,Fc.z)}}const zc=new zn;class cb extends Gi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new xt;s.setIndex(new Nt(n,1)),s.setAttribute("position",new Nt(i,3)),super(s,new Bn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&zc.setFromObject(this.object),zc.isEmpty())return;const t=zc.min,n=zc.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class ub extends Gi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new xt;s.setIndex(new Nt(n,1)),s.setAttribute("position",new Xe(i,3)),super(s,new Bn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class hb extends Nr{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],l=new xt;l.setAttribute("position",new Xe(s,3)),l.computeBoundingSphere(),super(l,new Bn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new xt;u.setAttribute("position",new Xe(c,3)),u.computeBoundingSphere(),this.add(new ln(u,new Or({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const w0=new U;let Bc,Mf;class fb extends Lt{constructor(e=new U(0,0,1),t=new U(0,0,0),n=1,i=16776960,s=n*.2,l=s*.2){super(),this.type="ArrowHelper",Bc===void 0&&(Bc=new xt,Bc.setAttribute("position",new Xe([0,0,0,0,1,0],3)),Mf=new Ro(0,.5,1,5,1),Mf.translate(0,-.5,0)),this.position.copy(t),this.line=new Nr(Bc,new Bn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new ln(Mf,new Or({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,l)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{w0.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(w0,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class db extends Gi{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new xt;i.setAttribute("position",new Xe(t,3)),i.setAttribute("color",new Xe(n,3));const s=new Bn({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new Ue,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class pb{constructor(){this.type="ShapePath",this.color=new Ue,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Ia,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,l){return this.currentPath.bezierCurveTo(e,t,n,i,s,l),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(v){const w=[];for(let E=0,A=v.length;E<A;E++){const L=v[E],C=new _s;C.curves=L.curves,w.push(C)}return w}function n(v,w){const E=w.length;let A=!1;for(let L=E-1,C=0;C<E;L=C++){let I=w[L],z=w[C],b=z.x-I.x,R=z.y-I.y;if(Math.abs(R)>Number.EPSILON){if(R<0&&(I=w[C],b=-b,z=w[L],R=-R),v.y<I.y||v.y>z.y)continue;if(v.y===I.y){if(v.x===I.x)return!0}else{const B=R*(v.x-I.x)-b*(v.y-I.y);if(B===0)return!0;if(B<0)continue;A=!A}}else{if(v.y!==I.y)continue;if(z.x<=v.x&&v.x<=I.x||I.x<=v.x&&v.x<=z.x)return!0}}return A}const i=Hi.isClockWise,s=this.subPaths;if(s.length===0)return[];let l,c,u;const h=[];if(s.length===1)return c=s[0],u=new _s,u.curves=c.curves,h.push(u),h;let f=!i(s[0].getPoints());f=e?!f:f;const p=[],m=[];let g=[],y=0,M;m[y]=void 0,g[y]=[];for(let v=0,w=s.length;v<w;v++)c=s[v],M=c.getPoints(),l=i(M),l=e?!l:l,l?(!f&&m[y]&&y++,m[y]={s:new _s,p:M},m[y].s.curves=c.curves,f&&y++,g[y]=[]):g[y].push({h:c,p:M[0]});if(!m[0])return t(s);if(m.length>1){let v=!1,w=0;for(let E=0,A=m.length;E<A;E++)p[E]=[];for(let E=0,A=m.length;E<A;E++){const L=g[E];for(let C=0;C<L.length;C++){const I=L[C];let z=!0;for(let b=0;b<m.length;b++)n(I.p,m[b].p)&&(E!==b&&w++,z?(z=!1,p[b].push(I)):v=!0);z&&p[E].push(I)}}w>0&&v===!1&&(g=p)}let x;for(let v=0,w=m.length;v<w;v++){u=m[v].s,h.push(u),x=g[v];for(let E=0,A=x.length;E<A;E++)u.holes.push(x[E].h)}return h}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:ka}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=ka);const mb=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Td,AddEquation:br,AddOperation:x_,AdditiveAnimationBlendMode:Nd,AdditiveBlending:Nf,AgXToneMapping:T_,AlphaFormat:R_,AlwaysCompare:q_,AlwaysDepth:d_,AlwaysStencilFunc:hd,AmbientLight:Zv,AnimationAction:ny,AnimationClip:za,AnimationLoader:_A,AnimationMixer:YA,AnimationObjectGroup:WA,AnimationUtils:dA,ArcCurve:yv,ArrayCamera:cv,ArrowHelper:fb,AttachedBindMode:Bf,Audio:ey,AudioAnalyser:NA,AudioContext:up,AudioListener:LA,AudioLoader:CA,AxesHelper:db,BackSide:Rn,BasicDepthPacking:z_,BasicShadowMap:j0,BatchedMesh:gv,Bone:Jd,BooleanKeyframeTrack:Es,Box2:QA,Box3:zn,Box3Helper:ub,BoxGeometry:Ms,BoxHelper:cb,BufferAttribute:Nt,BufferGeometry:xt,BufferGeometryLoader:$v,ByteType:b_,Cache:rr,Camera:Wa,CameraHelper:lb,CanvasTexture:FT,CapsuleGeometry:vu,CatmullRomCurve3:xv,CineonToneMapping:E_,CircleGeometry:yu,ClampToEdgeWrapping:Cn,Clock:hp,Color:Ue,ColorKeyframeTrack:ap,ColorManagement:It,CompressedArrayTexture:UT,CompressedCubeTexture:OT,CompressedTexture:gu,CompressedTextureLoader:vA,ConeGeometry:xu,ConstantAlphaFactor:u_,ConstantColorFactor:l_,CubeCamera:ev,CubeReflectionMapping:ar,CubeRefractionMapping:Ir,CubeTexture:Xa,CubeTextureLoader:yA,CubeUVReflectionMapping:bo,CubicBezierCurve:$d,CubicBezierCurve3:Sv,CubicInterpolant:kv,CullFaceBack:Df,CullFaceFront:Z0,CullFaceFrontBack:Tx,CullFaceNone:q0,Curve:Ai,CurvePath:Ev,CustomBlending:J0,CustomToneMapping:w_,CylinderGeometry:Ro,Cylindrical:KA,Data3DTexture:Bd,DataArrayTexture:uu,DataTexture:gs,DataTextureLoader:xA,DataUtils:NS,DecrementStencilOp:Fx,DecrementWrapStencilOp:Bx,DefaultLoadingManager:Gv,DepthFormat:Rr,DepthStencilFormat:vs,DepthTexture:Wd,DetachedBindMode:A_,DirectionalLight:qv,DirectionalLightHelper:ab,DiscreteInterpolant:Hv,DisplayP3ColorSpace:cu,DodecahedronGeometry:Su,DoubleSide:zi,DstAlphaFactor:i_,DstColorFactor:s_,DynamicCopyUsage:eS,DynamicDrawUsage:Zx,DynamicReadUsage:Kx,EdgesGeometry:wv,EllipseCurve:_u,EqualCompare:G_,EqualDepth:m_,EqualStencilFunc:Gx,EquirectangularReflectionMapping:xa,EquirectangularRefractionMapping:Sa,Euler:Ga,EventDispatcher:cr,ExtrudeGeometry:Eu,FileLoader:lr,Float16BufferAttribute:kS,Float32BufferAttribute:Xe,Float64BufferAttribute:HS,FloatType:Mi,Fog:du,FogExp2:fu,FramebufferTexture:NT,FrontSide:or,Frustum:Ya,GLBufferAttribute:JA,GLSL1:nS,GLSL3:fd,GreaterCompare:W_,GreaterDepth:__,GreaterEqualCompare:Y_,GreaterEqualDepth:g_,GreaterEqualStencilFunc:qx,GreaterStencilFunc:Xx,GridHelper:sb,Group:_o,HalfFloatType:So,HemisphereLight:Wv,HemisphereLightHelper:rb,IcosahedronGeometry:wu,ImageBitmapLoader:bA,ImageLoader:Ba,ImageUtils:zd,IncrementStencilOp:Ox,IncrementWrapStencilOp:zx,InstancedBufferAttribute:To,InstancedBufferGeometry:Qv,InstancedInterleavedBuffer:jA,InstancedMesh:mv,Int16BufferAttribute:zS,Int32BufferAttribute:BS,Int8BufferAttribute:US,IntType:bd,InterleavedBuffer:pu,InterleavedBufferAttribute:ys,Interpolant:Ka,InterpolateDiscrete:wa,InterpolateLinear:Ta,InterpolateSmooth:Zc,InvertStencilOp:kx,KeepStencilOp:os,KeyframeTrack:bi,LOD:dv,LatheGeometry:Za,Layers:ms,LessCompare:V_,LessDepth:p_,LessEqualCompare:Od,LessEqualDepth:ya,LessEqualStencilFunc:Wx,LessStencilFunc:Vx,Light:zr,LightProbe:Kv,Line:Nr,Line3:$A,LineBasicMaterial:Bn,LineCurve:ep,LineCurve3:Mv,LineDashedMaterial:Fv,LineLoop:_v,LineSegments:Gi,LinearDisplayP3ColorSpace:Va,LinearEncoding:Ud,LinearFilter:$t,LinearInterpolant:op,LinearMipMapLinearFilter:Px,LinearMipMapNearestFilter:Rx,LinearMipmapLinearFilter:Dr,LinearMipmapNearestFilter:Ad,LinearSRGBColorSpace:Vi,LinearToneMapping:S_,LinearTransfer:ba,Loader:Yn,LoaderUtils:xd,LoadingManager:lp,LoopOnce:U_,LoopPingPong:F_,LoopRepeat:O_,LuminanceAlphaFormat:L_,LuminanceFormat:P_,MOUSE:rs,Material:In,MaterialLoader:Lu,MathUtils:Z_,Matrix3:yt,Matrix4:lt,MaxEquation:zf,Mesh:ln,MeshBasicMaterial:Or,MeshDepthMaterial:Xd,MeshDistanceMaterial:Yd,MeshLambertMaterial:Uv,MeshMatcapMaterial:Ov,MeshNormalMaterial:Nv,MeshPhongMaterial:Iv,MeshPhysicalMaterial:Lv,MeshStandardMaterial:rp,MeshToonMaterial:Dv,MinEquation:Ff,MirroredRepeatWrapping:Ea,MixOperation:y_,MultiplyBlending:Of,MultiplyOperation:Ha,NearestFilter:Qt,NearestMipMapLinearFilter:Cx,NearestMipMapNearestFilter:bx,NearestMipmapLinearFilter:da,NearestMipmapNearestFilter:$c,NeverCompare:H_,NeverDepth:f_,NeverStencilFunc:Hx,NoBlending:sr,NoColorSpace:ei,NoToneMapping:Bi,NormalAnimationBlendMode:lu,NormalBlending:ds,NotEqualCompare:X_,NotEqualDepth:v_,NotEqualStencilFunc:Yx,NumberKeyframeTrack:Oa,Object3D:Lt,ObjectLoader:TA,ObjectSpaceNormalMap:k_,OctahedronGeometry:ja,OneFactor:e_,OneMinusConstantAlphaFactor:h_,OneMinusConstantColorFactor:c_,OneMinusDstAlphaFactor:r_,OneMinusDstColorFactor:o_,OneMinusSrcAlphaFactor:Qc,OneMinusSrcColorFactor:n_,OrthographicCamera:Lr,P3Primaries:Ra,PCFShadowMap:su,PCFSoftShadowMap:fa,PMREMGenerator:pd,Path:Ia,PerspectiveCamera:en,Plane:Fi,PlaneGeometry:qa,PlaneHelper:hb,PointLight:Yv,PointLightHelper:nb,Points:vv,PointsMaterial:Kd,PolarGridHelper:ob,PolyhedronGeometry:Fr,PositionalAudio:DA,PropertyBinding:bt,PropertyMixer:ty,QuadraticBezierCurve:tp,QuadraticBezierCurve3:np,Quaternion:Pn,QuaternionKeyframeTrack:Po,QuaternionLinearInterpolant:Vv,RED_GREEN_RGTC2_Format:cd,RED_RGTC1_Format:N_,REVISION:ka,RGBADepthPacking:B_,RGBAFormat:Fn,RGBAIntegerFormat:Id,RGBA_ASTC_10x10_Format:id,RGBA_ASTC_10x5_Format:ed,RGBA_ASTC_10x6_Format:td,RGBA_ASTC_10x8_Format:nd,RGBA_ASTC_12x10_Format:rd,RGBA_ASTC_12x12_Format:sd,RGBA_ASTC_4x4_Format:Yf,RGBA_ASTC_5x4_Format:qf,RGBA_ASTC_5x5_Format:Zf,RGBA_ASTC_6x5_Format:jf,RGBA_ASTC_6x6_Format:Jf,RGBA_ASTC_8x5_Format:Kf,RGBA_ASTC_8x6_Format:Qf,RGBA_ASTC_8x8_Format:$f,RGBA_BPTC_Format:qc,RGBA_ETC2_EAC_Format:Xf,RGBA_PVRTC_2BPPV1_Format:Gf,RGBA_PVRTC_4BPPV1_Format:Vf,RGBA_S3TC_DXT1_Format:Wc,RGBA_S3TC_DXT3_Format:Xc,RGBA_S3TC_DXT5_Format:Yc,RGB_BPTC_SIGNED_Format:od,RGB_BPTC_UNSIGNED_Format:ad,RGB_ETC1_Format:Dd,RGB_ETC2_Format:Wf,RGB_PVRTC_2BPPV1_Format:Hf,RGB_PVRTC_4BPPV1_Format:kf,RGB_S3TC_DXT1_Format:Gc,RGFormat:D_,RGIntegerFormat:Ld,RawShaderMaterial:Pv,Ray:Ss,Raycaster:iy,Rec709Primaries:Ca,RectAreaLight:jv,RedFormat:I_,RedIntegerFormat:Pd,ReinhardToneMapping:M_,RenderTarget:K_,RepeatWrapping:Ma,ReplaceStencilOp:Ux,ReverseSubtractEquation:Q0,RingGeometry:Tu,SIGNED_RED_GREEN_RGTC2_Format:ud,SIGNED_RED_RGTC1_Format:ld,SRGBColorSpace:an,SRGBTransfer:Ft,Scene:Zd,ShaderChunk:gt,ShaderLib:Si,ShaderMaterial:Ti,ShadowMaterial:Rv,Shape:_s,ShapeGeometry:Au,ShapePath:pb,ShapeUtils:Hi,ShortType:C_,Skeleton:mu,SkeletonHelper:tb,SkinnedMesh:pv,Source:hs,Sphere:Ln,SphereGeometry:Ja,Spherical:Md,SphericalHarmonics3:Jv,SplineCurve:ip,SpotLight:Xv,SpotLightHelper:eb,Sprite:fv,SpriteMaterial:jd,SrcAlphaFactor:Kc,SrcAlphaSaturateFactor:a_,SrcColorFactor:t_,StaticCopyUsage:$x,StaticDrawUsage:Pa,StaticReadUsage:Jx,StereoCamera:RA,StreamCopyUsage:tS,StreamDrawUsage:jx,StreamReadUsage:Qx,StringKeyframeTrack:ws,SubtractEquation:K0,SubtractiveBlending:Uf,TOUCH:ss,TangentSpaceNormalMap:Ur,TetrahedronGeometry:bu,Texture:tn,TextureLoader:SA,TorusGeometry:Cu,TorusKnotGeometry:Ru,Triangle:Wn,TriangleFanDrawMode:Dx,TriangleStripDrawMode:Ix,TrianglesDrawMode:Lx,TubeGeometry:Pu,TwoPassDoubleSide:Ax,UVMapping:ou,Uint16BufferAttribute:kd,Uint32BufferAttribute:Hd,Uint8BufferAttribute:OS,Uint8ClampedBufferAttribute:FS,Uniform:pp,UniformsGroup:ZA,UniformsLib:Te,UniformsUtils:Vd,UnsignedByteType:ki,UnsignedInt248Type:Cr,UnsignedIntType:ir,UnsignedShort4444Type:Cd,UnsignedShort5551Type:Rd,UnsignedShortType:au,VSMShadowMap:yi,Vector2:he,Vector3:U,Vector4:Dt,VectorKeyframeTrack:Fa,VideoTexture:DT,WebGL1Renderer:uv,WebGL3DRenderTarget:MS,WebGLArrayRenderTarget:SS,WebGLCoordinateSystem:Ei,WebGLCubeRenderTarget:tv,WebGLMultipleRenderTargets:ES,WebGLRenderTarget:wi,WebGLRenderer:qd,WebGLUtils:lv,WebGPUCoordinateSystem:Mo,WireframeGeometry:Cv,WrapAroundEnding:Aa,ZeroCurvatureEnding:cs,ZeroFactor:$0,ZeroSlopeEnding:us,ZeroStencilOp:Nx,_SRGBAFormat:eu,createCanvasElement:J_,sRGBEncoding:Pr},Symbol.toStringTag,{value:"Module"}));var sy={exports:{}},Ts={};/**
 * @license React
 * react-reconciler-constants.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Ts.ConcurrentRoot=1;Ts.ContinuousEventPriority=4;Ts.DefaultEventPriority=16;Ts.DiscreteEventPriority=1;Ts.IdleEventPriority=536870912;Ts.LegacyRoot=0;sy.exports=Ts;var yo=sy.exports;function gb(r){let e;const t=new Set,n=(h,f)=>{const p=typeof h=="function"?h(e):h;if(p!==e){const m=e;e=f?p:Object.assign({},e,p),t.forEach(g=>g(e,m))}},i=()=>e,s=(h,f=i,p=Object.is)=>{console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");let m=f(e);function g(){const y=f(e);if(!p(m,y)){const M=m;h(m=y,M)}}return t.add(g),()=>t.delete(g)},u={setState:n,getState:i,subscribe:(h,f,p)=>f||p?s(h,f,p):(t.add(h),()=>t.delete(h)),destroy:()=>t.clear()};return e=r(n,i,u),u}const _b=typeof window>"u"||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent),T0=_b?Be.useEffect:Be.useLayoutEffect;function vb(r){const e=typeof r=="function"?gb(r):r,t=(n=e.getState,i=Object.is)=>{const[,s]=Be.useReducer(x=>x+1,0),l=e.getState(),c=Be.useRef(l),u=Be.useRef(n),h=Be.useRef(i),f=Be.useRef(!1),p=Be.useRef();p.current===void 0&&(p.current=n(l));let m,g=!1;(c.current!==l||u.current!==n||h.current!==i||f.current)&&(m=n(l),g=!i(p.current,m)),T0(()=>{g&&(p.current=m),c.current=l,u.current=n,h.current=i,f.current=!1});const y=Be.useRef(l);T0(()=>{const x=()=>{try{const w=e.getState(),E=u.current(w);h.current(p.current,E)||(c.current=w,p.current=E,s())}catch{f.current=!0,s()}},v=e.subscribe(x);return e.getState()!==y.current&&x(),v},[]);const M=g?m:p.current;return Be.useDebugValue(M),M};return Object.assign(t,e),t[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");const n=[t,e];return{next(){const i=n.length<=0;return{value:n.shift(),done:i}}}},t}var oy={exports:{}},Ef={exports:{}},wf={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var A0;function yb(){return A0||(A0=1,function(r){function e(F,H){var X=F.length;F.push(H);e:for(;0<X;){var Z=X-1>>>1,le=F[Z];if(0<i(le,H))F[Z]=H,F[X]=le,X=Z;else break e}}function t(F){return F.length===0?null:F[0]}function n(F){if(F.length===0)return null;var H=F[0],X=F.pop();if(X!==H){F[0]=X;e:for(var Z=0,le=F.length,J=le>>>1;Z<J;){var ce=2*(Z+1)-1,Me=F[ce],be=ce+1,Ae=F[be];if(0>i(Me,X))be<le&&0>i(Ae,Me)?(F[Z]=Ae,F[be]=X,Z=be):(F[Z]=Me,F[ce]=X,Z=ce);else if(be<le&&0>i(Ae,X))F[Z]=Ae,F[be]=X,Z=be;else break e}}return H}function i(F,H){var X=F.sortIndex-H.sortIndex;return X!==0?X:F.id-H.id}if(typeof performance=="object"&&typeof performance.now=="function"){var s=performance;r.unstable_now=function(){return s.now()}}else{var l=Date,c=l.now();r.unstable_now=function(){return l.now()-c}}var u=[],h=[],f=1,p=null,m=3,g=!1,y=!1,M=!1,x=typeof setTimeout=="function"?setTimeout:null,v=typeof clearTimeout=="function"?clearTimeout:null,w=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function E(F){for(var H=t(h);H!==null;){if(H.callback===null)n(h);else if(H.startTime<=F)n(h),H.sortIndex=H.expirationTime,e(u,H);else break;H=t(h)}}function A(F){if(M=!1,E(F),!y)if(t(u)!==null)y=!0,te(L);else{var H=t(h);H!==null&&ue(A,H.startTime-F)}}function L(F,H){y=!1,M&&(M=!1,v(z),z=-1),g=!0;var X=m;try{for(E(H),p=t(u);p!==null&&(!(p.expirationTime>H)||F&&!B());){var Z=p.callback;if(typeof Z=="function"){p.callback=null,m=p.priorityLevel;var le=Z(p.expirationTime<=H);H=r.unstable_now(),typeof le=="function"?p.callback=le:p===t(u)&&n(u),E(H)}else n(u);p=t(u)}if(p!==null)var J=!0;else{var ce=t(h);ce!==null&&ue(A,ce.startTime-H),J=!1}return J}finally{p=null,m=X,g=!1}}var C=!1,I=null,z=-1,b=5,R=-1;function B(){return!(r.unstable_now()-R<b)}function $(){if(I!==null){var F=r.unstable_now();R=F;var H=!0;try{H=I(!0,F)}finally{H?ae():(C=!1,I=null)}}else C=!1}var ae;if(typeof w=="function")ae=function(){w($)};else if(typeof MessageChannel<"u"){var V=new MessageChannel,j=V.port2;V.port1.onmessage=$,ae=function(){j.postMessage(null)}}else ae=function(){x($,0)};function te(F){I=F,C||(C=!0,ae())}function ue(F,H){z=x(function(){F(r.unstable_now())},H)}r.unstable_IdlePriority=5,r.unstable_ImmediatePriority=1,r.unstable_LowPriority=4,r.unstable_NormalPriority=3,r.unstable_Profiling=null,r.unstable_UserBlockingPriority=2,r.unstable_cancelCallback=function(F){F.callback=null},r.unstable_continueExecution=function(){y||g||(y=!0,te(L))},r.unstable_forceFrameRate=function(F){0>F||125<F?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):b=0<F?Math.floor(1e3/F):5},r.unstable_getCurrentPriorityLevel=function(){return m},r.unstable_getFirstCallbackNode=function(){return t(u)},r.unstable_next=function(F){switch(m){case 1:case 2:case 3:var H=3;break;default:H=m}var X=m;m=H;try{return F()}finally{m=X}},r.unstable_pauseExecution=function(){},r.unstable_requestPaint=function(){},r.unstable_runWithPriority=function(F,H){switch(F){case 1:case 2:case 3:case 4:case 5:break;default:F=3}var X=m;m=F;try{return H()}finally{m=X}},r.unstable_scheduleCallback=function(F,H,X){var Z=r.unstable_now();switch(typeof X=="object"&&X!==null?(X=X.delay,X=typeof X=="number"&&0<X?Z+X:Z):X=Z,F){case 1:var le=-1;break;case 2:le=250;break;case 5:le=1073741823;break;case 4:le=1e4;break;default:le=5e3}return le=X+le,F={id:f++,callback:H,priorityLevel:F,startTime:X,expirationTime:le,sortIndex:-1},X>Z?(F.sortIndex=X,e(h,F),t(u)===null&&F===t(h)&&(M?(v(z),z=-1):M=!0,ue(A,X-Z))):(F.sortIndex=le,e(u,F),y||g||(y=!0,te(L))),F},r.unstable_shouldYield=B,r.unstable_wrapCallback=function(F){var H=m;return function(){var X=m;m=H;try{return F.apply(this,arguments)}finally{m=X}}}}(wf)),wf}var b0;function xb(){return b0||(b0=1,Ef.exports=yb()),Ef.exports}/**
 * @license React
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Sb=function(e){var t={},n=Be,i=xb(),s=Object.assign;function l(o){for(var a="https://reactjs.org/docs/error-decoder.html?invariant="+o,d=1;d<arguments.length;d++)a+="&args[]="+encodeURIComponent(arguments[d]);return"Minified React error #"+o+"; visit "+a+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var c=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,u=Symbol.for("react.element"),h=Symbol.for("react.portal"),f=Symbol.for("react.fragment"),p=Symbol.for("react.strict_mode"),m=Symbol.for("react.profiler"),g=Symbol.for("react.provider"),y=Symbol.for("react.context"),M=Symbol.for("react.forward_ref"),x=Symbol.for("react.suspense"),v=Symbol.for("react.suspense_list"),w=Symbol.for("react.memo"),E=Symbol.for("react.lazy"),A=Symbol.for("react.offscreen"),L=Symbol.iterator;function C(o){return o===null||typeof o!="object"?null:(o=L&&o[L]||o["@@iterator"],typeof o=="function"?o:null)}function I(o){if(o==null)return null;if(typeof o=="function")return o.displayName||o.name||null;if(typeof o=="string")return o;switch(o){case f:return"Fragment";case h:return"Portal";case m:return"Profiler";case p:return"StrictMode";case x:return"Suspense";case v:return"SuspenseList"}if(typeof o=="object")switch(o.$$typeof){case y:return(o.displayName||"Context")+".Consumer";case g:return(o._context.displayName||"Context")+".Provider";case M:var a=o.render;return o=o.displayName,o||(o=a.displayName||a.name||"",o=o!==""?"ForwardRef("+o+")":"ForwardRef"),o;case w:return a=o.displayName||null,a!==null?a:I(o.type)||"Memo";case E:a=o._payload,o=o._init;try{return I(o(a))}catch{}}return null}function z(o){var a=o.type;switch(o.tag){case 24:return"Cache";case 9:return(a.displayName||"Context")+".Consumer";case 10:return(a._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return o=a.render,o=o.displayName||o.name||"",a.displayName||(o!==""?"ForwardRef("+o+")":"ForwardRef");case 7:return"Fragment";case 5:return a;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return I(a);case 8:return a===p?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof a=="function")return a.displayName||a.name||null;if(typeof a=="string")return a}return null}function b(o){var a=o,d=o;if(o.alternate)for(;a.return;)a=a.return;else{o=a;do a=o,a.flags&4098&&(d=a.return),o=a.return;while(o)}return a.tag===3?d:null}function R(o){if(b(o)!==o)throw Error(l(188))}function B(o){var a=o.alternate;if(!a){if(a=b(o),a===null)throw Error(l(188));return a!==o?null:o}for(var d=o,_=a;;){var S=d.return;if(S===null)break;var T=S.alternate;if(T===null){if(_=S.return,_!==null){d=_;continue}break}if(S.child===T.child){for(T=S.child;T;){if(T===d)return R(S),o;if(T===_)return R(S),a;T=T.sibling}throw Error(l(188))}if(d.return!==_.return)d=S,_=T;else{for(var O=!1,Y=S.child;Y;){if(Y===d){O=!0,d=S,_=T;break}if(Y===_){O=!0,_=S,d=T;break}Y=Y.sibling}if(!O){for(Y=T.child;Y;){if(Y===d){O=!0,d=T,_=S;break}if(Y===_){O=!0,_=T,d=S;break}Y=Y.sibling}if(!O)throw Error(l(189))}}if(d.alternate!==_)throw Error(l(190))}if(d.tag!==3)throw Error(l(188));return d.stateNode.current===d?o:a}function $(o){return o=B(o),o!==null?ae(o):null}function ae(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){var a=ae(o);if(a!==null)return a;o=o.sibling}return null}function V(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){if(o.tag!==4){var a=V(o);if(a!==null)return a}o=o.sibling}return null}var j=Array.isArray,te=e.getPublicInstance,ue=e.getRootHostContext,F=e.getChildHostContext,H=e.prepareForCommit,X=e.resetAfterCommit,Z=e.createInstance,le=e.appendInitialChild,J=e.finalizeInitialChildren,ce=e.prepareUpdate,Me=e.shouldSetTextContent,be=e.createTextInstance,Ae=e.scheduleTimeout,nt=e.cancelTimeout,ot=e.noTimeout,Ve=e.isPrimaryRenderer,Ze=e.supportsMutation,k=e.supportsPersistence,xe=e.supportsHydration,fe=e.getInstanceFromNode,Se=e.preparePortalMount,de=e.getCurrentEventPriority,Ye=e.detachDeletedInstance,Pe=e.supportsMicrotasks,D=e.scheduleMicrotask,P=e.supportsTestSelectors,Q=e.findFiberRoot,_e=e.getBoundingRect,ge=e.getTextContent,pe=e.isHiddenSubtree,Ge=e.matchAccessibilityRole,Ce=e.setFocusIfFocusable,Oe=e.setupIntersectionObserver,Qe=e.appendChild,ut=e.appendChildToContainer,ve=e.commitTextUpdate,wt=e.commitMount,mt=e.commitUpdate,at=e.insertBefore,Ke=e.insertInContainerBefore,ze=e.removeChild,G=e.removeChildFromContainer,me=e.resetTextContent,Ne=e.hideInstance,Ie=e.hideTextInstance,ye=e.unhideInstance,W=e.unhideTextInstance,we=e.clearContainer,Re=e.cloneInstance,$e=e.createContainerChildSet,We=e.appendChildToContainerChildSet,Et=e.finalizeContainerChildren,Tt=e.replaceContainerChildren,Ut=e.cloneHiddenInstance,kt=e.cloneHiddenTextInstance,At=e.canHydrateInstance,_n=e.canHydrateTextInstance,ni=e.canHydrateSuspenseInstance,Lo=e.isSuspenseInstancePending,Io=e.isSuspenseInstanceFallback,As=e.registerSuspenseInstanceRetry,ur=e.getNextHydratableSibling,bs=e.getFirstHydratableChild,$a=e.getFirstHydratableChildWithinContainer,el=e.getFirstHydratableChildWithinSuspenseInstance,Iu=e.hydrateInstance,Du=e.hydrateTextInstance,Nu=e.hydrateSuspenseInstance,N=e.getNextHydratableInstanceAfterSuspenseInstance,K=e.commitHydratedContainer,ie=e.commitHydratedSuspenseInstance,re=e.clearSuspenseBoundary,ne=e.clearSuspenseBoundaryFromContainer,Fe=e.shouldDeleteUnhydratedTailInstances,je=e.didNotMatchHydratedContainerTextInstance,it=e.didNotMatchHydratedTextInstance,rt;function ht(o){if(rt===void 0)try{throw Error()}catch(d){var a=d.stack.trim().match(/\n( *(at )?)/);rt=a&&a[1]||""}return`
`+rt+o}var ct=!1;function ft(o,a){if(!o||ct)return"";ct=!0;var d=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(a)if(a=function(){throw Error()},Object.defineProperty(a.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(a,[])}catch(Ee){var _=Ee}Reflect.construct(o,[],a)}else{try{a.call()}catch(Ee){_=Ee}o.call(a.prototype)}else{try{throw Error()}catch(Ee){_=Ee}o()}}catch(Ee){if(Ee&&_&&typeof Ee.stack=="string"){for(var S=Ee.stack.split(`
`),T=_.stack.split(`
`),O=S.length-1,Y=T.length-1;1<=O&&0<=Y&&S[O]!==T[Y];)Y--;for(;1<=O&&0<=Y;O--,Y--)if(S[O]!==T[Y]){if(O!==1||Y!==1)do if(O--,Y--,0>Y||S[O]!==T[Y]){var oe=`
`+S[O].replace(" at new "," at ");return o.displayName&&oe.includes("<anonymous>")&&(oe=oe.replace("<anonymous>",o.displayName)),oe}while(1<=O&&0<=Y);break}}}finally{ct=!1,Error.prepareStackTrace=d}return(o=o?o.displayName||o.name:"")?ht(o):""}var Vt=Object.prototype.hasOwnProperty,vn=[],zt=-1;function hn(o){return{current:o}}function st(o){0>zt||(o.current=vn[zt],vn[zt]=null,zt--)}function ke(o,a){zt++,vn[zt]=o.current,o.current=a}var ii={},St=hn(ii),Xt=hn(!1),Ci=ii;function ri(o,a){var d=o.type.contextTypes;if(!d)return ii;var _=o.stateNode;if(_&&_.__reactInternalMemoizedUnmaskedChildContext===a)return _.__reactInternalMemoizedMaskedChildContext;var S={},T;for(T in d)S[T]=a[T];return _&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=a,o.__reactInternalMemoizedMaskedChildContext=S),S}function fn(o){return o=o.childContextTypes,o!=null}function jt(){st(Xt),st(St)}function Ri(o,a,d){if(St.current!==ii)throw Error(l(168));ke(St,a),ke(Xt,d)}function Cs(o,a,d){var _=o.stateNode;if(a=a.childContextTypes,typeof _.getChildContext!="function")return d;_=_.getChildContext();for(var S in _)if(!(S in a))throw Error(l(108,z(o)||"Unknown",S));return s({},d,_)}function yn(o){return o=(o=o.stateNode)&&o.__reactInternalMemoizedMergedChildContext||ii,Ci=St.current,ke(St,o),ke(Xt,Xt.current),!0}function Rs(o,a,d){var _=o.stateNode;if(!_)throw Error(l(169));d?(o=Cs(o,a,Ci),_.__reactInternalMemoizedMergedChildContext=o,st(Xt),st(St),ke(St,o)):st(Xt),ke(Xt,d)}var qn=Math.clz32?Math.clz32:Cy,tl=Math.log,by=Math.LN2;function Cy(o){return o>>>=0,o===0?32:31-(tl(o)/by|0)|0}var nl=64,il=4194304;function Do(o){switch(o&-o){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return o&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return o}}function rl(o,a){var d=o.pendingLanes;if(d===0)return 0;var _=0,S=o.suspendedLanes,T=o.pingedLanes,O=d&268435455;if(O!==0){var Y=O&~S;Y!==0?_=Do(Y):(T&=O,T!==0&&(_=Do(T)))}else O=d&~S,O!==0?_=Do(O):T!==0&&(_=Do(T));if(_===0)return 0;if(a!==0&&a!==_&&!(a&S)&&(S=_&-_,T=a&-a,S>=T||S===16&&(T&4194240)!==0))return a;if(_&4&&(_|=d&16),a=o.entangledLanes,a!==0)for(o=o.entanglements,a&=_;0<a;)d=31-qn(a),S=1<<d,_|=o[d],a&=~S;return _}function Ry(o,a){switch(o){case 1:case 2:case 4:return a+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function Py(o,a){for(var d=o.suspendedLanes,_=o.pingedLanes,S=o.expirationTimes,T=o.pendingLanes;0<T;){var O=31-qn(T),Y=1<<O,oe=S[O];oe===-1?(!(Y&d)||Y&_)&&(S[O]=Ry(Y,a)):oe<=a&&(o.expiredLanes|=Y),T&=~Y}}function Uu(o){return o=o.pendingLanes&-1073741825,o!==0?o:o&1073741824?1073741824:0}function Ou(o){for(var a=[],d=0;31>d;d++)a.push(o);return a}function No(o,a,d){o.pendingLanes|=a,a!==536870912&&(o.suspendedLanes=0,o.pingedLanes=0),o=o.eventTimes,a=31-qn(a),o[a]=d}function Ly(o,a){var d=o.pendingLanes&~a;o.pendingLanes=a,o.suspendedLanes=0,o.pingedLanes=0,o.expiredLanes&=a,o.mutableReadLanes&=a,o.entangledLanes&=a,a=o.entanglements;var _=o.eventTimes;for(o=o.expirationTimes;0<d;){var S=31-qn(d),T=1<<S;a[S]=0,_[S]=-1,o[S]=-1,d&=~T}}function Fu(o,a){var d=o.entangledLanes|=a;for(o=o.entanglements;d;){var _=31-qn(d),S=1<<_;S&a|o[_]&a&&(o[_]|=a),d&=~S}}var Ct=0;function _p(o){return o&=-o,1<o?4<o?o&268435455?16:536870912:4:1}var zu=i.unstable_scheduleCallback,vp=i.unstable_cancelCallback,Iy=i.unstable_shouldYield,Dy=i.unstable_requestPaint,dn=i.unstable_now,Bu=i.unstable_ImmediatePriority,Ny=i.unstable_UserBlockingPriority,ku=i.unstable_NormalPriority,Uy=i.unstable_IdlePriority,sl=null,Pi=null;function Oy(o){if(Pi&&typeof Pi.onCommitFiberRoot=="function")try{Pi.onCommitFiberRoot(sl,o,void 0,(o.current.flags&128)===128)}catch{}}function Fy(o,a){return o===a&&(o!==0||1/o===1/a)||o!==o&&a!==a}var Li=typeof Object.is=="function"?Object.is:Fy,Wi=null,ol=!1,Hu=!1;function yp(o){Wi===null?Wi=[o]:Wi.push(o)}function zy(o){ol=!0,yp(o)}function Ii(){if(!Hu&&Wi!==null){Hu=!0;var o=0,a=Ct;try{var d=Wi;for(Ct=1;o<d.length;o++){var _=d[o];do _=_(!0);while(_!==null)}Wi=null,ol=!1}catch(S){throw Wi!==null&&(Wi=Wi.slice(o+1)),zu(Bu,Ii),S}finally{Ct=a,Hu=!1}}return null}var By=c.ReactCurrentBatchConfig;function al(o,a){if(Li(o,a))return!0;if(typeof o!="object"||o===null||typeof a!="object"||a===null)return!1;var d=Object.keys(o),_=Object.keys(a);if(d.length!==_.length)return!1;for(_=0;_<d.length;_++){var S=d[_];if(!Vt.call(a,S)||!Li(o[S],a[S]))return!1}return!0}function ky(o){switch(o.tag){case 5:return ht(o.type);case 16:return ht("Lazy");case 13:return ht("Suspense");case 19:return ht("SuspenseList");case 0:case 2:case 15:return o=ft(o.type,!1),o;case 11:return o=ft(o.type.render,!1),o;case 1:return o=ft(o.type,!0),o;default:return""}}function pi(o,a){if(o&&o.defaultProps){a=s({},a),o=o.defaultProps;for(var d in o)a[d]===void 0&&(a[d]=o[d]);return a}return a}var ll=hn(null),cl=null,Ps=null,Vu=null;function Gu(){Vu=Ps=cl=null}function xp(o,a,d){Ve?(ke(ll,a._currentValue),a._currentValue=d):(ke(ll,a._currentValue2),a._currentValue2=d)}function Wu(o){var a=ll.current;st(ll),Ve?o._currentValue=a:o._currentValue2=a}function Xu(o,a,d){for(;o!==null;){var _=o.alternate;if((o.childLanes&a)!==a?(o.childLanes|=a,_!==null&&(_.childLanes|=a)):_!==null&&(_.childLanes&a)!==a&&(_.childLanes|=a),o===d)break;o=o.return}}function Ls(o,a){cl=o,Vu=Ps=null,o=o.dependencies,o!==null&&o.firstContext!==null&&(o.lanes&a&&(Jn=!0),o.firstContext=null)}function si(o){var a=Ve?o._currentValue:o._currentValue2;if(Vu!==o)if(o={context:o,memoizedValue:a,next:null},Ps===null){if(cl===null)throw Error(l(308));Ps=o,cl.dependencies={lanes:0,firstContext:o}}else Ps=Ps.next=o;return a}var Di=null,hr=!1;function Yu(o){o.updateQueue={baseState:o.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Sp(o,a){o=o.updateQueue,a.updateQueue===o&&(a.updateQueue={baseState:o.baseState,firstBaseUpdate:o.firstBaseUpdate,lastBaseUpdate:o.lastBaseUpdate,shared:o.shared,effects:o.effects})}function Xi(o,a){return{eventTime:o,lane:a,tag:0,payload:null,callback:null,next:null}}function fr(o,a){var d=o.updateQueue;d!==null&&(d=d.shared,nn!==null&&o.mode&1&&!(Mt&2)?(o=d.interleaved,o===null?(a.next=a,Di===null?Di=[d]:Di.push(d)):(a.next=o.next,o.next=a),d.interleaved=a):(o=d.pending,o===null?a.next=a:(a.next=o.next,o.next=a),d.pending=a))}function ul(o,a,d){if(a=a.updateQueue,a!==null&&(a=a.shared,(d&4194240)!==0)){var _=a.lanes;_&=o.pendingLanes,d|=_,a.lanes=d,Fu(o,d)}}function Mp(o,a){var d=o.updateQueue,_=o.alternate;if(_!==null&&(_=_.updateQueue,d===_)){var S=null,T=null;if(d=d.firstBaseUpdate,d!==null){do{var O={eventTime:d.eventTime,lane:d.lane,tag:d.tag,payload:d.payload,callback:d.callback,next:null};T===null?S=T=O:T=T.next=O,d=d.next}while(d!==null);T===null?S=T=a:T=T.next=a}else S=T=a;d={baseState:_.baseState,firstBaseUpdate:S,lastBaseUpdate:T,shared:_.shared,effects:_.effects},o.updateQueue=d;return}o=d.lastBaseUpdate,o===null?d.firstBaseUpdate=a:o.next=a,d.lastBaseUpdate=a}function hl(o,a,d,_){var S=o.updateQueue;hr=!1;var T=S.firstBaseUpdate,O=S.lastBaseUpdate,Y=S.shared.pending;if(Y!==null){S.shared.pending=null;var oe=Y,Ee=oe.next;oe.next=null,O===null?T=Ee:O.next=Ee,O=oe;var He=o.alternate;He!==null&&(He=He.updateQueue,Y=He.lastBaseUpdate,Y!==O&&(Y===null?He.firstBaseUpdate=Ee:Y.next=Ee,He.lastBaseUpdate=oe))}if(T!==null){var dt=S.baseState;O=0,He=Ee=oe=null,Y=T;do{var et=Y.lane,Ot=Y.eventTime;if((_&et)===et){He!==null&&(He=He.next={eventTime:Ot,lane:0,tag:Y.tag,payload:Y.payload,callback:Y.callback,next:null});e:{var Je=o,wn=Y;switch(et=a,Ot=d,wn.tag){case 1:if(Je=wn.payload,typeof Je=="function"){dt=Je.call(Ot,dt,et);break e}dt=Je;break e;case 3:Je.flags=Je.flags&-65537|128;case 0:if(Je=wn.payload,et=typeof Je=="function"?Je.call(Ot,dt,et):Je,et==null)break e;dt=s({},dt,et);break e;case 2:hr=!0}}Y.callback!==null&&Y.lane!==0&&(o.flags|=64,et=S.effects,et===null?S.effects=[Y]:et.push(Y))}else Ot={eventTime:Ot,lane:et,tag:Y.tag,payload:Y.payload,callback:Y.callback,next:null},He===null?(Ee=He=Ot,oe=dt):He=He.next=Ot,O|=et;if(Y=Y.next,Y===null){if(Y=S.shared.pending,Y===null)break;et=Y,Y=et.next,et.next=null,S.lastBaseUpdate=et,S.shared.pending=null}}while(!0);if(He===null&&(oe=dt),S.baseState=oe,S.firstBaseUpdate=Ee,S.lastBaseUpdate=He,a=S.shared.interleaved,a!==null){S=a;do O|=S.lane,S=S.next;while(S!==a)}else T===null&&(S.shared.lanes=0);ks|=O,o.lanes=O,o.memoizedState=dt}}function Ep(o,a,d){if(o=a.effects,a.effects=null,o!==null)for(a=0;a<o.length;a++){var _=o[a],S=_.callback;if(S!==null){if(_.callback=null,_=d,typeof S!="function")throw Error(l(191,S));S.call(_)}}}var wp=new n.Component().refs;function qu(o,a,d,_){a=o.memoizedState,d=d(_,a),d=d==null?a:s({},a,d),o.memoizedState=d,o.lanes===0&&(o.updateQueue.baseState=d)}var fl={isMounted:function(o){return(o=o._reactInternals)?b(o)===o:!1},enqueueSetState:function(o,a,d){o=o._reactInternals;var _=Nn(),S=mr(o),T=Xi(_,S);T.payload=a,d!=null&&(T.callback=d),fr(o,T),a=ui(o,S,_),a!==null&&ul(a,o,S)},enqueueReplaceState:function(o,a,d){o=o._reactInternals;var _=Nn(),S=mr(o),T=Xi(_,S);T.tag=1,T.payload=a,d!=null&&(T.callback=d),fr(o,T),a=ui(o,S,_),a!==null&&ul(a,o,S)},enqueueForceUpdate:function(o,a){o=o._reactInternals;var d=Nn(),_=mr(o),S=Xi(d,_);S.tag=2,a!=null&&(S.callback=a),fr(o,S),a=ui(o,_,d),a!==null&&ul(a,o,_)}};function Tp(o,a,d,_,S,T,O){return o=o.stateNode,typeof o.shouldComponentUpdate=="function"?o.shouldComponentUpdate(_,T,O):a.prototype&&a.prototype.isPureReactComponent?!al(d,_)||!al(S,T):!0}function Ap(o,a,d){var _=!1,S=ii,T=a.contextType;return typeof T=="object"&&T!==null?T=si(T):(S=fn(a)?Ci:St.current,_=a.contextTypes,T=(_=_!=null)?ri(o,S):ii),a=new a(d,T),o.memoizedState=a.state!==null&&a.state!==void 0?a.state:null,a.updater=fl,o.stateNode=a,a._reactInternals=o,_&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=S,o.__reactInternalMemoizedMaskedChildContext=T),a}function bp(o,a,d,_){o=a.state,typeof a.componentWillReceiveProps=="function"&&a.componentWillReceiveProps(d,_),typeof a.UNSAFE_componentWillReceiveProps=="function"&&a.UNSAFE_componentWillReceiveProps(d,_),a.state!==o&&fl.enqueueReplaceState(a,a.state,null)}function Zu(o,a,d,_){var S=o.stateNode;S.props=d,S.state=o.memoizedState,S.refs=wp,Yu(o);var T=a.contextType;typeof T=="object"&&T!==null?S.context=si(T):(T=fn(a)?Ci:St.current,S.context=ri(o,T)),S.state=o.memoizedState,T=a.getDerivedStateFromProps,typeof T=="function"&&(qu(o,a,T,d),S.state=o.memoizedState),typeof a.getDerivedStateFromProps=="function"||typeof S.getSnapshotBeforeUpdate=="function"||typeof S.UNSAFE_componentWillMount!="function"&&typeof S.componentWillMount!="function"||(a=S.state,typeof S.componentWillMount=="function"&&S.componentWillMount(),typeof S.UNSAFE_componentWillMount=="function"&&S.UNSAFE_componentWillMount(),a!==S.state&&fl.enqueueReplaceState(S,S.state,null),hl(o,d,S,_),S.state=o.memoizedState),typeof S.componentDidMount=="function"&&(o.flags|=4194308)}var Is=[],Ds=0,dl=null,pl=0,oi=[],ai=0,Br=null,Yi=1,qi="";function kr(o,a){Is[Ds++]=pl,Is[Ds++]=dl,dl=o,pl=a}function Cp(o,a,d){oi[ai++]=Yi,oi[ai++]=qi,oi[ai++]=Br,Br=o;var _=Yi;o=qi;var S=32-qn(_)-1;_&=~(1<<S),d+=1;var T=32-qn(a)+S;if(30<T){var O=S-S%5;T=(_&(1<<O)-1).toString(32),_>>=O,S-=O,Yi=1<<32-qn(a)+S|d<<S|_,qi=T+o}else Yi=1<<T|d<<S|_,qi=o}function ju(o){o.return!==null&&(kr(o,1),Cp(o,1,0))}function Ju(o){for(;o===dl;)dl=Is[--Ds],Is[Ds]=null,pl=Is[--Ds],Is[Ds]=null;for(;o===Br;)Br=oi[--ai],oi[ai]=null,qi=oi[--ai],oi[ai]=null,Yi=oi[--ai],oi[ai]=null}var Zn=null,jn=null,Ht=!1,Uo=!1,mi=null;function Rp(o,a){var d=hi(5,null,null,0);d.elementType="DELETED",d.stateNode=a,d.return=o,a=o.deletions,a===null?(o.deletions=[d],o.flags|=16):a.push(d)}function Pp(o,a){switch(o.tag){case 5:return a=At(a,o.type,o.pendingProps),a!==null?(o.stateNode=a,Zn=o,jn=bs(a),!0):!1;case 6:return a=_n(a,o.pendingProps),a!==null?(o.stateNode=a,Zn=o,jn=null,!0):!1;case 13:if(a=ni(a),a!==null){var d=Br!==null?{id:Yi,overflow:qi}:null;return o.memoizedState={dehydrated:a,treeContext:d,retryLane:1073741824},d=hi(18,null,null,0),d.stateNode=a,d.return=o,o.child=d,Zn=o,jn=null,!0}return!1;default:return!1}}function Ku(o){return(o.mode&1)!==0&&(o.flags&128)===0}function Qu(o){if(Ht){var a=jn;if(a){var d=a;if(!Pp(o,a)){if(Ku(o))throw Error(l(418));a=ur(d);var _=Zn;a&&Pp(o,a)?Rp(_,d):(o.flags=o.flags&-4097|2,Ht=!1,Zn=o)}}else{if(Ku(o))throw Error(l(418));o.flags=o.flags&-4097|2,Ht=!1,Zn=o}}}function Lp(o){for(o=o.return;o!==null&&o.tag!==5&&o.tag!==3&&o.tag!==13;)o=o.return;Zn=o}function Oo(o){if(!xe||o!==Zn)return!1;if(!Ht)return Lp(o),Ht=!0,!1;if(o.tag!==3&&(o.tag!==5||Fe(o.type)&&!Me(o.type,o.memoizedProps))){var a=jn;if(a){if(Ku(o)){for(o=jn;o;)o=ur(o);throw Error(l(418))}for(;a;)Rp(o,a),a=ur(a)}}if(Lp(o),o.tag===13){if(!xe)throw Error(l(316));if(o=o.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(l(317));jn=N(o)}else jn=Zn?ur(o.stateNode):null;return!0}function Ns(){xe&&(jn=Zn=null,Uo=Ht=!1)}function $u(o){mi===null?mi=[o]:mi.push(o)}function Fo(o,a,d){if(o=d.ref,o!==null&&typeof o!="function"&&typeof o!="object"){if(d._owner){if(d=d._owner,d){if(d.tag!==1)throw Error(l(309));var _=d.stateNode}if(!_)throw Error(l(147,o));var S=_,T=""+o;return a!==null&&a.ref!==null&&typeof a.ref=="function"&&a.ref._stringRef===T?a.ref:(a=function(O){var Y=S.refs;Y===wp&&(Y=S.refs={}),O===null?delete Y[T]:Y[T]=O},a._stringRef=T,a)}if(typeof o!="string")throw Error(l(284));if(!d._owner)throw Error(l(290,o))}return o}function ml(o,a){throw o=Object.prototype.toString.call(a),Error(l(31,o==="[object Object]"?"object with keys {"+Object.keys(a).join(", ")+"}":o))}function Ip(o){var a=o._init;return a(o._payload)}function Dp(o){function a(ee,q){if(o){var se=ee.deletions;se===null?(ee.deletions=[q],ee.flags|=16):se.push(q)}}function d(ee,q){if(!o)return null;for(;q!==null;)a(ee,q),q=q.sibling;return null}function _(ee,q){for(ee=new Map;q!==null;)q.key!==null?ee.set(q.key,q):ee.set(q.index,q),q=q.sibling;return ee}function S(ee,q){return ee=_r(ee,q),ee.index=0,ee.sibling=null,ee}function T(ee,q,se){return ee.index=se,o?(se=ee.alternate,se!==null?(se=se.index,se<q?(ee.flags|=2,q):se):(ee.flags|=2,q)):(ee.flags|=1048576,q)}function O(ee){return o&&ee.alternate===null&&(ee.flags|=2),ee}function Y(ee,q,se,De){return q===null||q.tag!==6?(q=Oh(se,ee.mode,De),q.return=ee,q):(q=S(q,se),q.return=ee,q)}function oe(ee,q,se,De){var qe=se.type;return qe===f?He(ee,q,se.props.children,De,se.key):q!==null&&(q.elementType===qe||typeof qe=="object"&&qe!==null&&qe.$$typeof===E&&Ip(qe)===q.type)?(De=S(q,se.props),De.ref=Fo(ee,q,se),De.return=ee,De):(De=Yl(se.type,se.key,se.props,null,ee.mode,De),De.ref=Fo(ee,q,se),De.return=ee,De)}function Ee(ee,q,se,De){return q===null||q.tag!==4||q.stateNode.containerInfo!==se.containerInfo||q.stateNode.implementation!==se.implementation?(q=Fh(se,ee.mode,De),q.return=ee,q):(q=S(q,se.children||[]),q.return=ee,q)}function He(ee,q,se,De,qe){return q===null||q.tag!==7?(q=qr(se,ee.mode,De,qe),q.return=ee,q):(q=S(q,se),q.return=ee,q)}function dt(ee,q,se){if(typeof q=="string"&&q!==""||typeof q=="number")return q=Oh(""+q,ee.mode,se),q.return=ee,q;if(typeof q=="object"&&q!==null){switch(q.$$typeof){case u:return se=Yl(q.type,q.key,q.props,null,ee.mode,se),se.ref=Fo(ee,null,q),se.return=ee,se;case h:return q=Fh(q,ee.mode,se),q.return=ee,q;case E:var De=q._init;return dt(ee,De(q._payload),se)}if(j(q)||C(q))return q=qr(q,ee.mode,se,null),q.return=ee,q;ml(ee,q)}return null}function et(ee,q,se,De){var qe=q!==null?q.key:null;if(typeof se=="string"&&se!==""||typeof se=="number")return qe!==null?null:Y(ee,q,""+se,De);if(typeof se=="object"&&se!==null){switch(se.$$typeof){case u:return se.key===qe?oe(ee,q,se,De):null;case h:return se.key===qe?Ee(ee,q,se,De):null;case E:return qe=se._init,et(ee,q,qe(se._payload),De)}if(j(se)||C(se))return qe!==null?null:He(ee,q,se,De,null);ml(ee,se)}return null}function Ot(ee,q,se,De,qe){if(typeof De=="string"&&De!==""||typeof De=="number")return ee=ee.get(se)||null,Y(q,ee,""+De,qe);if(typeof De=="object"&&De!==null){switch(De.$$typeof){case u:return ee=ee.get(De.key===null?se:De.key)||null,oe(q,ee,De,qe);case h:return ee=ee.get(De.key===null?se:De.key)||null,Ee(q,ee,De,qe);case E:var vt=De._init;return Ot(ee,q,se,vt(De._payload),qe)}if(j(De)||C(De))return ee=ee.get(se)||null,He(q,ee,De,qe,null);ml(q,De)}return null}function Je(ee,q,se,De){for(var qe=null,vt=null,pt=q,Rt=q=0,mn=null;pt!==null&&Rt<se.length;Rt++){pt.index>Rt?(mn=pt,pt=null):mn=pt.sibling;var Pt=et(ee,pt,se[Rt],De);if(Pt===null){pt===null&&(pt=mn);break}o&&pt&&Pt.alternate===null&&a(ee,pt),q=T(Pt,q,Rt),vt===null?qe=Pt:vt.sibling=Pt,vt=Pt,pt=mn}if(Rt===se.length)return d(ee,pt),Ht&&kr(ee,Rt),qe;if(pt===null){for(;Rt<se.length;Rt++)pt=dt(ee,se[Rt],De),pt!==null&&(q=T(pt,q,Rt),vt===null?qe=pt:vt.sibling=pt,vt=pt);return Ht&&kr(ee,Rt),qe}for(pt=_(ee,pt);Rt<se.length;Rt++)mn=Ot(pt,ee,Rt,se[Rt],De),mn!==null&&(o&&mn.alternate!==null&&pt.delete(mn.key===null?Rt:mn.key),q=T(mn,q,Rt),vt===null?qe=mn:vt.sibling=mn,vt=mn);return o&&pt.forEach(function(vr){return a(ee,vr)}),Ht&&kr(ee,Rt),qe}function wn(ee,q,se,De){var qe=C(se);if(typeof qe!="function")throw Error(l(150));if(se=qe.call(se),se==null)throw Error(l(151));for(var vt=qe=null,pt=q,Rt=q=0,mn=null,Pt=se.next();pt!==null&&!Pt.done;Rt++,Pt=se.next()){pt.index>Rt?(mn=pt,pt=null):mn=pt.sibling;var vr=et(ee,pt,Pt.value,De);if(vr===null){pt===null&&(pt=mn);break}o&&pt&&vr.alternate===null&&a(ee,pt),q=T(vr,q,Rt),vt===null?qe=vr:vt.sibling=vr,vt=vr,pt=mn}if(Pt.done)return d(ee,pt),Ht&&kr(ee,Rt),qe;if(pt===null){for(;!Pt.done;Rt++,Pt=se.next())Pt=dt(ee,Pt.value,De),Pt!==null&&(q=T(Pt,q,Rt),vt===null?qe=Pt:vt.sibling=Pt,vt=Pt);return Ht&&kr(ee,Rt),qe}for(pt=_(ee,pt);!Pt.done;Rt++,Pt=se.next())Pt=Ot(pt,ee,Rt,Pt.value,De),Pt!==null&&(o&&Pt.alternate!==null&&pt.delete(Pt.key===null?Rt:Pt.key),q=T(Pt,q,Rt),vt===null?qe=Pt:vt.sibling=Pt,vt=Pt);return o&&pt.forEach(function(gx){return a(ee,gx)}),Ht&&kr(ee,Rt),qe}function fi(ee,q,se,De){if(typeof se=="object"&&se!==null&&se.type===f&&se.key===null&&(se=se.props.children),typeof se=="object"&&se!==null){switch(se.$$typeof){case u:e:{for(var qe=se.key,vt=q;vt!==null;){if(vt.key===qe){if(qe=se.type,qe===f){if(vt.tag===7){d(ee,vt.sibling),q=S(vt,se.props.children),q.return=ee,ee=q;break e}}else if(vt.elementType===qe||typeof qe=="object"&&qe!==null&&qe.$$typeof===E&&Ip(qe)===vt.type){d(ee,vt.sibling),q=S(vt,se.props),q.ref=Fo(ee,vt,se),q.return=ee,ee=q;break e}d(ee,vt);break}else a(ee,vt);vt=vt.sibling}se.type===f?(q=qr(se.props.children,ee.mode,De,se.key),q.return=ee,ee=q):(De=Yl(se.type,se.key,se.props,null,ee.mode,De),De.ref=Fo(ee,q,se),De.return=ee,ee=De)}return O(ee);case h:e:{for(vt=se.key;q!==null;){if(q.key===vt)if(q.tag===4&&q.stateNode.containerInfo===se.containerInfo&&q.stateNode.implementation===se.implementation){d(ee,q.sibling),q=S(q,se.children||[]),q.return=ee,ee=q;break e}else{d(ee,q);break}else a(ee,q);q=q.sibling}q=Fh(se,ee.mode,De),q.return=ee,ee=q}return O(ee);case E:return vt=se._init,fi(ee,q,vt(se._payload),De)}if(j(se))return Je(ee,q,se,De);if(C(se))return wn(ee,q,se,De);ml(ee,se)}return typeof se=="string"&&se!==""||typeof se=="number"?(se=""+se,q!==null&&q.tag===6?(d(ee,q.sibling),q=S(q,se),q.return=ee,ee=q):(d(ee,q),q=Oh(se,ee.mode,De),q.return=ee,ee=q),O(ee)):d(ee,q)}return fi}var Us=Dp(!0),Np=Dp(!1),zo={},li=hn(zo),Bo=hn(zo),Os=hn(zo);function Ni(o){if(o===zo)throw Error(l(174));return o}function eh(o,a){ke(Os,a),ke(Bo,o),ke(li,zo),o=ue(a),st(li),ke(li,o)}function Fs(){st(li),st(Bo),st(Os)}function Up(o){var a=Ni(Os.current),d=Ni(li.current);a=F(d,o.type,a),d!==a&&(ke(Bo,o),ke(li,a))}function th(o){Bo.current===o&&(st(li),st(Bo))}var Gt=hn(0);function gl(o){for(var a=o;a!==null;){if(a.tag===13){var d=a.memoizedState;if(d!==null&&(d=d.dehydrated,d===null||Lo(d)||Io(d)))return a}else if(a.tag===19&&a.memoizedProps.revealOrder!==void 0){if(a.flags&128)return a}else if(a.child!==null){a.child.return=a,a=a.child;continue}if(a===o)break;for(;a.sibling===null;){if(a.return===null||a.return===o)return null;a=a.return}a.sibling.return=a.return,a=a.sibling}return null}var nh=[];function ih(){for(var o=0;o<nh.length;o++){var a=nh[o];Ve?a._workInProgressVersionPrimary=null:a._workInProgressVersionSecondary=null}nh.length=0}var _l=c.ReactCurrentDispatcher,ci=c.ReactCurrentBatchConfig,zs=0,Yt=null,Sn=null,pn=null,vl=!1,ko=!1,Ho=0,Hy=0;function Mn(){throw Error(l(321))}function rh(o,a){if(a===null)return!1;for(var d=0;d<a.length&&d<o.length;d++)if(!Li(o[d],a[d]))return!1;return!0}function sh(o,a,d,_,S,T){if(zs=T,Yt=a,a.memoizedState=null,a.updateQueue=null,a.lanes=0,_l.current=o===null||o.memoizedState===null?Xy:Yy,o=d(_,S),ko){T=0;do{if(ko=!1,Ho=0,25<=T)throw Error(l(301));T+=1,pn=Sn=null,a.updateQueue=null,_l.current=qy,o=d(_,S)}while(ko)}if(_l.current=El,a=Sn!==null&&Sn.next!==null,zs=0,pn=Sn=Yt=null,vl=!1,a)throw Error(l(300));return o}function oh(){var o=Ho!==0;return Ho=0,o}function Zi(){var o={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return pn===null?Yt.memoizedState=pn=o:pn=pn.next=o,pn}function Ui(){if(Sn===null){var o=Yt.alternate;o=o!==null?o.memoizedState:null}else o=Sn.next;var a=pn===null?Yt.memoizedState:pn.next;if(a!==null)pn=a,Sn=o;else{if(o===null)throw Error(l(310));Sn=o,o={memoizedState:Sn.memoizedState,baseState:Sn.baseState,baseQueue:Sn.baseQueue,queue:Sn.queue,next:null},pn===null?Yt.memoizedState=pn=o:pn=pn.next=o}return pn}function Hr(o,a){return typeof a=="function"?a(o):a}function yl(o){var a=Ui(),d=a.queue;if(d===null)throw Error(l(311));d.lastRenderedReducer=o;var _=Sn,S=_.baseQueue,T=d.pending;if(T!==null){if(S!==null){var O=S.next;S.next=T.next,T.next=O}_.baseQueue=S=T,d.pending=null}if(S!==null){T=S.next,_=_.baseState;var Y=O=null,oe=null,Ee=T;do{var He=Ee.lane;if((zs&He)===He)oe!==null&&(oe=oe.next={lane:0,action:Ee.action,hasEagerState:Ee.hasEagerState,eagerState:Ee.eagerState,next:null}),_=Ee.hasEagerState?Ee.eagerState:o(_,Ee.action);else{var dt={lane:He,action:Ee.action,hasEagerState:Ee.hasEagerState,eagerState:Ee.eagerState,next:null};oe===null?(Y=oe=dt,O=_):oe=oe.next=dt,Yt.lanes|=He,ks|=He}Ee=Ee.next}while(Ee!==null&&Ee!==T);oe===null?O=_:oe.next=Y,Li(_,a.memoizedState)||(Jn=!0),a.memoizedState=_,a.baseState=O,a.baseQueue=oe,d.lastRenderedState=_}if(o=d.interleaved,o!==null){S=o;do T=S.lane,Yt.lanes|=T,ks|=T,S=S.next;while(S!==o)}else S===null&&(d.lanes=0);return[a.memoizedState,d.dispatch]}function xl(o){var a=Ui(),d=a.queue;if(d===null)throw Error(l(311));d.lastRenderedReducer=o;var _=d.dispatch,S=d.pending,T=a.memoizedState;if(S!==null){d.pending=null;var O=S=S.next;do T=o(T,O.action),O=O.next;while(O!==S);Li(T,a.memoizedState)||(Jn=!0),a.memoizedState=T,a.baseQueue===null&&(a.baseState=T),d.lastRenderedState=T}return[T,_]}function Op(){}function Fp(o,a){var d=Yt,_=Ui(),S=a(),T=!Li(_.memoizedState,S);if(T&&(_.memoizedState=S,Jn=!0),_=_.queue,Go(kp.bind(null,d,_,o),[o]),_.getSnapshot!==a||T||pn!==null&&pn.memoizedState.tag&1){if(d.flags|=2048,Vo(9,Bp.bind(null,d,_,S,a),void 0,null),nn===null)throw Error(l(349));zs&30||zp(d,a,S)}return S}function zp(o,a,d){o.flags|=16384,o={getSnapshot:a,value:d},a=Yt.updateQueue,a===null?(a={lastEffect:null,stores:null},Yt.updateQueue=a,a.stores=[o]):(d=a.stores,d===null?a.stores=[o]:d.push(o))}function Bp(o,a,d,_){a.value=d,a.getSnapshot=_,Hp(a)&&ui(o,1,-1)}function kp(o,a,d){return d(function(){Hp(a)&&ui(o,1,-1)})}function Hp(o){var a=o.getSnapshot;o=o.value;try{var d=a();return!Li(o,d)}catch{return!0}}function ah(o){var a=Zi();return typeof o=="function"&&(o=o()),a.memoizedState=a.baseState=o,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Hr,lastRenderedState:o},a.queue=o,o=o.dispatch=Wy.bind(null,Yt,o),[a.memoizedState,o]}function Vo(o,a,d,_){return o={tag:o,create:a,destroy:d,deps:_,next:null},a=Yt.updateQueue,a===null?(a={lastEffect:null,stores:null},Yt.updateQueue=a,a.lastEffect=o.next=o):(d=a.lastEffect,d===null?a.lastEffect=o.next=o:(_=d.next,d.next=o,o.next=_,a.lastEffect=o)),o}function Vp(){return Ui().memoizedState}function Sl(o,a,d,_){var S=Zi();Yt.flags|=o,S.memoizedState=Vo(1|a,d,void 0,_===void 0?null:_)}function Ml(o,a,d,_){var S=Ui();_=_===void 0?null:_;var T=void 0;if(Sn!==null){var O=Sn.memoizedState;if(T=O.destroy,_!==null&&rh(_,O.deps)){S.memoizedState=Vo(a,d,T,_);return}}Yt.flags|=o,S.memoizedState=Vo(1|a,d,T,_)}function lh(o,a){return Sl(8390656,8,o,a)}function Go(o,a){return Ml(2048,8,o,a)}function Gp(o,a){return Ml(4,2,o,a)}function Wp(o,a){return Ml(4,4,o,a)}function Xp(o,a){if(typeof a=="function")return o=o(),a(o),function(){a(null)};if(a!=null)return o=o(),a.current=o,function(){a.current=null}}function Yp(o,a,d){return d=d!=null?d.concat([o]):null,Ml(4,4,Xp.bind(null,a,o),d)}function ch(){}function qp(o,a){var d=Ui();a=a===void 0?null:a;var _=d.memoizedState;return _!==null&&a!==null&&rh(a,_[1])?_[0]:(d.memoizedState=[o,a],o)}function Zp(o,a){var d=Ui();a=a===void 0?null:a;var _=d.memoizedState;return _!==null&&a!==null&&rh(a,_[1])?_[0]:(o=o(),d.memoizedState=[o,a],o)}function Vy(o,a){var d=Ct;Ct=d!==0&&4>d?d:4,o(!0);var _=ci.transition;ci.transition={};try{o(!1),a()}finally{Ct=d,ci.transition=_}}function jp(){return Ui().memoizedState}function Gy(o,a,d){var _=mr(o);d={lane:_,action:d,hasEagerState:!1,eagerState:null,next:null},Jp(o)?Kp(a,d):(Qp(o,a,d),d=Nn(),o=ui(o,_,d),o!==null&&$p(o,a,_))}function Wy(o,a,d){var _=mr(o),S={lane:_,action:d,hasEagerState:!1,eagerState:null,next:null};if(Jp(o))Kp(a,S);else{Qp(o,a,S);var T=o.alternate;if(o.lanes===0&&(T===null||T.lanes===0)&&(T=a.lastRenderedReducer,T!==null))try{var O=a.lastRenderedState,Y=T(O,d);if(S.hasEagerState=!0,S.eagerState=Y,Li(Y,O))return}catch{}finally{}d=Nn(),o=ui(o,_,d),o!==null&&$p(o,a,_)}}function Jp(o){var a=o.alternate;return o===Yt||a!==null&&a===Yt}function Kp(o,a){ko=vl=!0;var d=o.pending;d===null?a.next=a:(a.next=d.next,d.next=a),o.pending=a}function Qp(o,a,d){nn!==null&&o.mode&1&&!(Mt&2)?(o=a.interleaved,o===null?(d.next=d,Di===null?Di=[a]:Di.push(a)):(d.next=o.next,o.next=d),a.interleaved=d):(o=a.pending,o===null?d.next=d:(d.next=o.next,o.next=d),a.pending=d)}function $p(o,a,d){if(d&4194240){var _=a.lanes;_&=o.pendingLanes,d|=_,a.lanes=d,Fu(o,d)}}var El={readContext:si,useCallback:Mn,useContext:Mn,useEffect:Mn,useImperativeHandle:Mn,useInsertionEffect:Mn,useLayoutEffect:Mn,useMemo:Mn,useReducer:Mn,useRef:Mn,useState:Mn,useDebugValue:Mn,useDeferredValue:Mn,useTransition:Mn,useMutableSource:Mn,useSyncExternalStore:Mn,useId:Mn,unstable_isNewReconciler:!1},Xy={readContext:si,useCallback:function(o,a){return Zi().memoizedState=[o,a===void 0?null:a],o},useContext:si,useEffect:lh,useImperativeHandle:function(o,a,d){return d=d!=null?d.concat([o]):null,Sl(4194308,4,Xp.bind(null,a,o),d)},useLayoutEffect:function(o,a){return Sl(4194308,4,o,a)},useInsertionEffect:function(o,a){return Sl(4,2,o,a)},useMemo:function(o,a){var d=Zi();return a=a===void 0?null:a,o=o(),d.memoizedState=[o,a],o},useReducer:function(o,a,d){var _=Zi();return a=d!==void 0?d(a):a,_.memoizedState=_.baseState=a,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:o,lastRenderedState:a},_.queue=o,o=o.dispatch=Gy.bind(null,Yt,o),[_.memoizedState,o]},useRef:function(o){var a=Zi();return o={current:o},a.memoizedState=o},useState:ah,useDebugValue:ch,useDeferredValue:function(o){var a=ah(o),d=a[0],_=a[1];return lh(function(){var S=ci.transition;ci.transition={};try{_(o)}finally{ci.transition=S}},[o]),d},useTransition:function(){var o=ah(!1),a=o[0];return o=Vy.bind(null,o[1]),Zi().memoizedState=o,[a,o]},useMutableSource:function(){},useSyncExternalStore:function(o,a,d){var _=Yt,S=Zi();if(Ht){if(d===void 0)throw Error(l(407));d=d()}else{if(d=a(),nn===null)throw Error(l(349));zs&30||zp(_,a,d)}S.memoizedState=d;var T={value:d,getSnapshot:a};return S.queue=T,lh(kp.bind(null,_,T,o),[o]),_.flags|=2048,Vo(9,Bp.bind(null,_,T,d,a),void 0,null),d},useId:function(){var o=Zi(),a=nn.identifierPrefix;if(Ht){var d=qi,_=Yi;d=(_&~(1<<32-qn(_)-1)).toString(32)+d,a=":"+a+"R"+d,d=Ho++,0<d&&(a+="H"+d.toString(32)),a+=":"}else d=Hy++,a=":"+a+"r"+d.toString(32)+":";return o.memoizedState=a},unstable_isNewReconciler:!1},Yy={readContext:si,useCallback:qp,useContext:si,useEffect:Go,useImperativeHandle:Yp,useInsertionEffect:Gp,useLayoutEffect:Wp,useMemo:Zp,useReducer:yl,useRef:Vp,useState:function(){return yl(Hr)},useDebugValue:ch,useDeferredValue:function(o){var a=yl(Hr),d=a[0],_=a[1];return Go(function(){var S=ci.transition;ci.transition={};try{_(o)}finally{ci.transition=S}},[o]),d},useTransition:function(){var o=yl(Hr)[0],a=Ui().memoizedState;return[o,a]},useMutableSource:Op,useSyncExternalStore:Fp,useId:jp,unstable_isNewReconciler:!1},qy={readContext:si,useCallback:qp,useContext:si,useEffect:Go,useImperativeHandle:Yp,useInsertionEffect:Gp,useLayoutEffect:Wp,useMemo:Zp,useReducer:xl,useRef:Vp,useState:function(){return xl(Hr)},useDebugValue:ch,useDeferredValue:function(o){var a=xl(Hr),d=a[0],_=a[1];return Go(function(){var S=ci.transition;ci.transition={};try{_(o)}finally{ci.transition=S}},[o]),d},useTransition:function(){var o=xl(Hr)[0],a=Ui().memoizedState;return[o,a]},useMutableSource:Op,useSyncExternalStore:Fp,useId:jp,unstable_isNewReconciler:!1};function uh(o,a){try{var d="",_=a;do d+=ky(_),_=_.return;while(_);var S=d}catch(T){S=`
Error generating stack: `+T.message+`
`+T.stack}return{value:o,source:a,stack:S}}function hh(o,a){try{console.error(a.value)}catch(d){setTimeout(function(){throw d})}}var Zy=typeof WeakMap=="function"?WeakMap:Map;function em(o,a,d){d=Xi(-1,d),d.tag=3,d.payload={element:null};var _=a.value;return d.callback=function(){Bl||(Bl=!0,Rh=_),hh(o,a)},d}function tm(o,a,d){d=Xi(-1,d),d.tag=3;var _=o.type.getDerivedStateFromError;if(typeof _=="function"){var S=a.value;d.payload=function(){return _(S)},d.callback=function(){hh(o,a)}}var T=o.stateNode;return T!==null&&typeof T.componentDidCatch=="function"&&(d.callback=function(){hh(o,a),typeof _!="function"&&(dr===null?dr=new Set([this]):dr.add(this));var O=a.stack;this.componentDidCatch(a.value,{componentStack:O!==null?O:""})}),d}function nm(o,a,d){var _=o.pingCache;if(_===null){_=o.pingCache=new Zy;var S=new Set;_.set(a,S)}else S=_.get(a),S===void 0&&(S=new Set,_.set(a,S));S.has(d)||(S.add(d),o=lx.bind(null,o,a,d),a.then(o,o))}function im(o){do{var a;if((a=o.tag===13)&&(a=o.memoizedState,a=a!==null?a.dehydrated!==null:!0),a)return o;o=o.return}while(o!==null);return null}function rm(o,a,d,_,S){return o.mode&1?(o.flags|=65536,o.lanes=S,o):(o===a?o.flags|=65536:(o.flags|=128,d.flags|=131072,d.flags&=-52805,d.tag===1&&(d.alternate===null?d.tag=17:(a=Xi(-1,1),a.tag=2,fr(d,a))),d.lanes|=1),o)}function Oi(o){o.flags|=4}function sm(o,a){if(o!==null&&o.child===a.child)return!0;if(a.flags&16)return!1;for(o=a.child;o!==null;){if(o.flags&12854||o.subtreeFlags&12854)return!1;o=o.sibling}return!0}var Wo,Xo,wl,Tl;if(Ze)Wo=function(o,a){for(var d=a.child;d!==null;){if(d.tag===5||d.tag===6)le(o,d.stateNode);else if(d.tag!==4&&d.child!==null){d.child.return=d,d=d.child;continue}if(d===a)break;for(;d.sibling===null;){if(d.return===null||d.return===a)return;d=d.return}d.sibling.return=d.return,d=d.sibling}},Xo=function(){},wl=function(o,a,d,_,S){if(o=o.memoizedProps,o!==_){var T=a.stateNode,O=Ni(li.current);d=ce(T,d,o,_,S,O),(a.updateQueue=d)&&Oi(a)}},Tl=function(o,a,d,_){d!==_&&Oi(a)};else if(k){Wo=function(o,a,d,_){for(var S=a.child;S!==null;){if(S.tag===5){var T=S.stateNode;d&&_&&(T=Ut(T,S.type,S.memoizedProps,S)),le(o,T)}else if(S.tag===6)T=S.stateNode,d&&_&&(T=kt(T,S.memoizedProps,S)),le(o,T);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)T=S.child,T!==null&&(T.return=S),Wo(o,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===a)break;for(;S.sibling===null;){if(S.return===null||S.return===a)return;S=S.return}S.sibling.return=S.return,S=S.sibling}};var om=function(o,a,d,_){for(var S=a.child;S!==null;){if(S.tag===5){var T=S.stateNode;d&&_&&(T=Ut(T,S.type,S.memoizedProps,S)),We(o,T)}else if(S.tag===6)T=S.stateNode,d&&_&&(T=kt(T,S.memoizedProps,S)),We(o,T);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)T=S.child,T!==null&&(T.return=S),om(o,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===a)break;for(;S.sibling===null;){if(S.return===null||S.return===a)return;S=S.return}S.sibling.return=S.return,S=S.sibling}};Xo=function(o,a){var d=a.stateNode;if(!sm(o,a)){o=d.containerInfo;var _=$e(o);om(_,a,!1,!1),d.pendingChildren=_,Oi(a),Et(o,_)}},wl=function(o,a,d,_,S){var T=o.stateNode,O=o.memoizedProps;if((o=sm(o,a))&&O===_)a.stateNode=T;else{var Y=a.stateNode,oe=Ni(li.current),Ee=null;O!==_&&(Ee=ce(Y,d,O,_,S,oe)),o&&Ee===null?a.stateNode=T:(T=Re(T,Ee,d,O,_,a,o,Y),J(T,d,_,S,oe)&&Oi(a),a.stateNode=T,o?Oi(a):Wo(T,a,!1,!1))}},Tl=function(o,a,d,_){d!==_?(o=Ni(Os.current),d=Ni(li.current),a.stateNode=be(_,o,d,a),Oi(a)):a.stateNode=o.stateNode}}else Xo=function(){},wl=function(){},Tl=function(){};function Yo(o,a){if(!Ht)switch(o.tailMode){case"hidden":a=o.tail;for(var d=null;a!==null;)a.alternate!==null&&(d=a),a=a.sibling;d===null?o.tail=null:d.sibling=null;break;case"collapsed":d=o.tail;for(var _=null;d!==null;)d.alternate!==null&&(_=d),d=d.sibling;_===null?a||o.tail===null?o.tail=null:o.tail.sibling=null:_.sibling=null}}function En(o){var a=o.alternate!==null&&o.alternate.child===o.child,d=0,_=0;if(a)for(var S=o.child;S!==null;)d|=S.lanes|S.childLanes,_|=S.subtreeFlags&14680064,_|=S.flags&14680064,S.return=o,S=S.sibling;else for(S=o.child;S!==null;)d|=S.lanes|S.childLanes,_|=S.subtreeFlags,_|=S.flags,S.return=o,S=S.sibling;return o.subtreeFlags|=_,o.childLanes=d,a}function jy(o,a,d){var _=a.pendingProps;switch(Ju(a),a.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return En(a),null;case 1:return fn(a.type)&&jt(),En(a),null;case 3:return _=a.stateNode,Fs(),st(Xt),st(St),ih(),_.pendingContext&&(_.context=_.pendingContext,_.pendingContext=null),(o===null||o.child===null)&&(Oo(a)?Oi(a):o===null||o.memoizedState.isDehydrated&&!(a.flags&256)||(a.flags|=1024,mi!==null&&(Ih(mi),mi=null))),Xo(o,a),En(a),null;case 5:th(a),d=Ni(Os.current);var S=a.type;if(o!==null&&a.stateNode!=null)wl(o,a,S,_,d),o.ref!==a.ref&&(a.flags|=512,a.flags|=2097152);else{if(!_){if(a.stateNode===null)throw Error(l(166));return En(a),null}if(o=Ni(li.current),Oo(a)){if(!xe)throw Error(l(175));o=Iu(a.stateNode,a.type,a.memoizedProps,d,o,a,!Uo),a.updateQueue=o,o!==null&&Oi(a)}else{var T=Z(S,_,d,o,a);Wo(T,a,!1,!1),a.stateNode=T,J(T,S,_,d,o)&&Oi(a)}a.ref!==null&&(a.flags|=512,a.flags|=2097152)}return En(a),null;case 6:if(o&&a.stateNode!=null)Tl(o,a,o.memoizedProps,_);else{if(typeof _!="string"&&a.stateNode===null)throw Error(l(166));if(o=Ni(Os.current),d=Ni(li.current),Oo(a)){if(!xe)throw Error(l(176));if(o=a.stateNode,_=a.memoizedProps,(d=Du(o,_,a,!Uo))&&(S=Zn,S!==null))switch(T=(S.mode&1)!==0,S.tag){case 3:je(S.stateNode.containerInfo,o,_,T);break;case 5:it(S.type,S.memoizedProps,S.stateNode,o,_,T)}d&&Oi(a)}else a.stateNode=be(_,o,d,a)}return En(a),null;case 13:if(st(Gt),_=a.memoizedState,Ht&&jn!==null&&a.mode&1&&!(a.flags&128)){for(o=jn;o;)o=ur(o);return Ns(),a.flags|=98560,a}if(_!==null&&_.dehydrated!==null){if(_=Oo(a),o===null){if(!_)throw Error(l(318));if(!xe)throw Error(l(344));if(o=a.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(l(317));Nu(o,a)}else Ns(),!(a.flags&128)&&(a.memoizedState=null),a.flags|=4;return En(a),null}return mi!==null&&(Ih(mi),mi=null),a.flags&128?(a.lanes=d,a):(_=_!==null,d=!1,o===null?Oo(a):d=o.memoizedState!==null,_&&!d&&(a.child.flags|=8192,a.mode&1&&(o===null||Gt.current&1?on===0&&(on=3):Nh())),a.updateQueue!==null&&(a.flags|=4),En(a),null);case 4:return Fs(),Xo(o,a),o===null&&Se(a.stateNode.containerInfo),En(a),null;case 10:return Wu(a.type._context),En(a),null;case 17:return fn(a.type)&&jt(),En(a),null;case 19:if(st(Gt),S=a.memoizedState,S===null)return En(a),null;if(_=(a.flags&128)!==0,T=S.rendering,T===null)if(_)Yo(S,!1);else{if(on!==0||o!==null&&o.flags&128)for(o=a.child;o!==null;){if(T=gl(o),T!==null){for(a.flags|=128,Yo(S,!1),o=T.updateQueue,o!==null&&(a.updateQueue=o,a.flags|=4),a.subtreeFlags=0,o=d,_=a.child;_!==null;)d=_,S=o,d.flags&=14680066,T=d.alternate,T===null?(d.childLanes=0,d.lanes=S,d.child=null,d.subtreeFlags=0,d.memoizedProps=null,d.memoizedState=null,d.updateQueue=null,d.dependencies=null,d.stateNode=null):(d.childLanes=T.childLanes,d.lanes=T.lanes,d.child=T.child,d.subtreeFlags=0,d.deletions=null,d.memoizedProps=T.memoizedProps,d.memoizedState=T.memoizedState,d.updateQueue=T.updateQueue,d.type=T.type,S=T.dependencies,d.dependencies=S===null?null:{lanes:S.lanes,firstContext:S.firstContext}),_=_.sibling;return ke(Gt,Gt.current&1|2),a.child}o=o.sibling}S.tail!==null&&dn()>Ch&&(a.flags|=128,_=!0,Yo(S,!1),a.lanes=4194304)}else{if(!_)if(o=gl(T),o!==null){if(a.flags|=128,_=!0,o=o.updateQueue,o!==null&&(a.updateQueue=o,a.flags|=4),Yo(S,!0),S.tail===null&&S.tailMode==="hidden"&&!T.alternate&&!Ht)return En(a),null}else 2*dn()-S.renderingStartTime>Ch&&d!==1073741824&&(a.flags|=128,_=!0,Yo(S,!1),a.lanes=4194304);S.isBackwards?(T.sibling=a.child,a.child=T):(o=S.last,o!==null?o.sibling=T:a.child=T,S.last=T)}return S.tail!==null?(a=S.tail,S.rendering=a,S.tail=a.sibling,S.renderingStartTime=dn(),a.sibling=null,o=Gt.current,ke(Gt,_?o&1|2:o&1),a):(En(a),null);case 22:case 23:return Dh(),_=a.memoizedState!==null,o!==null&&o.memoizedState!==null!==_&&(a.flags|=8192),_&&a.mode&1?Kn&1073741824&&(En(a),Ze&&a.subtreeFlags&6&&(a.flags|=8192)):En(a),null;case 24:return null;case 25:return null}throw Error(l(156,a.tag))}var Jy=c.ReactCurrentOwner,Jn=!1;function Dn(o,a,d,_){a.child=o===null?Np(a,null,d,_):Us(a,o.child,d,_)}function am(o,a,d,_,S){d=d.render;var T=a.ref;return Ls(a,S),_=sh(o,a,d,_,T,S),d=oh(),o!==null&&!Jn?(a.updateQueue=o.updateQueue,a.flags&=-2053,o.lanes&=~S,ji(o,a,S)):(Ht&&d&&ju(a),a.flags|=1,Dn(o,a,_,S),a.child)}function lm(o,a,d,_,S){if(o===null){var T=d.type;return typeof T=="function"&&!Uh(T)&&T.defaultProps===void 0&&d.compare===null&&d.defaultProps===void 0?(a.tag=15,a.type=T,cm(o,a,T,_,S)):(o=Yl(d.type,null,_,a,a.mode,S),o.ref=a.ref,o.return=a,a.child=o)}if(T=o.child,!(o.lanes&S)){var O=T.memoizedProps;if(d=d.compare,d=d!==null?d:al,d(O,_)&&o.ref===a.ref)return ji(o,a,S)}return a.flags|=1,o=_r(T,_),o.ref=a.ref,o.return=a,a.child=o}function cm(o,a,d,_,S){if(o!==null&&al(o.memoizedProps,_)&&o.ref===a.ref)if(Jn=!1,(o.lanes&S)!==0)o.flags&131072&&(Jn=!0);else return a.lanes=o.lanes,ji(o,a,S);return fh(o,a,d,_,S)}function um(o,a,d){var _=a.pendingProps,S=_.children,T=o!==null?o.memoizedState:null;if(_.mode==="hidden")if(!(a.mode&1))a.memoizedState={baseLanes:0,cachePool:null},ke(Bs,Kn),Kn|=d;else if(d&1073741824)a.memoizedState={baseLanes:0,cachePool:null},_=T!==null?T.baseLanes:d,ke(Bs,Kn),Kn|=_;else return o=T!==null?T.baseLanes|d:d,a.lanes=a.childLanes=1073741824,a.memoizedState={baseLanes:o,cachePool:null},a.updateQueue=null,ke(Bs,Kn),Kn|=o,null;else T!==null?(_=T.baseLanes|d,a.memoizedState=null):_=d,ke(Bs,Kn),Kn|=_;return Dn(o,a,S,d),a.child}function hm(o,a){var d=a.ref;(o===null&&d!==null||o!==null&&o.ref!==d)&&(a.flags|=512,a.flags|=2097152)}function fh(o,a,d,_,S){var T=fn(d)?Ci:St.current;return T=ri(a,T),Ls(a,S),d=sh(o,a,d,_,T,S),_=oh(),o!==null&&!Jn?(a.updateQueue=o.updateQueue,a.flags&=-2053,o.lanes&=~S,ji(o,a,S)):(Ht&&_&&ju(a),a.flags|=1,Dn(o,a,d,S),a.child)}function fm(o,a,d,_,S){if(fn(d)){var T=!0;yn(a)}else T=!1;if(Ls(a,S),a.stateNode===null)o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),Ap(a,d,_),Zu(a,d,_,S),_=!0;else if(o===null){var O=a.stateNode,Y=a.memoizedProps;O.props=Y;var oe=O.context,Ee=d.contextType;typeof Ee=="object"&&Ee!==null?Ee=si(Ee):(Ee=fn(d)?Ci:St.current,Ee=ri(a,Ee));var He=d.getDerivedStateFromProps,dt=typeof He=="function"||typeof O.getSnapshotBeforeUpdate=="function";dt||typeof O.UNSAFE_componentWillReceiveProps!="function"&&typeof O.componentWillReceiveProps!="function"||(Y!==_||oe!==Ee)&&bp(a,O,_,Ee),hr=!1;var et=a.memoizedState;O.state=et,hl(a,_,O,S),oe=a.memoizedState,Y!==_||et!==oe||Xt.current||hr?(typeof He=="function"&&(qu(a,d,He,_),oe=a.memoizedState),(Y=hr||Tp(a,d,Y,_,et,oe,Ee))?(dt||typeof O.UNSAFE_componentWillMount!="function"&&typeof O.componentWillMount!="function"||(typeof O.componentWillMount=="function"&&O.componentWillMount(),typeof O.UNSAFE_componentWillMount=="function"&&O.UNSAFE_componentWillMount()),typeof O.componentDidMount=="function"&&(a.flags|=4194308)):(typeof O.componentDidMount=="function"&&(a.flags|=4194308),a.memoizedProps=_,a.memoizedState=oe),O.props=_,O.state=oe,O.context=Ee,_=Y):(typeof O.componentDidMount=="function"&&(a.flags|=4194308),_=!1)}else{O=a.stateNode,Sp(o,a),Y=a.memoizedProps,Ee=a.type===a.elementType?Y:pi(a.type,Y),O.props=Ee,dt=a.pendingProps,et=O.context,oe=d.contextType,typeof oe=="object"&&oe!==null?oe=si(oe):(oe=fn(d)?Ci:St.current,oe=ri(a,oe));var Ot=d.getDerivedStateFromProps;(He=typeof Ot=="function"||typeof O.getSnapshotBeforeUpdate=="function")||typeof O.UNSAFE_componentWillReceiveProps!="function"&&typeof O.componentWillReceiveProps!="function"||(Y!==dt||et!==oe)&&bp(a,O,_,oe),hr=!1,et=a.memoizedState,O.state=et,hl(a,_,O,S);var Je=a.memoizedState;Y!==dt||et!==Je||Xt.current||hr?(typeof Ot=="function"&&(qu(a,d,Ot,_),Je=a.memoizedState),(Ee=hr||Tp(a,d,Ee,_,et,Je,oe)||!1)?(He||typeof O.UNSAFE_componentWillUpdate!="function"&&typeof O.componentWillUpdate!="function"||(typeof O.componentWillUpdate=="function"&&O.componentWillUpdate(_,Je,oe),typeof O.UNSAFE_componentWillUpdate=="function"&&O.UNSAFE_componentWillUpdate(_,Je,oe)),typeof O.componentDidUpdate=="function"&&(a.flags|=4),typeof O.getSnapshotBeforeUpdate=="function"&&(a.flags|=1024)):(typeof O.componentDidUpdate!="function"||Y===o.memoizedProps&&et===o.memoizedState||(a.flags|=4),typeof O.getSnapshotBeforeUpdate!="function"||Y===o.memoizedProps&&et===o.memoizedState||(a.flags|=1024),a.memoizedProps=_,a.memoizedState=Je),O.props=_,O.state=Je,O.context=oe,_=Ee):(typeof O.componentDidUpdate!="function"||Y===o.memoizedProps&&et===o.memoizedState||(a.flags|=4),typeof O.getSnapshotBeforeUpdate!="function"||Y===o.memoizedProps&&et===o.memoizedState||(a.flags|=1024),_=!1)}return dh(o,a,d,_,T,S)}function dh(o,a,d,_,S,T){hm(o,a);var O=(a.flags&128)!==0;if(!_&&!O)return S&&Rs(a,d,!1),ji(o,a,T);_=a.stateNode,Jy.current=a;var Y=O&&typeof d.getDerivedStateFromError!="function"?null:_.render();return a.flags|=1,o!==null&&O?(a.child=Us(a,o.child,null,T),a.child=Us(a,null,Y,T)):Dn(o,a,Y,T),a.memoizedState=_.state,S&&Rs(a,d,!0),a.child}function dm(o){var a=o.stateNode;a.pendingContext?Ri(o,a.pendingContext,a.pendingContext!==a.context):a.context&&Ri(o,a.context,!1),eh(o,a.containerInfo)}function pm(o,a,d,_,S){return Ns(),$u(S),a.flags|=256,Dn(o,a,d,_),a.child}var Al={dehydrated:null,treeContext:null,retryLane:0};function bl(o){return{baseLanes:o,cachePool:null}}function mm(o,a,d){var _=a.pendingProps,S=Gt.current,T=!1,O=(a.flags&128)!==0,Y;if((Y=O)||(Y=o!==null&&o.memoizedState===null?!1:(S&2)!==0),Y?(T=!0,a.flags&=-129):(o===null||o.memoizedState!==null)&&(S|=1),ke(Gt,S&1),o===null)return Qu(a),o=a.memoizedState,o!==null&&(o=o.dehydrated,o!==null)?(a.mode&1?Io(o)?a.lanes=8:a.lanes=1073741824:a.lanes=1,null):(S=_.children,o=_.fallback,T?(_=a.mode,T=a.child,S={mode:"hidden",children:S},!(_&1)&&T!==null?(T.childLanes=0,T.pendingProps=S):T=ql(S,_,0,null),o=qr(o,_,d,null),T.return=a,o.return=a,T.sibling=o,a.child=T,a.child.memoizedState=bl(d),a.memoizedState=Al,o):ph(a,S));if(S=o.memoizedState,S!==null){if(Y=S.dehydrated,Y!==null){if(O)return a.flags&256?(a.flags&=-257,Cl(o,a,d,Error(l(422)))):a.memoizedState!==null?(a.child=o.child,a.flags|=128,null):(T=_.fallback,S=a.mode,_=ql({mode:"visible",children:_.children},S,0,null),T=qr(T,S,d,null),T.flags|=2,_.return=a,T.return=a,_.sibling=T,a.child=_,a.mode&1&&Us(a,o.child,null,d),a.child.memoizedState=bl(d),a.memoizedState=Al,T);if(!(a.mode&1))a=Cl(o,a,d,null);else if(Io(Y))a=Cl(o,a,d,Error(l(419)));else if(_=(d&o.childLanes)!==0,Jn||_){if(_=nn,_!==null){switch(d&-d){case 4:T=2;break;case 16:T=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:T=32;break;case 536870912:T=268435456;break;default:T=0}_=T&(_.suspendedLanes|d)?0:T,_!==0&&_!==S.retryLane&&(S.retryLane=_,ui(o,_,-1))}Nh(),a=Cl(o,a,d,Error(l(421)))}else Lo(Y)?(a.flags|=128,a.child=o.child,a=cx.bind(null,o),As(Y,a),a=null):(d=S.treeContext,xe&&(jn=el(Y),Zn=a,Ht=!0,mi=null,Uo=!1,d!==null&&(oi[ai++]=Yi,oi[ai++]=qi,oi[ai++]=Br,Yi=d.id,qi=d.overflow,Br=a)),a=ph(a,a.pendingProps.children),a.flags|=4096);return a}return T?(_=_m(o,a,_.children,_.fallback,d),T=a.child,S=o.child.memoizedState,T.memoizedState=S===null?bl(d):{baseLanes:S.baseLanes|d,cachePool:null},T.childLanes=o.childLanes&~d,a.memoizedState=Al,_):(d=gm(o,a,_.children,d),a.memoizedState=null,d)}return T?(_=_m(o,a,_.children,_.fallback,d),T=a.child,S=o.child.memoizedState,T.memoizedState=S===null?bl(d):{baseLanes:S.baseLanes|d,cachePool:null},T.childLanes=o.childLanes&~d,a.memoizedState=Al,_):(d=gm(o,a,_.children,d),a.memoizedState=null,d)}function ph(o,a){return a=ql({mode:"visible",children:a},o.mode,0,null),a.return=o,o.child=a}function gm(o,a,d,_){var S=o.child;return o=S.sibling,d=_r(S,{mode:"visible",children:d}),!(a.mode&1)&&(d.lanes=_),d.return=a,d.sibling=null,o!==null&&(_=a.deletions,_===null?(a.deletions=[o],a.flags|=16):_.push(o)),a.child=d}function _m(o,a,d,_,S){var T=a.mode;o=o.child;var O=o.sibling,Y={mode:"hidden",children:d};return!(T&1)&&a.child!==o?(d=a.child,d.childLanes=0,d.pendingProps=Y,a.deletions=null):(d=_r(o,Y),d.subtreeFlags=o.subtreeFlags&14680064),O!==null?_=_r(O,_):(_=qr(_,T,S,null),_.flags|=2),_.return=a,d.return=a,d.sibling=_,a.child=d,_}function Cl(o,a,d,_){return _!==null&&$u(_),Us(a,o.child,null,d),o=ph(a,a.pendingProps.children),o.flags|=2,a.memoizedState=null,o}function vm(o,a,d){o.lanes|=a;var _=o.alternate;_!==null&&(_.lanes|=a),Xu(o.return,a,d)}function mh(o,a,d,_,S){var T=o.memoizedState;T===null?o.memoizedState={isBackwards:a,rendering:null,renderingStartTime:0,last:_,tail:d,tailMode:S}:(T.isBackwards=a,T.rendering=null,T.renderingStartTime=0,T.last=_,T.tail=d,T.tailMode=S)}function ym(o,a,d){var _=a.pendingProps,S=_.revealOrder,T=_.tail;if(Dn(o,a,_.children,d),_=Gt.current,_&2)_=_&1|2,a.flags|=128;else{if(o!==null&&o.flags&128)e:for(o=a.child;o!==null;){if(o.tag===13)o.memoizedState!==null&&vm(o,d,a);else if(o.tag===19)vm(o,d,a);else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===a)break e;for(;o.sibling===null;){if(o.return===null||o.return===a)break e;o=o.return}o.sibling.return=o.return,o=o.sibling}_&=1}if(ke(Gt,_),!(a.mode&1))a.memoizedState=null;else switch(S){case"forwards":for(d=a.child,S=null;d!==null;)o=d.alternate,o!==null&&gl(o)===null&&(S=d),d=d.sibling;d=S,d===null?(S=a.child,a.child=null):(S=d.sibling,d.sibling=null),mh(a,!1,S,d,T);break;case"backwards":for(d=null,S=a.child,a.child=null;S!==null;){if(o=S.alternate,o!==null&&gl(o)===null){a.child=S;break}o=S.sibling,S.sibling=d,d=S,S=o}mh(a,!0,d,null,T);break;case"together":mh(a,!1,null,null,void 0);break;default:a.memoizedState=null}return a.child}function ji(o,a,d){if(o!==null&&(a.dependencies=o.dependencies),ks|=a.lanes,!(d&a.childLanes))return null;if(o!==null&&a.child!==o.child)throw Error(l(153));if(a.child!==null){for(o=a.child,d=_r(o,o.pendingProps),a.child=d,d.return=a;o.sibling!==null;)o=o.sibling,d=d.sibling=_r(o,o.pendingProps),d.return=a;d.sibling=null}return a.child}function Ky(o,a,d){switch(a.tag){case 3:dm(a),Ns();break;case 5:Up(a);break;case 1:fn(a.type)&&yn(a);break;case 4:eh(a,a.stateNode.containerInfo);break;case 10:xp(a,a.type._context,a.memoizedProps.value);break;case 13:var _=a.memoizedState;if(_!==null)return _.dehydrated!==null?(ke(Gt,Gt.current&1),a.flags|=128,null):d&a.child.childLanes?mm(o,a,d):(ke(Gt,Gt.current&1),o=ji(o,a,d),o!==null?o.sibling:null);ke(Gt,Gt.current&1);break;case 19:if(_=(d&a.childLanes)!==0,o.flags&128){if(_)return ym(o,a,d);a.flags|=128}var S=a.memoizedState;if(S!==null&&(S.rendering=null,S.tail=null,S.lastEffect=null),ke(Gt,Gt.current),_)break;return null;case 22:case 23:return a.lanes=0,um(o,a,d)}return ji(o,a,d)}function Qy(o,a){switch(Ju(a),a.tag){case 1:return fn(a.type)&&jt(),o=a.flags,o&65536?(a.flags=o&-65537|128,a):null;case 3:return Fs(),st(Xt),st(St),ih(),o=a.flags,o&65536&&!(o&128)?(a.flags=o&-65537|128,a):null;case 5:return th(a),null;case 13:if(st(Gt),o=a.memoizedState,o!==null&&o.dehydrated!==null){if(a.alternate===null)throw Error(l(340));Ns()}return o=a.flags,o&65536?(a.flags=o&-65537|128,a):null;case 19:return st(Gt),null;case 4:return Fs(),null;case 10:return Wu(a.type._context),null;case 22:case 23:return Dh(),null;case 24:return null;default:return null}}var Rl=!1,Vr=!1,$y=typeof WeakSet=="function"?WeakSet:Set,Le=null;function Pl(o,a){var d=o.ref;if(d!==null)if(typeof d=="function")try{d(null)}catch(_){Vn(o,a,_)}else d.current=null}function gh(o,a,d){try{d()}catch(_){Vn(o,a,_)}}var xm=!1;function ex(o,a){for(H(o.containerInfo),Le=a;Le!==null;)if(o=Le,a=o.child,(o.subtreeFlags&1028)!==0&&a!==null)a.return=o,Le=a;else for(;Le!==null;){o=Le;try{var d=o.alternate;if(o.flags&1024)switch(o.tag){case 0:case 11:case 15:break;case 1:if(d!==null){var _=d.memoizedProps,S=d.memoizedState,T=o.stateNode,O=T.getSnapshotBeforeUpdate(o.elementType===o.type?_:pi(o.type,_),S);T.__reactInternalSnapshotBeforeUpdate=O}break;case 3:Ze&&we(o.stateNode.containerInfo);break;case 5:case 6:case 4:case 17:break;default:throw Error(l(163))}}catch(Y){Vn(o,o.return,Y)}if(a=o.sibling,a!==null){a.return=o.return,Le=a;break}Le=o.return}return d=xm,xm=!1,d}function Gr(o,a,d){var _=a.updateQueue;if(_=_!==null?_.lastEffect:null,_!==null){var S=_=_.next;do{if((S.tag&o)===o){var T=S.destroy;S.destroy=void 0,T!==void 0&&gh(a,d,T)}S=S.next}while(S!==_)}}function qo(o,a){if(a=a.updateQueue,a=a!==null?a.lastEffect:null,a!==null){var d=a=a.next;do{if((d.tag&o)===o){var _=d.create;d.destroy=_()}d=d.next}while(d!==a)}}function _h(o){var a=o.ref;if(a!==null){var d=o.stateNode;switch(o.tag){case 5:o=te(d);break;default:o=d}typeof a=="function"?a(o):a.current=o}}function Sm(o,a,d){if(Pi&&typeof Pi.onCommitFiberUnmount=="function")try{Pi.onCommitFiberUnmount(sl,a)}catch{}switch(a.tag){case 0:case 11:case 14:case 15:if(o=a.updateQueue,o!==null&&(o=o.lastEffect,o!==null)){var _=o=o.next;do{var S=_,T=S.destroy;S=S.tag,T!==void 0&&(S&2||S&4)&&gh(a,d,T),_=_.next}while(_!==o)}break;case 1:if(Pl(a,d),o=a.stateNode,typeof o.componentWillUnmount=="function")try{o.props=a.memoizedProps,o.state=a.memoizedState,o.componentWillUnmount()}catch(O){Vn(a,d,O)}break;case 5:Pl(a,d);break;case 4:Ze?bm(o,a,d):k&&k&&(a=a.stateNode.containerInfo,d=$e(a),Tt(a,d))}}function Mm(o,a,d){for(var _=a;;)if(Sm(o,_,d),_.child===null||Ze&&_.tag===4){if(_===a)break;for(;_.sibling===null;){if(_.return===null||_.return===a)return;_=_.return}_.sibling.return=_.return,_=_.sibling}else _.child.return=_,_=_.child}function Em(o){var a=o.alternate;a!==null&&(o.alternate=null,Em(a)),o.child=null,o.deletions=null,o.sibling=null,o.tag===5&&(a=o.stateNode,a!==null&&Ye(a)),o.stateNode=null,o.return=null,o.dependencies=null,o.memoizedProps=null,o.memoizedState=null,o.pendingProps=null,o.stateNode=null,o.updateQueue=null}function wm(o){return o.tag===5||o.tag===3||o.tag===4}function Tm(o){e:for(;;){for(;o.sibling===null;){if(o.return===null||wm(o.return))return null;o=o.return}for(o.sibling.return=o.return,o=o.sibling;o.tag!==5&&o.tag!==6&&o.tag!==18;){if(o.flags&2||o.child===null||o.tag===4)continue e;o.child.return=o,o=o.child}if(!(o.flags&2))return o.stateNode}}function Am(o){if(Ze){e:{for(var a=o.return;a!==null;){if(wm(a))break e;a=a.return}throw Error(l(160))}var d=a;switch(d.tag){case 5:a=d.stateNode,d.flags&32&&(me(a),d.flags&=-33),d=Tm(o),yh(o,d,a);break;case 3:case 4:a=d.stateNode.containerInfo,d=Tm(o),vh(o,d,a);break;default:throw Error(l(161))}}}function vh(o,a,d){var _=o.tag;if(_===5||_===6)o=o.stateNode,a?Ke(d,o,a):ut(d,o);else if(_!==4&&(o=o.child,o!==null))for(vh(o,a,d),o=o.sibling;o!==null;)vh(o,a,d),o=o.sibling}function yh(o,a,d){var _=o.tag;if(_===5||_===6)o=o.stateNode,a?at(d,o,a):Qe(d,o);else if(_!==4&&(o=o.child,o!==null))for(yh(o,a,d),o=o.sibling;o!==null;)yh(o,a,d),o=o.sibling}function bm(o,a,d){for(var _=a,S=!1,T,O;;){if(!S){S=_.return;e:for(;;){if(S===null)throw Error(l(160));switch(T=S.stateNode,S.tag){case 5:O=!1;break e;case 3:T=T.containerInfo,O=!0;break e;case 4:T=T.containerInfo,O=!0;break e}S=S.return}S=!0}if(_.tag===5||_.tag===6)Mm(o,_,d),O?G(T,_.stateNode):ze(T,_.stateNode);else if(_.tag===18)O?ne(T,_.stateNode):re(T,_.stateNode);else if(_.tag===4){if(_.child!==null){T=_.stateNode.containerInfo,O=!0,_.child.return=_,_=_.child;continue}}else if(Sm(o,_,d),_.child!==null){_.child.return=_,_=_.child;continue}if(_===a)break;for(;_.sibling===null;){if(_.return===null||_.return===a)return;_=_.return,_.tag===4&&(S=!1)}_.sibling.return=_.return,_=_.sibling}}function xh(o,a){if(Ze){switch(a.tag){case 0:case 11:case 14:case 15:Gr(3,a,a.return),qo(3,a),Gr(5,a,a.return);return;case 1:return;case 5:var d=a.stateNode;if(d!=null){var _=a.memoizedProps;o=o!==null?o.memoizedProps:_;var S=a.type,T=a.updateQueue;a.updateQueue=null,T!==null&&mt(d,T,S,o,_,a)}return;case 6:if(a.stateNode===null)throw Error(l(162));d=a.memoizedProps,ve(a.stateNode,o!==null?o.memoizedProps:d,d);return;case 3:xe&&o!==null&&o.memoizedState.isDehydrated&&K(a.stateNode.containerInfo);return;case 12:return;case 13:Ll(a);return;case 19:Ll(a);return;case 17:return}throw Error(l(163))}switch(a.tag){case 0:case 11:case 14:case 15:Gr(3,a,a.return),qo(3,a),Gr(5,a,a.return);return;case 12:return;case 13:Ll(a);return;case 19:Ll(a);return;case 3:xe&&o!==null&&o.memoizedState.isDehydrated&&K(a.stateNode.containerInfo);break;case 22:case 23:return}e:if(k){switch(a.tag){case 1:case 5:case 6:break e;case 3:case 4:a=a.stateNode,Tt(a.containerInfo,a.pendingChildren);break e}throw Error(l(163))}}function Ll(o){var a=o.updateQueue;if(a!==null){o.updateQueue=null;var d=o.stateNode;d===null&&(d=o.stateNode=new $y),a.forEach(function(_){var S=ux.bind(null,o,_);d.has(_)||(d.add(_),_.then(S,S))})}}function tx(o,a){for(Le=a;Le!==null;){a=Le;var d=a.deletions;if(d!==null)for(var _=0;_<d.length;_++){var S=d[_];try{var T=o;Ze?bm(T,S,a):Mm(T,S,a);var O=S.alternate;O!==null&&(O.return=null),S.return=null}catch(qe){Vn(S,a,qe)}}if(d=a.child,a.subtreeFlags&12854&&d!==null)d.return=a,Le=d;else for(;Le!==null;){a=Le;try{var Y=a.flags;if(Y&32&&Ze&&me(a.stateNode),Y&512){var oe=a.alternate;if(oe!==null){var Ee=oe.ref;Ee!==null&&(typeof Ee=="function"?Ee(null):Ee.current=null)}}if(Y&8192)switch(a.tag){case 13:if(a.memoizedState!==null){var He=a.alternate;(He===null||He.memoizedState===null)&&(bh=dn())}break;case 22:var dt=a.memoizedState!==null,et=a.alternate,Ot=et!==null&&et.memoizedState!==null;if(d=a,Ze){e:if(_=d,S=dt,T=null,Ze)for(var Je=_;;){if(Je.tag===5){if(T===null){T=Je;var wn=Je.stateNode;S?Ne(wn):ye(Je.stateNode,Je.memoizedProps)}}else if(Je.tag===6){if(T===null){var fi=Je.stateNode;S?Ie(fi):W(fi,Je.memoizedProps)}}else if((Je.tag!==22&&Je.tag!==23||Je.memoizedState===null||Je===_)&&Je.child!==null){Je.child.return=Je,Je=Je.child;continue}if(Je===_)break;for(;Je.sibling===null;){if(Je.return===null||Je.return===_)break e;T===Je&&(T=null),Je=Je.return}T===Je&&(T=null),Je.sibling.return=Je.return,Je=Je.sibling}}if(dt&&!Ot&&d.mode&1){Le=d;for(var ee=d.child;ee!==null;){for(d=Le=ee;Le!==null;){_=Le;var q=_.child;switch(_.tag){case 0:case 11:case 14:case 15:Gr(4,_,_.return);break;case 1:Pl(_,_.return);var se=_.stateNode;if(typeof se.componentWillUnmount=="function"){var De=_.return;try{se.props=_.memoizedProps,se.state=_.memoizedState,se.componentWillUnmount()}catch(qe){Vn(_,De,qe)}}break;case 5:Pl(_,_.return);break;case 22:if(_.memoizedState!==null){Pm(d);continue}}q!==null?(q.return=_,Le=q):Pm(d)}ee=ee.sibling}}}switch(Y&4102){case 2:Am(a),a.flags&=-3;break;case 6:Am(a),a.flags&=-3,xh(a.alternate,a);break;case 4096:a.flags&=-4097;break;case 4100:a.flags&=-4097,xh(a.alternate,a);break;case 4:xh(a.alternate,a)}}catch(qe){Vn(a,a.return,qe)}if(d=a.sibling,d!==null){d.return=a.return,Le=d;break}Le=a.return}}}function nx(o,a,d){Le=o,Cm(o)}function Cm(o,a,d){for(var _=(o.mode&1)!==0;Le!==null;){var S=Le,T=S.child;if(S.tag===22&&_){var O=S.memoizedState!==null||Rl;if(!O){var Y=S.alternate,oe=Y!==null&&Y.memoizedState!==null||Vr;Y=Rl;var Ee=Vr;if(Rl=O,(Vr=oe)&&!Ee)for(Le=S;Le!==null;)O=Le,oe=O.child,O.tag===22&&O.memoizedState!==null?Lm(S):oe!==null?(oe.return=O,Le=oe):Lm(S);for(;T!==null;)Le=T,Cm(T),T=T.sibling;Le=S,Rl=Y,Vr=Ee}Rm(o)}else S.subtreeFlags&8772&&T!==null?(T.return=S,Le=T):Rm(o)}}function Rm(o){for(;Le!==null;){var a=Le;if(a.flags&8772){var d=a.alternate;try{if(a.flags&8772)switch(a.tag){case 0:case 11:case 15:Vr||qo(5,a);break;case 1:var _=a.stateNode;if(a.flags&4&&!Vr)if(d===null)_.componentDidMount();else{var S=a.elementType===a.type?d.memoizedProps:pi(a.type,d.memoizedProps);_.componentDidUpdate(S,d.memoizedState,_.__reactInternalSnapshotBeforeUpdate)}var T=a.updateQueue;T!==null&&Ep(a,T,_);break;case 3:var O=a.updateQueue;if(O!==null){if(d=null,a.child!==null)switch(a.child.tag){case 5:d=te(a.child.stateNode);break;case 1:d=a.child.stateNode}Ep(a,O,d)}break;case 5:var Y=a.stateNode;d===null&&a.flags&4&&wt(Y,a.type,a.memoizedProps,a);break;case 6:break;case 4:break;case 12:break;case 13:if(xe&&a.memoizedState===null){var oe=a.alternate;if(oe!==null){var Ee=oe.memoizedState;if(Ee!==null){var He=Ee.dehydrated;He!==null&&ie(He)}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(l(163))}Vr||a.flags&512&&_h(a)}catch(dt){Vn(a,a.return,dt)}}if(a===o){Le=null;break}if(d=a.sibling,d!==null){d.return=a.return,Le=d;break}Le=a.return}}function Pm(o){for(;Le!==null;){var a=Le;if(a===o){Le=null;break}var d=a.sibling;if(d!==null){d.return=a.return,Le=d;break}Le=a.return}}function Lm(o){for(;Le!==null;){var a=Le;try{switch(a.tag){case 0:case 11:case 15:var d=a.return;try{qo(4,a)}catch(oe){Vn(a,d,oe)}break;case 1:var _=a.stateNode;if(typeof _.componentDidMount=="function"){var S=a.return;try{_.componentDidMount()}catch(oe){Vn(a,S,oe)}}var T=a.return;try{_h(a)}catch(oe){Vn(a,T,oe)}break;case 5:var O=a.return;try{_h(a)}catch(oe){Vn(a,O,oe)}}}catch(oe){Vn(a,a.return,oe)}if(a===o){Le=null;break}var Y=a.sibling;if(Y!==null){Y.return=a.return,Le=Y;break}Le=a.return}}var Il=0,Dl=1,Nl=2,Ul=3,Ol=4;if(typeof Symbol=="function"&&Symbol.for){var Zo=Symbol.for;Il=Zo("selector.component"),Dl=Zo("selector.has_pseudo_class"),Nl=Zo("selector.role"),Ul=Zo("selector.test_id"),Ol=Zo("selector.text")}function Sh(o){var a=fe(o);if(a!=null){if(typeof a.memoizedProps["data-testname"]!="string")throw Error(l(364));return a}if(o=Q(o),o===null)throw Error(l(362));return o.stateNode.current}function Mh(o,a){switch(a.$$typeof){case Il:if(o.type===a.value)return!0;break;case Dl:e:{a=a.value,o=[o,0];for(var d=0;d<o.length;){var _=o[d++],S=o[d++],T=a[S];if(_.tag!==5||!pe(_)){for(;T!=null&&Mh(_,T);)S++,T=a[S];if(S===a.length){a=!0;break e}else for(_=_.child;_!==null;)o.push(_,S),_=_.sibling}}a=!1}return a;case Nl:if(o.tag===5&&Ge(o.stateNode,a.value))return!0;break;case Ol:if((o.tag===5||o.tag===6)&&(o=ge(o),o!==null&&0<=o.indexOf(a.value)))return!0;break;case Ul:if(o.tag===5&&(o=o.memoizedProps["data-testname"],typeof o=="string"&&o.toLowerCase()===a.value.toLowerCase()))return!0;break;default:throw Error(l(365))}return!1}function Eh(o){switch(o.$$typeof){case Il:return"<"+(I(o.value)||"Unknown")+">";case Dl:return":has("+(Eh(o)||"")+")";case Nl:return'[role="'+o.value+'"]';case Ol:return'"'+o.value+'"';case Ul:return'[data-testname="'+o.value+'"]';default:throw Error(l(365))}}function Im(o,a){var d=[];o=[o,0];for(var _=0;_<o.length;){var S=o[_++],T=o[_++],O=a[T];if(S.tag!==5||!pe(S)){for(;O!=null&&Mh(S,O);)T++,O=a[T];if(T===a.length)d.push(S);else for(S=S.child;S!==null;)o.push(S,T),S=S.sibling}}return d}function wh(o,a){if(!P)throw Error(l(363));o=Sh(o),o=Im(o,a),a=[],o=Array.from(o);for(var d=0;d<o.length;){var _=o[d++];if(_.tag===5)pe(_)||a.push(_.stateNode);else for(_=_.child;_!==null;)o.push(_),_=_.sibling}return a}var ix=Math.ceil,Fl=c.ReactCurrentDispatcher,Th=c.ReactCurrentOwner,Jt=c.ReactCurrentBatchConfig,Mt=0,nn=null,rn=null,xn=0,Kn=0,Bs=hn(0),on=0,jo=null,ks=0,zl=0,Ah=0,Jo=null,kn=null,bh=0,Ch=1/0;function Hs(){Ch=dn()+500}var Bl=!1,Rh=null,dr=null,kl=!1,pr=null,Hl=0,Ko=0,Ph=null,Vl=-1,Gl=0;function Nn(){return Mt&6?dn():Vl!==-1?Vl:Vl=dn()}function mr(o){return o.mode&1?Mt&2&&xn!==0?xn&-xn:By.transition!==null?(Gl===0&&(o=nl,nl<<=1,!(nl&4194240)&&(nl=64),Gl=o),Gl):(o=Ct,o!==0?o:de()):1}function ui(o,a,d){if(50<Ko)throw Ko=0,Ph=null,Error(l(185));var _=Wl(o,a);return _===null?null:(No(_,a,d),(!(Mt&2)||_!==nn)&&(_===nn&&(!(Mt&2)&&(zl|=a),on===4&&gr(_,xn)),Hn(_,d),a===1&&Mt===0&&!(o.mode&1)&&(Hs(),ol&&Ii())),_)}function Wl(o,a){o.lanes|=a;var d=o.alternate;for(d!==null&&(d.lanes|=a),d=o,o=o.return;o!==null;)o.childLanes|=a,d=o.alternate,d!==null&&(d.childLanes|=a),d=o,o=o.return;return d.tag===3?d.stateNode:null}function Hn(o,a){var d=o.callbackNode;Py(o,a);var _=rl(o,o===nn?xn:0);if(_===0)d!==null&&vp(d),o.callbackNode=null,o.callbackPriority=0;else if(a=_&-_,o.callbackPriority!==a){if(d!=null&&vp(d),a===1)o.tag===0?zy(Nm.bind(null,o)):yp(Nm.bind(null,o)),Pe?D(function(){Mt===0&&Ii()}):zu(Bu,Ii),d=null;else{switch(_p(_)){case 1:d=Bu;break;case 4:d=Ny;break;case 16:d=ku;break;case 536870912:d=Uy;break;default:d=ku}d=Gm(d,Dm.bind(null,o))}o.callbackPriority=a,o.callbackNode=d}}function Dm(o,a){if(Vl=-1,Gl=0,Mt&6)throw Error(l(327));var d=o.callbackNode;if(Yr()&&o.callbackNode!==d)return null;var _=rl(o,o===nn?xn:0);if(_===0)return null;if(_&30||_&o.expiredLanes||a)a=Xl(o,_);else{a=_;var S=Mt;Mt|=2;var T=Fm();(nn!==o||xn!==a)&&(Hs(),Wr(o,a));do try{ox();break}catch(Y){Om(o,Y)}while(!0);Gu(),Fl.current=T,Mt=S,rn!==null?a=0:(nn=null,xn=0,a=on)}if(a!==0){if(a===2&&(S=Uu(o),S!==0&&(_=S,a=Lh(o,S))),a===1)throw d=jo,Wr(o,0),gr(o,_),Hn(o,dn()),d;if(a===6)gr(o,_);else{if(S=o.current.alternate,!(_&30)&&!rx(S)&&(a=Xl(o,_),a===2&&(T=Uu(o),T!==0&&(_=T,a=Lh(o,T))),a===1))throw d=jo,Wr(o,0),gr(o,_),Hn(o,dn()),d;switch(o.finishedWork=S,o.finishedLanes=_,a){case 0:case 1:throw Error(l(345));case 2:Xr(o,kn);break;case 3:if(gr(o,_),(_&130023424)===_&&(a=bh+500-dn(),10<a)){if(rl(o,0)!==0)break;if(S=o.suspendedLanes,(S&_)!==_){Nn(),o.pingedLanes|=o.suspendedLanes&S;break}o.timeoutHandle=Ae(Xr.bind(null,o,kn),a);break}Xr(o,kn);break;case 4:if(gr(o,_),(_&4194240)===_)break;for(a=o.eventTimes,S=-1;0<_;){var O=31-qn(_);T=1<<O,O=a[O],O>S&&(S=O),_&=~T}if(_=S,_=dn()-_,_=(120>_?120:480>_?480:1080>_?1080:1920>_?1920:3e3>_?3e3:4320>_?4320:1960*ix(_/1960))-_,10<_){o.timeoutHandle=Ae(Xr.bind(null,o,kn),_);break}Xr(o,kn);break;case 5:Xr(o,kn);break;default:throw Error(l(329))}}}return Hn(o,dn()),o.callbackNode===d?Dm.bind(null,o):null}function Lh(o,a){var d=Jo;return o.current.memoizedState.isDehydrated&&(Wr(o,a).flags|=256),o=Xl(o,a),o!==2&&(a=kn,kn=d,a!==null&&Ih(a)),o}function Ih(o){kn===null?kn=o:kn.push.apply(kn,o)}function rx(o){for(var a=o;;){if(a.flags&16384){var d=a.updateQueue;if(d!==null&&(d=d.stores,d!==null))for(var _=0;_<d.length;_++){var S=d[_],T=S.getSnapshot;S=S.value;try{if(!Li(T(),S))return!1}catch{return!1}}}if(d=a.child,a.subtreeFlags&16384&&d!==null)d.return=a,a=d;else{if(a===o)break;for(;a.sibling===null;){if(a.return===null||a.return===o)return!0;a=a.return}a.sibling.return=a.return,a=a.sibling}}return!0}function gr(o,a){for(a&=~Ah,a&=~zl,o.suspendedLanes|=a,o.pingedLanes&=~a,o=o.expirationTimes;0<a;){var d=31-qn(a),_=1<<d;o[d]=-1,a&=~_}}function Nm(o){if(Mt&6)throw Error(l(327));Yr();var a=rl(o,0);if(!(a&1))return Hn(o,dn()),null;var d=Xl(o,a);if(o.tag!==0&&d===2){var _=Uu(o);_!==0&&(a=_,d=Lh(o,_))}if(d===1)throw d=jo,Wr(o,0),gr(o,a),Hn(o,dn()),d;if(d===6)throw Error(l(345));return o.finishedWork=o.current.alternate,o.finishedLanes=a,Xr(o,kn),Hn(o,dn()),null}function Um(o){pr!==null&&pr.tag===0&&!(Mt&6)&&Yr();var a=Mt;Mt|=1;var d=Jt.transition,_=Ct;try{if(Jt.transition=null,Ct=1,o)return o()}finally{Ct=_,Jt.transition=d,Mt=a,!(Mt&6)&&Ii()}}function Dh(){Kn=Bs.current,st(Bs)}function Wr(o,a){o.finishedWork=null,o.finishedLanes=0;var d=o.timeoutHandle;if(d!==ot&&(o.timeoutHandle=ot,nt(d)),rn!==null)for(d=rn.return;d!==null;){var _=d;switch(Ju(_),_.tag){case 1:_=_.type.childContextTypes,_!=null&&jt();break;case 3:Fs(),st(Xt),st(St),ih();break;case 5:th(_);break;case 4:Fs();break;case 13:st(Gt);break;case 19:st(Gt);break;case 10:Wu(_.type._context);break;case 22:case 23:Dh()}d=d.return}if(nn=o,rn=o=_r(o.current,null),xn=Kn=a,on=0,jo=null,Ah=zl=ks=0,kn=Jo=null,Di!==null){for(a=0;a<Di.length;a++)if(d=Di[a],_=d.interleaved,_!==null){d.interleaved=null;var S=_.next,T=d.pending;if(T!==null){var O=T.next;T.next=S,_.next=O}d.pending=_}Di=null}return o}function Om(o,a){do{var d=rn;try{if(Gu(),_l.current=El,vl){for(var _=Yt.memoizedState;_!==null;){var S=_.queue;S!==null&&(S.pending=null),_=_.next}vl=!1}if(zs=0,pn=Sn=Yt=null,ko=!1,Ho=0,Th.current=null,d===null||d.return===null){on=1,jo=a,rn=null;break}e:{var T=o,O=d.return,Y=d,oe=a;if(a=xn,Y.flags|=32768,oe!==null&&typeof oe=="object"&&typeof oe.then=="function"){var Ee=oe,He=Y,dt=He.tag;if(!(He.mode&1)&&(dt===0||dt===11||dt===15)){var et=He.alternate;et?(He.updateQueue=et.updateQueue,He.memoizedState=et.memoizedState,He.lanes=et.lanes):(He.updateQueue=null,He.memoizedState=null)}var Ot=im(O);if(Ot!==null){Ot.flags&=-257,rm(Ot,O,Y,T,a),Ot.mode&1&&nm(T,Ee,a),a=Ot,oe=Ee;var Je=a.updateQueue;if(Je===null){var wn=new Set;wn.add(oe),a.updateQueue=wn}else Je.add(oe);break e}else{if(!(a&1)){nm(T,Ee,a),Nh();break e}oe=Error(l(426))}}else if(Ht&&Y.mode&1){var fi=im(O);if(fi!==null){!(fi.flags&65536)&&(fi.flags|=256),rm(fi,O,Y,T,a),$u(oe);break e}}T=oe,on!==4&&(on=2),Jo===null?Jo=[T]:Jo.push(T),oe=uh(oe,Y),Y=O;do{switch(Y.tag){case 3:Y.flags|=65536,a&=-a,Y.lanes|=a;var ee=em(Y,oe,a);Mp(Y,ee);break e;case 1:T=oe;var q=Y.type,se=Y.stateNode;if(!(Y.flags&128)&&(typeof q.getDerivedStateFromError=="function"||se!==null&&typeof se.componentDidCatch=="function"&&(dr===null||!dr.has(se)))){Y.flags|=65536,a&=-a,Y.lanes|=a;var De=tm(Y,T,a);Mp(Y,De);break e}}Y=Y.return}while(Y!==null)}Bm(d)}catch(qe){a=qe,rn===d&&d!==null&&(rn=d=d.return);continue}break}while(!0)}function Fm(){var o=Fl.current;return Fl.current=El,o===null?El:o}function Nh(){(on===0||on===3||on===2)&&(on=4),nn===null||!(ks&268435455)&&!(zl&268435455)||gr(nn,xn)}function Xl(o,a){var d=Mt;Mt|=2;var _=Fm();nn===o&&xn===a||Wr(o,a);do try{sx();break}catch(S){Om(o,S)}while(!0);if(Gu(),Mt=d,Fl.current=_,rn!==null)throw Error(l(261));return nn=null,xn=0,on}function sx(){for(;rn!==null;)zm(rn)}function ox(){for(;rn!==null&&!Iy();)zm(rn)}function zm(o){var a=Vm(o.alternate,o,Kn);o.memoizedProps=o.pendingProps,a===null?Bm(o):rn=a,Th.current=null}function Bm(o){var a=o;do{var d=a.alternate;if(o=a.return,a.flags&32768){if(d=Qy(d,a),d!==null){d.flags&=32767,rn=d;return}if(o!==null)o.flags|=32768,o.subtreeFlags=0,o.deletions=null;else{on=6,rn=null;return}}else if(d=jy(d,a,Kn),d!==null){rn=d;return}if(a=a.sibling,a!==null){rn=a;return}rn=a=o}while(a!==null);on===0&&(on=5)}function Xr(o,a){var d=Ct,_=Jt.transition;try{Jt.transition=null,Ct=1,ax(o,a,d)}finally{Jt.transition=_,Ct=d}return null}function ax(o,a,d){do Yr();while(pr!==null);if(Mt&6)throw Error(l(327));var _=o.finishedWork,S=o.finishedLanes;if(_===null)return null;if(o.finishedWork=null,o.finishedLanes=0,_===o.current)throw Error(l(177));o.callbackNode=null,o.callbackPriority=0;var T=_.lanes|_.childLanes;if(Ly(o,T),o===nn&&(rn=nn=null,xn=0),!(_.subtreeFlags&2064)&&!(_.flags&2064)||kl||(kl=!0,Gm(ku,function(){return Yr(),null})),T=(_.flags&15990)!==0,_.subtreeFlags&15990||T){T=Jt.transition,Jt.transition=null;var O=Ct;Ct=1;var Y=Mt;Mt|=4,Th.current=null,ex(o,_),tx(o,_),X(o.containerInfo),o.current=_,nx(_),Dy(),Mt=Y,Ct=O,Jt.transition=T}else o.current=_;if(kl&&(kl=!1,pr=o,Hl=S),T=o.pendingLanes,T===0&&(dr=null),Oy(_.stateNode),Hn(o,dn()),a!==null)for(d=o.onRecoverableError,_=0;_<a.length;_++)d(a[_]);if(Bl)throw Bl=!1,o=Rh,Rh=null,o;return Hl&1&&o.tag!==0&&Yr(),T=o.pendingLanes,T&1?o===Ph?Ko++:(Ko=0,Ph=o):Ko=0,Ii(),null}function Yr(){if(pr!==null){var o=_p(Hl),a=Jt.transition,d=Ct;try{if(Jt.transition=null,Ct=16>o?16:o,pr===null)var _=!1;else{if(o=pr,pr=null,Hl=0,Mt&6)throw Error(l(331));var S=Mt;for(Mt|=4,Le=o.current;Le!==null;){var T=Le,O=T.child;if(Le.flags&16){var Y=T.deletions;if(Y!==null){for(var oe=0;oe<Y.length;oe++){var Ee=Y[oe];for(Le=Ee;Le!==null;){var He=Le;switch(He.tag){case 0:case 11:case 15:Gr(8,He,T)}var dt=He.child;if(dt!==null)dt.return=He,Le=dt;else for(;Le!==null;){He=Le;var et=He.sibling,Ot=He.return;if(Em(He),He===Ee){Le=null;break}if(et!==null){et.return=Ot,Le=et;break}Le=Ot}}}var Je=T.alternate;if(Je!==null){var wn=Je.child;if(wn!==null){Je.child=null;do{var fi=wn.sibling;wn.sibling=null,wn=fi}while(wn!==null)}}Le=T}}if(T.subtreeFlags&2064&&O!==null)O.return=T,Le=O;else e:for(;Le!==null;){if(T=Le,T.flags&2048)switch(T.tag){case 0:case 11:case 15:Gr(9,T,T.return)}var ee=T.sibling;if(ee!==null){ee.return=T.return,Le=ee;break e}Le=T.return}}var q=o.current;for(Le=q;Le!==null;){O=Le;var se=O.child;if(O.subtreeFlags&2064&&se!==null)se.return=O,Le=se;else e:for(O=q;Le!==null;){if(Y=Le,Y.flags&2048)try{switch(Y.tag){case 0:case 11:case 15:qo(9,Y)}}catch(qe){Vn(Y,Y.return,qe)}if(Y===O){Le=null;break e}var De=Y.sibling;if(De!==null){De.return=Y.return,Le=De;break e}Le=Y.return}}if(Mt=S,Ii(),Pi&&typeof Pi.onPostCommitFiberRoot=="function")try{Pi.onPostCommitFiberRoot(sl,o)}catch{}_=!0}return _}finally{Ct=d,Jt.transition=a}}return!1}function km(o,a,d){a=uh(d,a),a=em(o,a,1),fr(o,a),a=Nn(),o=Wl(o,1),o!==null&&(No(o,1,a),Hn(o,a))}function Vn(o,a,d){if(o.tag===3)km(o,o,d);else for(;a!==null;){if(a.tag===3){km(a,o,d);break}else if(a.tag===1){var _=a.stateNode;if(typeof a.type.getDerivedStateFromError=="function"||typeof _.componentDidCatch=="function"&&(dr===null||!dr.has(_))){o=uh(d,o),o=tm(a,o,1),fr(a,o),o=Nn(),a=Wl(a,1),a!==null&&(No(a,1,o),Hn(a,o));break}}a=a.return}}function lx(o,a,d){var _=o.pingCache;_!==null&&_.delete(a),a=Nn(),o.pingedLanes|=o.suspendedLanes&d,nn===o&&(xn&d)===d&&(on===4||on===3&&(xn&130023424)===xn&&500>dn()-bh?Wr(o,0):Ah|=d),Hn(o,a)}function Hm(o,a){a===0&&(o.mode&1?(a=il,il<<=1,!(il&130023424)&&(il=4194304)):a=1);var d=Nn();o=Wl(o,a),o!==null&&(No(o,a,d),Hn(o,d))}function cx(o){var a=o.memoizedState,d=0;a!==null&&(d=a.retryLane),Hm(o,d)}function ux(o,a){var d=0;switch(o.tag){case 13:var _=o.stateNode,S=o.memoizedState;S!==null&&(d=S.retryLane);break;case 19:_=o.stateNode;break;default:throw Error(l(314))}_!==null&&_.delete(a),Hm(o,d)}var Vm;Vm=function(o,a,d){if(o!==null)if(o.memoizedProps!==a.pendingProps||Xt.current)Jn=!0;else{if(!(o.lanes&d)&&!(a.flags&128))return Jn=!1,Ky(o,a,d);Jn=!!(o.flags&131072)}else Jn=!1,Ht&&a.flags&1048576&&Cp(a,pl,a.index);switch(a.lanes=0,a.tag){case 2:var _=a.type;o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),o=a.pendingProps;var S=ri(a,St.current);Ls(a,d),S=sh(null,a,_,o,S,d);var T=oh();return a.flags|=1,typeof S=="object"&&S!==null&&typeof S.render=="function"&&S.$$typeof===void 0?(a.tag=1,a.memoizedState=null,a.updateQueue=null,fn(_)?(T=!0,yn(a)):T=!1,a.memoizedState=S.state!==null&&S.state!==void 0?S.state:null,Yu(a),S.updater=fl,a.stateNode=S,S._reactInternals=a,Zu(a,_,o,d),a=dh(null,a,_,!0,T,d)):(a.tag=0,Ht&&T&&ju(a),Dn(null,a,S,d),a=a.child),a;case 16:_=a.elementType;e:{switch(o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),o=a.pendingProps,S=_._init,_=S(_._payload),a.type=_,S=a.tag=fx(_),o=pi(_,o),S){case 0:a=fh(null,a,_,o,d);break e;case 1:a=fm(null,a,_,o,d);break e;case 11:a=am(null,a,_,o,d);break e;case 14:a=lm(null,a,_,pi(_.type,o),d);break e}throw Error(l(306,_,""))}return a;case 0:return _=a.type,S=a.pendingProps,S=a.elementType===_?S:pi(_,S),fh(o,a,_,S,d);case 1:return _=a.type,S=a.pendingProps,S=a.elementType===_?S:pi(_,S),fm(o,a,_,S,d);case 3:e:{if(dm(a),o===null)throw Error(l(387));_=a.pendingProps,T=a.memoizedState,S=T.element,Sp(o,a),hl(a,_,null,d);var O=a.memoizedState;if(_=O.element,xe&&T.isDehydrated)if(T={element:_,isDehydrated:!1,cache:O.cache,transitions:O.transitions},a.updateQueue.baseState=T,a.memoizedState=T,a.flags&256){S=Error(l(423)),a=pm(o,a,_,d,S);break e}else if(_!==S){S=Error(l(424)),a=pm(o,a,_,d,S);break e}else for(xe&&(jn=$a(a.stateNode.containerInfo),Zn=a,Ht=!0,mi=null,Uo=!1),d=Np(a,null,_,d),a.child=d;d;)d.flags=d.flags&-3|4096,d=d.sibling;else{if(Ns(),_===S){a=ji(o,a,d);break e}Dn(o,a,_,d)}a=a.child}return a;case 5:return Up(a),o===null&&Qu(a),_=a.type,S=a.pendingProps,T=o!==null?o.memoizedProps:null,O=S.children,Me(_,S)?O=null:T!==null&&Me(_,T)&&(a.flags|=32),hm(o,a),Dn(o,a,O,d),a.child;case 6:return o===null&&Qu(a),null;case 13:return mm(o,a,d);case 4:return eh(a,a.stateNode.containerInfo),_=a.pendingProps,o===null?a.child=Us(a,null,_,d):Dn(o,a,_,d),a.child;case 11:return _=a.type,S=a.pendingProps,S=a.elementType===_?S:pi(_,S),am(o,a,_,S,d);case 7:return Dn(o,a,a.pendingProps,d),a.child;case 8:return Dn(o,a,a.pendingProps.children,d),a.child;case 12:return Dn(o,a,a.pendingProps.children,d),a.child;case 10:e:{if(_=a.type._context,S=a.pendingProps,T=a.memoizedProps,O=S.value,xp(a,_,O),T!==null)if(Li(T.value,O)){if(T.children===S.children&&!Xt.current){a=ji(o,a,d);break e}}else for(T=a.child,T!==null&&(T.return=a);T!==null;){var Y=T.dependencies;if(Y!==null){O=T.child;for(var oe=Y.firstContext;oe!==null;){if(oe.context===_){if(T.tag===1){oe=Xi(-1,d&-d),oe.tag=2;var Ee=T.updateQueue;if(Ee!==null){Ee=Ee.shared;var He=Ee.pending;He===null?oe.next=oe:(oe.next=He.next,He.next=oe),Ee.pending=oe}}T.lanes|=d,oe=T.alternate,oe!==null&&(oe.lanes|=d),Xu(T.return,d,a),Y.lanes|=d;break}oe=oe.next}}else if(T.tag===10)O=T.type===a.type?null:T.child;else if(T.tag===18){if(O=T.return,O===null)throw Error(l(341));O.lanes|=d,Y=O.alternate,Y!==null&&(Y.lanes|=d),Xu(O,d,a),O=T.sibling}else O=T.child;if(O!==null)O.return=T;else for(O=T;O!==null;){if(O===a){O=null;break}if(T=O.sibling,T!==null){T.return=O.return,O=T;break}O=O.return}T=O}Dn(o,a,S.children,d),a=a.child}return a;case 9:return S=a.type,_=a.pendingProps.children,Ls(a,d),S=si(S),_=_(S),a.flags|=1,Dn(o,a,_,d),a.child;case 14:return _=a.type,S=pi(_,a.pendingProps),S=pi(_.type,S),lm(o,a,_,S,d);case 15:return cm(o,a,a.type,a.pendingProps,d);case 17:return _=a.type,S=a.pendingProps,S=a.elementType===_?S:pi(_,S),o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),a.tag=1,fn(_)?(o=!0,yn(a)):o=!1,Ls(a,d),Ap(a,_,S),Zu(a,_,S,d),dh(null,a,_,!0,o,d);case 19:return ym(o,a,d);case 22:return um(o,a,d)}throw Error(l(156,a.tag))};function Gm(o,a){return zu(o,a)}function hx(o,a,d,_){this.tag=o,this.key=d,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=a,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=_,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function hi(o,a,d,_){return new hx(o,a,d,_)}function Uh(o){return o=o.prototype,!(!o||!o.isReactComponent)}function fx(o){if(typeof o=="function")return Uh(o)?1:0;if(o!=null){if(o=o.$$typeof,o===M)return 11;if(o===w)return 14}return 2}function _r(o,a){var d=o.alternate;return d===null?(d=hi(o.tag,a,o.key,o.mode),d.elementType=o.elementType,d.type=o.type,d.stateNode=o.stateNode,d.alternate=o,o.alternate=d):(d.pendingProps=a,d.type=o.type,d.flags=0,d.subtreeFlags=0,d.deletions=null),d.flags=o.flags&14680064,d.childLanes=o.childLanes,d.lanes=o.lanes,d.child=o.child,d.memoizedProps=o.memoizedProps,d.memoizedState=o.memoizedState,d.updateQueue=o.updateQueue,a=o.dependencies,d.dependencies=a===null?null:{lanes:a.lanes,firstContext:a.firstContext},d.sibling=o.sibling,d.index=o.index,d.ref=o.ref,d}function Yl(o,a,d,_,S,T){var O=2;if(_=o,typeof o=="function")Uh(o)&&(O=1);else if(typeof o=="string")O=5;else e:switch(o){case f:return qr(d.children,S,T,a);case p:O=8,S|=8;break;case m:return o=hi(12,d,a,S|2),o.elementType=m,o.lanes=T,o;case x:return o=hi(13,d,a,S),o.elementType=x,o.lanes=T,o;case v:return o=hi(19,d,a,S),o.elementType=v,o.lanes=T,o;case A:return ql(d,S,T,a);default:if(typeof o=="object"&&o!==null)switch(o.$$typeof){case g:O=10;break e;case y:O=9;break e;case M:O=11;break e;case w:O=14;break e;case E:O=16,_=null;break e}throw Error(l(130,o==null?o:typeof o,""))}return a=hi(O,d,a,S),a.elementType=o,a.type=_,a.lanes=T,a}function qr(o,a,d,_){return o=hi(7,o,_,a),o.lanes=d,o}function ql(o,a,d,_){return o=hi(22,o,_,a),o.elementType=A,o.lanes=d,o.stateNode={},o}function Oh(o,a,d){return o=hi(6,o,null,a),o.lanes=d,o}function Fh(o,a,d){return a=hi(4,o.children!==null?o.children:[],o.key,a),a.lanes=d,a.stateNode={containerInfo:o.containerInfo,pendingChildren:null,implementation:o.implementation},a}function dx(o,a,d,_,S){this.tag=a,this.containerInfo=o,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=ot,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Ou(0),this.expirationTimes=Ou(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Ou(0),this.identifierPrefix=_,this.onRecoverableError=S,xe&&(this.mutableSourceEagerHydrationData=null)}function Wm(o,a,d,_,S,T,O,Y,oe){return o=new dx(o,a,d,Y,oe),a===1?(a=1,T===!0&&(a|=8)):a=0,T=hi(3,null,null,a),o.current=T,T.stateNode=o,T.memoizedState={element:_,isDehydrated:d,cache:null,transitions:null},Yu(T),o}function Xm(o){if(!o)return ii;o=o._reactInternals;e:{if(b(o)!==o||o.tag!==1)throw Error(l(170));var a=o;do{switch(a.tag){case 3:a=a.stateNode.context;break e;case 1:if(fn(a.type)){a=a.stateNode.__reactInternalMemoizedMergedChildContext;break e}}a=a.return}while(a!==null);throw Error(l(171))}if(o.tag===1){var d=o.type;if(fn(d))return Cs(o,d,a)}return a}function Ym(o){var a=o._reactInternals;if(a===void 0)throw typeof o.render=="function"?Error(l(188)):(o=Object.keys(o).join(","),Error(l(268,o)));return o=$(a),o===null?null:o.stateNode}function qm(o,a){if(o=o.memoizedState,o!==null&&o.dehydrated!==null){var d=o.retryLane;o.retryLane=d!==0&&d<a?d:a}}function zh(o,a){qm(o,a),(o=o.alternate)&&qm(o,a)}function px(o){return o=$(o),o===null?null:o.stateNode}function mx(){return null}return t.attemptContinuousHydration=function(o){if(o.tag===13){var a=Nn();ui(o,134217728,a),zh(o,134217728)}},t.attemptHydrationAtCurrentPriority=function(o){if(o.tag===13){var a=Nn(),d=mr(o);ui(o,d,a),zh(o,d)}},t.attemptSynchronousHydration=function(o){switch(o.tag){case 3:var a=o.stateNode;if(a.current.memoizedState.isDehydrated){var d=Do(a.pendingLanes);d!==0&&(Fu(a,d|1),Hn(a,dn()),!(Mt&6)&&(Hs(),Ii()))}break;case 13:var _=Nn();Um(function(){return ui(o,1,_)}),zh(o,1)}},t.batchedUpdates=function(o,a){var d=Mt;Mt|=1;try{return o(a)}finally{Mt=d,Mt===0&&(Hs(),ol&&Ii())}},t.createComponentSelector=function(o){return{$$typeof:Il,value:o}},t.createContainer=function(o,a,d,_,S,T,O){return Wm(o,a,!1,null,d,_,S,T,O)},t.createHasPseudoClassSelector=function(o){return{$$typeof:Dl,value:o}},t.createHydrationContainer=function(o,a,d,_,S,T,O,Y,oe){return o=Wm(d,_,!0,o,S,T,O,Y,oe),o.context=Xm(null),d=o.current,_=Nn(),S=mr(d),T=Xi(_,S),T.callback=a??null,fr(d,T),o.current.lanes=S,No(o,S,_),Hn(o,_),o},t.createPortal=function(o,a,d){var _=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:h,key:_==null?null:""+_,children:o,containerInfo:a,implementation:d}},t.createRoleSelector=function(o){return{$$typeof:Nl,value:o}},t.createTestNameSelector=function(o){return{$$typeof:Ul,value:o}},t.createTextSelector=function(o){return{$$typeof:Ol,value:o}},t.deferredUpdates=function(o){var a=Ct,d=Jt.transition;try{return Jt.transition=null,Ct=16,o()}finally{Ct=a,Jt.transition=d}},t.discreteUpdates=function(o,a,d,_,S){var T=Ct,O=Jt.transition;try{return Jt.transition=null,Ct=1,o(a,d,_,S)}finally{Ct=T,Jt.transition=O,Mt===0&&Hs()}},t.findAllNodes=wh,t.findBoundingRects=function(o,a){if(!P)throw Error(l(363));a=wh(o,a),o=[];for(var d=0;d<a.length;d++)o.push(_e(a[d]));for(a=o.length-1;0<a;a--){d=o[a];for(var _=d.x,S=_+d.width,T=d.y,O=T+d.height,Y=a-1;0<=Y;Y--)if(a!==Y){var oe=o[Y],Ee=oe.x,He=Ee+oe.width,dt=oe.y,et=dt+oe.height;if(_>=Ee&&T>=dt&&S<=He&&O<=et){o.splice(a,1);break}else if(_!==Ee||d.width!==oe.width||et<T||dt>O){if(!(T!==dt||d.height!==oe.height||He<_||Ee>S)){Ee>_&&(oe.width+=Ee-_,oe.x=_),He<S&&(oe.width=S-Ee),o.splice(a,1);break}}else{dt>T&&(oe.height+=dt-T,oe.y=T),et<O&&(oe.height=O-dt),o.splice(a,1);break}}}return o},t.findHostInstance=Ym,t.findHostInstanceWithNoPortals=function(o){return o=B(o),o=o!==null?V(o):null,o===null?null:o.stateNode},t.findHostInstanceWithWarning=function(o){return Ym(o)},t.flushControlled=function(o){var a=Mt;Mt|=1;var d=Jt.transition,_=Ct;try{Jt.transition=null,Ct=1,o()}finally{Ct=_,Jt.transition=d,Mt=a,Mt===0&&(Hs(),Ii())}},t.flushPassiveEffects=Yr,t.flushSync=Um,t.focusWithin=function(o,a){if(!P)throw Error(l(363));for(o=Sh(o),a=Im(o,a),a=Array.from(a),o=0;o<a.length;){var d=a[o++];if(!pe(d)){if(d.tag===5&&Ce(d.stateNode))return!0;for(d=d.child;d!==null;)a.push(d),d=d.sibling}}return!1},t.getCurrentUpdatePriority=function(){return Ct},t.getFindAllNodesFailureDescription=function(o,a){if(!P)throw Error(l(363));var d=0,_=[];o=[Sh(o),0];for(var S=0;S<o.length;){var T=o[S++],O=o[S++],Y=a[O];if((T.tag!==5||!pe(T))&&(Mh(T,Y)&&(_.push(Eh(Y)),O++,O>d&&(d=O)),O<a.length))for(T=T.child;T!==null;)o.push(T,O),T=T.sibling}if(d<a.length){for(o=[];d<a.length;d++)o.push(Eh(a[d]));return`findAllNodes was able to match part of the selector:
  `+(_.join(" > ")+`

No matching component was found for:
  `)+o.join(" > ")}return null},t.getPublicRootInstance=function(o){if(o=o.current,!o.child)return null;switch(o.child.tag){case 5:return te(o.child.stateNode);default:return o.child.stateNode}},t.injectIntoDevTools=function(o){if(o={bundleType:o.bundleType,version:o.version,rendererPackageName:o.rendererPackageName,rendererConfig:o.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:c.ReactCurrentDispatcher,findHostInstanceByFiber:px,findFiberByHostInstance:o.findFiberByHostInstance||mx,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"},typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")o=!1;else{var a=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(a.isDisabled||!a.supportsFiber)o=!0;else{try{sl=a.inject(o),Pi=a}catch{}o=!!a.checkDCE}}return o},t.isAlreadyRendering=function(){return!1},t.observeVisibleRects=function(o,a,d,_){if(!P)throw Error(l(363));o=wh(o,a);var S=Oe(o,d,_).disconnect;return{disconnect:function(){S()}}},t.registerMutableSourceForHydration=function(o,a){var d=a._getVersion;d=d(a._source),o.mutableSourceEagerHydrationData==null?o.mutableSourceEagerHydrationData=[a,d]:o.mutableSourceEagerHydrationData.push(a,d)},t.runWithPriority=function(o,a){var d=Ct;try{return Ct=o,a()}finally{Ct=d}},t.shouldError=function(){return null},t.shouldSuspend=function(){return!1},t.updateContainer=function(o,a,d,_){var S=a.current,T=Nn(),O=mr(S);return d=Xm(d),a.context===null?a.context=d:a.pendingContext=d,a=Xi(T,O),a.payload={element:o},_=_===void 0?null:_,_!==null&&(a.callback=_),fr(S,a),o=ui(S,O,T),o!==null&&ul(o,S,O),O},t};oy.exports=Sb;var Mb=oy.exports;const Eb=vx(Mb);var ay={exports:{}},ly={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(r){function e(F,H){var X=F.length;F.push(H);e:for(;0<X;){var Z=X-1>>>1,le=F[Z];if(0<i(le,H))F[Z]=H,F[X]=le,X=Z;else break e}}function t(F){return F.length===0?null:F[0]}function n(F){if(F.length===0)return null;var H=F[0],X=F.pop();if(X!==H){F[0]=X;e:for(var Z=0,le=F.length,J=le>>>1;Z<J;){var ce=2*(Z+1)-1,Me=F[ce],be=ce+1,Ae=F[be];if(0>i(Me,X))be<le&&0>i(Ae,Me)?(F[Z]=Ae,F[be]=X,Z=be):(F[Z]=Me,F[ce]=X,Z=ce);else if(be<le&&0>i(Ae,X))F[Z]=Ae,F[be]=X,Z=be;else break e}}return H}function i(F,H){var X=F.sortIndex-H.sortIndex;return X!==0?X:F.id-H.id}if(typeof performance=="object"&&typeof performance.now=="function"){var s=performance;r.unstable_now=function(){return s.now()}}else{var l=Date,c=l.now();r.unstable_now=function(){return l.now()-c}}var u=[],h=[],f=1,p=null,m=3,g=!1,y=!1,M=!1,x=typeof setTimeout=="function"?setTimeout:null,v=typeof clearTimeout=="function"?clearTimeout:null,w=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function E(F){for(var H=t(h);H!==null;){if(H.callback===null)n(h);else if(H.startTime<=F)n(h),H.sortIndex=H.expirationTime,e(u,H);else break;H=t(h)}}function A(F){if(M=!1,E(F),!y)if(t(u)!==null)y=!0,te(L);else{var H=t(h);H!==null&&ue(A,H.startTime-F)}}function L(F,H){y=!1,M&&(M=!1,v(z),z=-1),g=!0;var X=m;try{for(E(H),p=t(u);p!==null&&(!(p.expirationTime>H)||F&&!B());){var Z=p.callback;if(typeof Z=="function"){p.callback=null,m=p.priorityLevel;var le=Z(p.expirationTime<=H);H=r.unstable_now(),typeof le=="function"?p.callback=le:p===t(u)&&n(u),E(H)}else n(u);p=t(u)}if(p!==null)var J=!0;else{var ce=t(h);ce!==null&&ue(A,ce.startTime-H),J=!1}return J}finally{p=null,m=X,g=!1}}var C=!1,I=null,z=-1,b=5,R=-1;function B(){return!(r.unstable_now()-R<b)}function $(){if(I!==null){var F=r.unstable_now();R=F;var H=!0;try{H=I(!0,F)}finally{H?ae():(C=!1,I=null)}}else C=!1}var ae;if(typeof w=="function")ae=function(){w($)};else if(typeof MessageChannel<"u"){var V=new MessageChannel,j=V.port2;V.port1.onmessage=$,ae=function(){j.postMessage(null)}}else ae=function(){x($,0)};function te(F){I=F,C||(C=!0,ae())}function ue(F,H){z=x(function(){F(r.unstable_now())},H)}r.unstable_IdlePriority=5,r.unstable_ImmediatePriority=1,r.unstable_LowPriority=4,r.unstable_NormalPriority=3,r.unstable_Profiling=null,r.unstable_UserBlockingPriority=2,r.unstable_cancelCallback=function(F){F.callback=null},r.unstable_continueExecution=function(){y||g||(y=!0,te(L))},r.unstable_forceFrameRate=function(F){0>F||125<F?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):b=0<F?Math.floor(1e3/F):5},r.unstable_getCurrentPriorityLevel=function(){return m},r.unstable_getFirstCallbackNode=function(){return t(u)},r.unstable_next=function(F){switch(m){case 1:case 2:case 3:var H=3;break;default:H=m}var X=m;m=H;try{return F()}finally{m=X}},r.unstable_pauseExecution=function(){},r.unstable_requestPaint=function(){},r.unstable_runWithPriority=function(F,H){switch(F){case 1:case 2:case 3:case 4:case 5:break;default:F=3}var X=m;m=F;try{return H()}finally{m=X}},r.unstable_scheduleCallback=function(F,H,X){var Z=r.unstable_now();switch(typeof X=="object"&&X!==null?(X=X.delay,X=typeof X=="number"&&0<X?Z+X:Z):X=Z,F){case 1:var le=-1;break;case 2:le=250;break;case 5:le=1073741823;break;case 4:le=1e4;break;default:le=5e3}return le=X+le,F={id:f++,callback:H,priorityLevel:F,startTime:X,expirationTime:le,sortIndex:-1},X>Z?(F.sortIndex=X,e(h,F),t(u)===null&&F===t(h)&&(M?(v(z),z=-1):M=!0,ue(A,X-Z))):(F.sortIndex=le,e(u,F),y||g||(y=!0,te(L))),F},r.unstable_shouldYield=B,r.unstable_wrapCallback=function(F){var H=m;return function(){var X=m;m=H;try{return F.apply(this,arguments)}finally{m=X}}}})(ly);ay.exports=ly;var C0=ay.exports;const mp={},cy=r=>void Object.assign(mp,r);function wb(r,e){function t(f,{args:p=[],attach:m,...g},y){let M=`${f[0].toUpperCase()}${f.slice(1)}`,x;if(f==="primitive"){if(g.object===void 0)throw new Error("R3F: Primitives without 'object' are invalid!");const v=g.object;x=ho(v,{type:f,root:y,attach:m,primitive:!0})}else{const v=mp[M];if(!v)throw new Error(`R3F: ${M} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(!Array.isArray(p))throw new Error("R3F: The args prop must be an array!");x=ho(new v(...p),{type:f,root:y,attach:m,memoizedProps:{args:p}})}return x.__r3f.attach===void 0&&(x.isBufferGeometry?x.__r3f.attach="geometry":x.isMaterial&&(x.__r3f.attach="material")),M!=="inject"&&bf(x,g),x}function n(f,p){let m=!1;if(p){var g,y;(g=p.__r3f)!=null&&g.attach?Af(f,p,p.__r3f.attach):p.isObject3D&&f.isObject3D&&(f.add(p),m=!0),m||(y=f.__r3f)==null||y.objects.push(p),p.__r3f||ho(p,{}),p.__r3f.parent=f,wd(p),fo(p)}}function i(f,p,m){let g=!1;if(p){var y,M;if((y=p.__r3f)!=null&&y.attach)Af(f,p,p.__r3f.attach);else if(p.isObject3D&&f.isObject3D){p.parent=f,p.dispatchEvent({type:"added"}),f.dispatchEvent({type:"childadded",child:p});const x=f.children.filter(w=>w!==p),v=x.indexOf(m);f.children=[...x.slice(0,v),p,...x.slice(v)],g=!0}g||(M=f.__r3f)==null||M.objects.push(p),p.__r3f||ho(p,{}),p.__r3f.parent=f,wd(p),fo(p)}}function s(f,p,m=!1){f&&[...f].forEach(g=>l(p,g,m))}function l(f,p,m){if(p){var g,y,M;if(p.__r3f&&(p.__r3f.parent=null),(g=f.__r3f)!=null&&g.objects&&(f.__r3f.objects=f.__r3f.objects.filter(A=>A!==p)),(y=p.__r3f)!=null&&y.attach)D0(f,p,p.__r3f.attach);else if(p.isObject3D&&f.isObject3D){var x;f.remove(p),(x=p.__r3f)!=null&&x.root&&Lb(Jc(p),p)}const w=(M=p.__r3f)==null?void 0:M.primitive,E=!w&&(m===void 0?p.dispose!==null:m);if(!w){var v;s((v=p.__r3f)==null?void 0:v.objects,p,E),s(p.children,p,E)}if(delete p.__r3f,E&&p.dispose&&p.type!=="Scene"){const A=()=>{try{p.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT>"u"?C0.unstable_scheduleCallback(C0.unstable_IdlePriority,A):A()}fo(f)}}function c(f,p,m,g){var y;const M=(y=f.__r3f)==null?void 0:y.parent;if(!M)return;const x=t(p,m,f.__r3f.root);if(f.children){for(const v of f.children)v.__r3f&&n(x,v);f.children=f.children.filter(v=>!v.__r3f)}f.__r3f.objects.forEach(v=>n(x,v)),f.__r3f.objects=[],f.__r3f.autoRemovedBeforeAppend||l(M,f),x.parent&&(x.__r3f.autoRemovedBeforeAppend=!0),n(M,x),x.raycast&&x.__r3f.eventCount&&Jc(x).getState().internal.interaction.push(x),[g,g.alternate].forEach(v=>{v!==null&&(v.stateNode=x,v.ref&&(typeof v.ref=="function"?v.ref(x):v.ref.current=x))})}const u=()=>{};return{reconciler:Eb({createInstance:t,removeChild:l,appendChild:n,appendInitialChild:n,insertBefore:i,supportsMutation:!0,isPrimaryRenderer:!1,supportsPersistence:!1,supportsHydration:!1,noTimeout:-1,appendChildToContainer:(f,p)=>{if(!p)return;const m=f.getState().scene;m.__r3f&&(m.__r3f.root=f,n(m,p))},removeChildFromContainer:(f,p)=>{p&&l(f.getState().scene,p)},insertInContainerBefore:(f,p,m)=>{if(!p||!m)return;const g=f.getState().scene;g.__r3f&&i(g,p,m)},getRootHostContext:()=>null,getChildHostContext:f=>f,finalizeInitialChildren(f){var p;return!!((p=f==null?void 0:f.__r3f)!=null?p:{}).handlers},prepareUpdate(f,p,m,g){var y;if(((y=f==null?void 0:f.__r3f)!=null?y:{}).primitive&&g.object&&g.object!==f)return[!0];{const{args:x=[],children:v,...w}=g,{args:E=[],children:A,...L}=m;if(!Array.isArray(x))throw new Error("R3F: the args prop must be an array!");if(x.some((I,z)=>I!==E[z]))return[!0];const C=gy(f,w,L,!0);return C.changes.length?[!1,C]:null}},commitUpdate(f,[p,m],g,y,M,x){p?c(f,g,M,x):bf(f,m)},commitMount(f,p,m,g){var y;const M=(y=f.__r3f)!=null?y:{};f.raycast&&M.handlers&&M.eventCount&&Jc(f).getState().internal.interaction.push(f)},getPublicInstance:f=>f,prepareForCommit:()=>null,preparePortalMount:f=>ho(f.getState().scene),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance(f){var p;const{attach:m,parent:g}=(p=f.__r3f)!=null?p:{};m&&g&&D0(g,f,m),f.isObject3D&&(f.visible=!1),fo(f)},unhideInstance(f,p){var m;const{attach:g,parent:y}=(m=f.__r3f)!=null?m:{};g&&y&&Af(y,f,g),(f.isObject3D&&p.visible==null||p.visible)&&(f.visible=!0),fo(f)},createTextInstance:u,hideTextInstance:u,unhideTextInstance:u,getCurrentEventPriority:()=>e?e():yo.DefaultEventPriority,beforeActiveInstanceBlur:()=>{},afterActiveInstanceBlur:()=>{},detachDeletedInstance:()=>{},now:typeof performance<"u"&&Bt.fun(performance.now)?performance.now:Bt.fun(Date.now)?Date.now:()=>0,scheduleTimeout:Bt.fun(setTimeout)?setTimeout:void 0,cancelTimeout:Bt.fun(clearTimeout)?clearTimeout:void 0}),applyProps:bf}}var R0,P0;const Tf=r=>"colorSpace"in r||"outputColorSpace"in r,uy=()=>{var r;return(r=mp.ColorManagement)!=null?r:null},hy=r=>r&&r.isOrthographicCamera,Tb=r=>r&&r.hasOwnProperty("current"),Qa=typeof window<"u"&&((R0=window.document)!=null&&R0.createElement||((P0=window.navigator)==null?void 0:P0.product)==="ReactNative")?Be.useLayoutEffect:Be.useEffect;function fy(r){const e=Be.useRef(r);return Qa(()=>void(e.current=r),[r]),e}function Ab({set:r}){return Qa(()=>(r(new Promise(()=>null)),()=>r(!1)),[r]),null}class dy extends Be.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}}dy.getDerivedStateFromError=()=>({error:!0});const py="__default",L0=new Map,bb=r=>r&&!!r.memoized&&!!r.changes;function my(r){var e;const t=typeof window<"u"?(e=window.devicePixelRatio)!=null?e:2:1;return Array.isArray(r)?Math.min(Math.max(r[0],t),r[1]):r}const ca=r=>{var e;return(e=r.__r3f)==null?void 0:e.root.getState()};function Jc(r){let e=r.__r3f.root;for(;e.getState().previousRoot;)e=e.getState().previousRoot;return e}const Bt={obj:r=>r===Object(r)&&!Bt.arr(r)&&typeof r!="function",fun:r=>typeof r=="function",str:r=>typeof r=="string",num:r=>typeof r=="number",boo:r=>typeof r=="boolean",und:r=>r===void 0,arr:r=>Array.isArray(r),equ(r,e,{arrays:t="shallow",objects:n="reference",strict:i=!0}={}){if(typeof r!=typeof e||!!r!=!!e)return!1;if(Bt.str(r)||Bt.num(r)||Bt.boo(r))return r===e;const s=Bt.obj(r);if(s&&n==="reference")return r===e;const l=Bt.arr(r);if(l&&t==="reference")return r===e;if((l||s)&&r===e)return!0;let c;for(c in r)if(!(c in e))return!1;if(s&&t==="shallow"&&n==="shallow"){for(c in i?e:r)if(!Bt.equ(r[c],e[c],{strict:i,objects:"reference"}))return!1}else for(c in i?e:r)if(r[c]!==e[c])return!1;if(Bt.und(c)){if(l&&r.length===0&&e.length===0||s&&Object.keys(r).length===0&&Object.keys(e).length===0)return!0;if(r!==e)return!1}return!0}};function Cb(r){r.dispose&&r.type!=="Scene"&&r.dispose();for(const e in r)e.dispose==null||e.dispose(),delete r[e]}function ho(r,e){const t=r;return t.__r3f={type:"",root:null,previousAttach:null,memoizedProps:{},eventCount:0,handlers:{},objects:[],parent:null,...e},r}function Ed(r,e){let t=r;if(e.includes("-")){const n=e.split("-"),i=n.pop();return t=n.reduce((s,l)=>s[l],r),{target:t,key:i}}else return{target:t,key:e}}const I0=/-\d+$/;function Af(r,e,t){if(Bt.str(t)){if(I0.test(t)){const s=t.replace(I0,""),{target:l,key:c}=Ed(r,s);Array.isArray(l[c])||(l[c]=[])}const{target:n,key:i}=Ed(r,t);e.__r3f.previousAttach=n[i],n[i]=e}else e.__r3f.previousAttach=t(r,e)}function D0(r,e,t){var n,i;if(Bt.str(t)){const{target:s,key:l}=Ed(r,t),c=e.__r3f.previousAttach;c===void 0?delete s[l]:s[l]=c}else(n=e.__r3f)==null||n.previousAttach==null||n.previousAttach(r,e);(i=e.__r3f)==null||delete i.previousAttach}function gy(r,{children:e,key:t,ref:n,...i},{children:s,key:l,ref:c,...u}={},h=!1){const f=r.__r3f,p=Object.entries(i),m=[];if(h){const y=Object.keys(u);for(let M=0;M<y.length;M++)i.hasOwnProperty(y[M])||p.unshift([y[M],py+"remove"])}p.forEach(([y,M])=>{var x;if((x=r.__r3f)!=null&&x.primitive&&y==="object"||Bt.equ(M,u[y]))return;if(/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(y))return m.push([y,M,!0,[]]);let v=[];y.includes("-")&&(v=y.split("-")),m.push([y,M,!1,v]);for(const w in i){const E=i[w];w.startsWith(`${y}-`)&&m.push([w,E,!1,w.split("-")])}});const g={...i};return f!=null&&f.memoizedProps&&f!=null&&f.memoizedProps.args&&(g.args=f.memoizedProps.args),f!=null&&f.memoizedProps&&f!=null&&f.memoizedProps.attach&&(g.attach=f.memoizedProps.attach),{memoized:g,changes:m}}function bf(r,e){var t;const n=r.__r3f,i=n==null?void 0:n.root,s=i==null||i.getState==null?void 0:i.getState(),{memoized:l,changes:c}=bb(e)?e:gy(r,e),u=n==null?void 0:n.eventCount;r.__r3f&&(r.__r3f.memoizedProps=l);for(let m=0;m<c.length;m++){let[g,y,M,x]=c[m];if(Tf(r)){const A="srgb",L="srgb-linear";g==="encoding"?(g="colorSpace",y=y===3001?A:L):g==="outputEncoding"&&(g="outputColorSpace",y=y===3001?A:L)}let v=r,w=v[g];if(x.length&&(w=x.reduce((E,A)=>E[A],r),!(w&&w.set))){const[E,...A]=x.reverse();v=A.reverse().reduce((L,C)=>L[C],r),g=E}if(y===py+"remove")if(v.constructor){let E=L0.get(v.constructor);E||(E=new v.constructor,L0.set(v.constructor,E)),y=E[g]}else y=0;if(M&&n)y?n.handlers[g]=y:delete n.handlers[g],n.eventCount=Object.keys(n.handlers).length;else if(w&&w.set&&(w.copy||w instanceof ms)){if(Array.isArray(y))w.fromArray?w.fromArray(y):w.set(...y);else if(w.copy&&y&&y.constructor&&w.constructor===y.constructor)w.copy(y);else if(y!==void 0){var h;const E=(h=w)==null?void 0:h.isColor;!E&&w.setScalar?w.setScalar(y):w instanceof ms&&y instanceof ms?w.mask=y.mask:w.set(y),!uy()&&s&&!s.linear&&E&&w.convertSRGBToLinear()}}else{var f;if(v[g]=y,(f=v[g])!=null&&f.isTexture&&v[g].format===Fn&&v[g].type===ki&&s){const E=v[g];Tf(E)&&Tf(s.gl)?E.colorSpace=s.gl.outputColorSpace:E.encoding=s.gl.outputEncoding}}fo(r)}if(n&&n.parent&&r.raycast&&u!==n.eventCount){const m=Jc(r).getState().internal,g=m.interaction.indexOf(r);g>-1&&m.interaction.splice(g,1),n.eventCount&&m.interaction.push(r)}return!(c.length===1&&c[0][0]==="onUpdate")&&c.length&&(t=r.__r3f)!=null&&t.parent&&wd(r),r}function fo(r){var e,t;const n=(e=r.__r3f)==null||(t=e.root)==null||t.getState==null?void 0:t.getState();n&&n.internal.frames===0&&n.invalidate()}function wd(r){r.onUpdate==null||r.onUpdate(r)}function Rb(r,e){r.manual||(hy(r)?(r.left=e.width/-2,r.right=e.width/2,r.top=e.height/2,r.bottom=e.height/-2):r.aspect=e.width/e.height,r.updateProjectionMatrix(),r.updateMatrixWorld())}function kc(r){return(r.eventObject||r.object).uuid+"/"+r.index+r.instanceId}function Pb(){var r;const e=typeof self<"u"&&self||typeof window<"u"&&window;if(!e)return yo.DefaultEventPriority;switch((r=e.event)==null?void 0:r.type){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return yo.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return yo.ContinuousEventPriority;default:return yo.DefaultEventPriority}}function _y(r,e,t,n){const i=t.get(e);i&&(t.delete(e),t.size===0&&(r.delete(n),i.target.releasePointerCapture(n)))}function Lb(r,e){const{internal:t}=r.getState();t.interaction=t.interaction.filter(n=>n!==e),t.initialHits=t.initialHits.filter(n=>n!==e),t.hovered.forEach((n,i)=>{(n.eventObject===e||n.object===e)&&t.hovered.delete(i)}),t.capturedMap.forEach((n,i)=>{_y(t.capturedMap,e,n,i)})}function Ib(r){function e(u){const{internal:h}=r.getState(),f=u.offsetX-h.initialClick[0],p=u.offsetY-h.initialClick[1];return Math.round(Math.sqrt(f*f+p*p))}function t(u){return u.filter(h=>["Move","Over","Enter","Out","Leave"].some(f=>{var p;return(p=h.__r3f)==null?void 0:p.handlers["onPointer"+f]}))}function n(u,h){const f=r.getState(),p=new Set,m=[],g=h?h(f.internal.interaction):f.internal.interaction;for(let v=0;v<g.length;v++){const w=ca(g[v]);w&&(w.raycaster.camera=void 0)}f.previousRoot||f.events.compute==null||f.events.compute(u,f);function y(v){const w=ca(v);if(!w||!w.events.enabled||w.raycaster.camera===null)return[];if(w.raycaster.camera===void 0){var E;w.events.compute==null||w.events.compute(u,w,(E=w.previousRoot)==null?void 0:E.getState()),w.raycaster.camera===void 0&&(w.raycaster.camera=null)}return w.raycaster.camera?w.raycaster.intersectObject(v,!0):[]}let M=g.flatMap(y).sort((v,w)=>{const E=ca(v.object),A=ca(w.object);return!E||!A?v.distance-w.distance:A.events.priority-E.events.priority||v.distance-w.distance}).filter(v=>{const w=kc(v);return p.has(w)?!1:(p.add(w),!0)});f.events.filter&&(M=f.events.filter(M,f));for(const v of M){let w=v.object;for(;w;){var x;(x=w.__r3f)!=null&&x.eventCount&&m.push({...v,eventObject:w}),w=w.parent}}if("pointerId"in u&&f.internal.capturedMap.has(u.pointerId))for(let v of f.internal.capturedMap.get(u.pointerId).values())p.has(kc(v.intersection))||m.push(v.intersection);return m}function i(u,h,f,p){const m=r.getState();if(u.length){const g={stopped:!1};for(const y of u){const M=ca(y.object)||m,{raycaster:x,pointer:v,camera:w,internal:E}=M,A=new U(v.x,v.y,0).unproject(w),L=R=>{var B,$;return(B=($=E.capturedMap.get(R))==null?void 0:$.has(y.eventObject))!=null?B:!1},C=R=>{const B={intersection:y,target:h.target};E.capturedMap.has(R)?E.capturedMap.get(R).set(y.eventObject,B):E.capturedMap.set(R,new Map([[y.eventObject,B]])),h.target.setPointerCapture(R)},I=R=>{const B=E.capturedMap.get(R);B&&_y(E.capturedMap,y.eventObject,B,R)};let z={};for(let R in h){let B=h[R];typeof B!="function"&&(z[R]=B)}let b={...y,...z,pointer:v,intersections:u,stopped:g.stopped,delta:f,unprojectedPoint:A,ray:x.ray,camera:w,stopPropagation(){const R="pointerId"in h&&E.capturedMap.get(h.pointerId);if((!R||R.has(y.eventObject))&&(b.stopped=g.stopped=!0,E.hovered.size&&Array.from(E.hovered.values()).find(B=>B.eventObject===y.eventObject))){const B=u.slice(0,u.indexOf(y));s([...B,y])}},target:{hasPointerCapture:L,setPointerCapture:C,releasePointerCapture:I},currentTarget:{hasPointerCapture:L,setPointerCapture:C,releasePointerCapture:I},nativeEvent:h};if(p(b),g.stopped===!0)break}}return u}function s(u){const{internal:h}=r.getState();for(const f of h.hovered.values())if(!u.length||!u.find(p=>p.object===f.object&&p.index===f.index&&p.instanceId===f.instanceId)){const m=f.eventObject.__r3f,g=m==null?void 0:m.handlers;if(h.hovered.delete(kc(f)),m!=null&&m.eventCount){const y={...f,intersections:u};g.onPointerOut==null||g.onPointerOut(y),g.onPointerLeave==null||g.onPointerLeave(y)}}}function l(u,h){for(let f=0;f<h.length;f++){const p=h[f].__r3f;p==null||p.handlers.onPointerMissed==null||p.handlers.onPointerMissed(u)}}function c(u){switch(u){case"onPointerLeave":case"onPointerCancel":return()=>s([]);case"onLostPointerCapture":return h=>{const{internal:f}=r.getState();"pointerId"in h&&f.capturedMap.has(h.pointerId)&&requestAnimationFrame(()=>{f.capturedMap.has(h.pointerId)&&(f.capturedMap.delete(h.pointerId),s([]))})}}return function(f){const{onPointerMissed:p,internal:m}=r.getState();m.lastEvent.current=f;const g=u==="onPointerMove",y=u==="onClick"||u==="onContextMenu"||u==="onDoubleClick",x=n(f,g?t:void 0),v=y?e(f):0;u==="onPointerDown"&&(m.initialClick=[f.offsetX,f.offsetY],m.initialHits=x.map(E=>E.eventObject)),y&&!x.length&&v<=2&&(l(f,m.interaction),p&&p(f)),g&&s(x);function w(E){const A=E.eventObject,L=A.__r3f,C=L==null?void 0:L.handlers;if(L!=null&&L.eventCount)if(g){if(C.onPointerOver||C.onPointerEnter||C.onPointerOut||C.onPointerLeave){const I=kc(E),z=m.hovered.get(I);z?z.stopped&&E.stopPropagation():(m.hovered.set(I,E),C.onPointerOver==null||C.onPointerOver(E),C.onPointerEnter==null||C.onPointerEnter(E))}C.onPointerMove==null||C.onPointerMove(E)}else{const I=C[u];I?(!y||m.initialHits.includes(A))&&(l(f,m.interaction.filter(z=>!m.initialHits.includes(z))),I(E)):y&&m.initialHits.includes(A)&&l(f,m.interaction.filter(z=>!m.initialHits.includes(z)))}}i(x,f,v,w)}}return{handlePointer:c}}const vy=r=>!!(r!=null&&r.render),yy=Be.createContext(null),Db=(r,e)=>{const t=vb((c,u)=>{const h=new U,f=new U,p=new U;function m(v=u().camera,w=f,E=u().size){const{width:A,height:L,top:C,left:I}=E,z=A/L;w.isVector3?p.copy(w):p.set(...w);const b=v.getWorldPosition(h).distanceTo(p);if(hy(v))return{width:A/v.zoom,height:L/v.zoom,top:C,left:I,factor:1,distance:b,aspect:z};{const R=v.fov*Math.PI/180,B=2*Math.tan(R/2)*b,$=B*(A/L);return{width:$,height:B,top:C,left:I,factor:A/$,distance:b,aspect:z}}}let g;const y=v=>c(w=>({performance:{...w.performance,current:v}})),M=new he;return{set:c,get:u,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},xr:null,scene:null,invalidate:(v=1)=>r(u(),v),advance:(v,w)=>e(v,w,u()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new hp,pointer:M,mouse:M,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const v=u();g&&clearTimeout(g),v.performance.current!==v.performance.min&&y(v.performance.min),g=setTimeout(()=>y(u().performance.max),v.performance.debounce)}},size:{width:0,height:0,top:0,left:0,updateStyle:!1},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:m},setEvents:v=>c(w=>({...w,events:{...w.events,...v}})),setSize:(v,w,E,A,L)=>{const C=u().camera,I={width:v,height:w,top:A||0,left:L||0,updateStyle:E};c(z=>({size:I,viewport:{...z.viewport,...m(C,f,I)}}))},setDpr:v=>c(w=>{const E=my(v);return{viewport:{...w.viewport,dpr:E,initialDpr:w.viewport.initialDpr||E}}}),setFrameloop:(v="always")=>{const w=u().clock;w.stop(),w.elapsedTime=0,v!=="never"&&(w.start(),w.elapsedTime=0),c(()=>({frameloop:v}))},previousRoot:void 0,internal:{active:!1,priority:0,frames:0,lastEvent:Be.createRef(),interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:(v,w,E)=>{const A=u().internal;return A.priority=A.priority+(w>0?1:0),A.subscribers.push({ref:v,priority:w,store:E}),A.subscribers=A.subscribers.sort((L,C)=>L.priority-C.priority),()=>{const L=u().internal;L!=null&&L.subscribers&&(L.priority=L.priority-(w>0?1:0),L.subscribers=L.subscribers.filter(C=>C.ref!==v))}}}}}),n=t.getState();let i=n.size,s=n.viewport.dpr,l=n.camera;return t.subscribe(()=>{const{camera:c,size:u,viewport:h,gl:f,set:p}=t.getState();if(u.width!==i.width||u.height!==i.height||h.dpr!==s){var m;i=u,s=h.dpr,Rb(c,u),f.setPixelRatio(h.dpr);const g=(m=u.updateStyle)!=null?m:typeof HTMLCanvasElement<"u"&&f.domElement instanceof HTMLCanvasElement;f.setSize(u.width,u.height,g)}c!==l&&(l=c,p(g=>({viewport:{...g.viewport,...g.viewport.getCurrentViewport(c)}})))}),t.subscribe(c=>r(c)),t};let Hc,Nb=new Set,Ub=new Set,Ob=new Set;function Cf(r,e){if(r.size)for(const{callback:t}of r.values())t(e)}function ua(r,e){switch(r){case"before":return Cf(Nb,e);case"after":return Cf(Ub,e);case"tail":return Cf(Ob,e)}}let Rf,Pf;function Lf(r,e,t){let n=e.clock.getDelta();for(e.frameloop==="never"&&typeof r=="number"&&(n=r-e.clock.elapsedTime,e.clock.oldTime=e.clock.elapsedTime,e.clock.elapsedTime=r),Rf=e.internal.subscribers,Hc=0;Hc<Rf.length;Hc++)Pf=Rf[Hc],Pf.ref.current(Pf.store.getState(),n,t);return!e.internal.priority&&e.gl.render&&e.gl.render(e.scene,e.camera),e.internal.frames=Math.max(0,e.internal.frames-1),e.frameloop==="always"?1:e.internal.frames}function Fb(r){let e=!1,t=!1,n,i,s;function l(h){i=requestAnimationFrame(l),e=!0,n=0,ua("before",h),t=!0;for(const p of r.values()){var f;s=p.store.getState(),s.internal.active&&(s.frameloop==="always"||s.internal.frames>0)&&!((f=s.gl.xr)!=null&&f.isPresenting)&&(n+=Lf(h,s))}if(t=!1,ua("after",h),n===0)return ua("tail",h),e=!1,cancelAnimationFrame(i)}function c(h,f=1){var p;if(!h)return r.forEach(m=>c(m.store.getState(),f));(p=h.gl.xr)!=null&&p.isPresenting||!h.internal.active||h.frameloop==="never"||(f>1?h.internal.frames=Math.min(60,h.internal.frames+f):t?h.internal.frames=2:h.internal.frames=1,e||(e=!0,requestAnimationFrame(l)))}function u(h,f=!0,p,m){if(f&&ua("before",h),p)Lf(h,p,m);else for(const g of r.values())Lf(h,g.store.getState());f&&ua("after",h)}return{loop:l,invalidate:c,advance:u}}function xy(){const r=Be.useContext(yy);if(!r)throw new Error("R3F: Hooks can only be used within the Canvas component!");return r}function Ar(r=t=>t,e){return xy()(r,e)}function Sy(r,e=0){const t=xy(),n=t.getState().internal.subscribe,i=fy(r);return Qa(()=>n(i,e,t),[e,n,t]),null}const Ao=new Map,{invalidate:N0,advance:U0}=Fb(Ao),{reconciler:iu,applyProps:co}=wb(Ao,Pb),uo={objects:"shallow",strict:!1},zb=(r,e)=>{const t=typeof r=="function"?r(e):r;return vy(t)?t:new qd({powerPreference:"high-performance",canvas:e,antialias:!0,alpha:!0,...r})};function Bb(r,e){const t=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement;if(e){const{width:n,height:i,top:s,left:l,updateStyle:c=t}=e;return{width:n,height:i,top:s,left:l,updateStyle:c}}else if(typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement&&r.parentElement){const{width:n,height:i,top:s,left:l}=r.parentElement.getBoundingClientRect();return{width:n,height:i,top:s,left:l,updateStyle:t}}else if(typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas)return{width:r.width,height:r.height,top:0,left:0,updateStyle:t};return{width:0,height:0,top:0,left:0}}function kb(r){const e=Ao.get(r),t=e==null?void 0:e.fiber,n=e==null?void 0:e.store;e&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,s=n||Db(N0,U0),l=t||iu.createContainer(s,yo.ConcurrentRoot,null,!1,null,"",i,null);e||Ao.set(r,{fiber:l,store:s});let c,u=!1,h;return{configure(f={}){let{gl:p,size:m,scene:g,events:y,onCreated:M,shadows:x=!1,linear:v=!1,flat:w=!1,legacy:E=!1,orthographic:A=!1,frameloop:L="always",dpr:C=[1,2],performance:I,raycaster:z,camera:b,onPointerMissed:R}=f,B=s.getState(),$=B.gl;B.gl||B.set({gl:$=zb(p,r)});let ae=B.raycaster;ae||B.set({raycaster:ae=new iy});const{params:V,...j}=z||{};if(Bt.equ(j,ae,uo)||co(ae,{...j}),Bt.equ(V,ae.params,uo)||co(ae,{params:{...ae.params,...V}}),!B.camera||B.camera===h&&!Bt.equ(h,b,uo)){h=b;const X=b instanceof Wa,Z=X?b:A?new Lr(0,0,0,0,.1,1e3):new en(75,0,.1,1e3);X||(Z.position.z=5,b&&(co(Z,b),("aspect"in b||"left"in b||"right"in b||"bottom"in b||"top"in b)&&(Z.manual=!0,Z.updateProjectionMatrix())),!B.camera&&!(b!=null&&b.rotation)&&Z.lookAt(0,0,0)),B.set({camera:Z}),ae.camera=Z}if(!B.scene){let X;g!=null&&g.isScene?X=g:(X=new Zd,g&&co(X,g)),B.set({scene:ho(X)})}if(!B.xr){var te;const X=(J,ce)=>{const Me=s.getState();Me.frameloop!=="never"&&U0(J,!0,Me,ce)},Z=()=>{const J=s.getState();J.gl.xr.enabled=J.gl.xr.isPresenting,J.gl.xr.setAnimationLoop(J.gl.xr.isPresenting?X:null),J.gl.xr.isPresenting||N0(J)},le={connect(){const J=s.getState().gl;J.xr.addEventListener("sessionstart",Z),J.xr.addEventListener("sessionend",Z)},disconnect(){const J=s.getState().gl;J.xr.removeEventListener("sessionstart",Z),J.xr.removeEventListener("sessionend",Z)}};typeof((te=$.xr)==null?void 0:te.addEventListener)=="function"&&le.connect(),B.set({xr:le})}if($.shadowMap){const X=$.shadowMap.enabled,Z=$.shadowMap.type;if($.shadowMap.enabled=!!x,Bt.boo(x))$.shadowMap.type=fa;else if(Bt.str(x)){var ue;const le={basic:j0,percentage:su,soft:fa,variance:yi};$.shadowMap.type=(ue=le[x])!=null?ue:fa}else Bt.obj(x)&&Object.assign($.shadowMap,x);(X!==$.shadowMap.enabled||Z!==$.shadowMap.type)&&($.shadowMap.needsUpdate=!0)}const F=uy();F&&("enabled"in F?F.enabled=!E:"legacyMode"in F&&(F.legacyMode=E)),u||co($,{outputEncoding:v?3e3:3001,toneMapping:w?Bi:Td}),B.legacy!==E&&B.set(()=>({legacy:E})),B.linear!==v&&B.set(()=>({linear:v})),B.flat!==w&&B.set(()=>({flat:w})),p&&!Bt.fun(p)&&!vy(p)&&!Bt.equ(p,$,uo)&&co($,p),y&&!B.events.handlers&&B.set({events:y(s)});const H=Bb(r,m);return Bt.equ(H,B.size,uo)||B.setSize(H.width,H.height,H.updateStyle,H.top,H.left),C&&B.viewport.dpr!==my(C)&&B.setDpr(C),B.frameloop!==L&&B.setFrameloop(L),B.onPointerMissed||B.set({onPointerMissed:R}),I&&!Bt.equ(I,B.performance,uo)&&B.set(X=>({performance:{...X.performance,...I}})),c=M,u=!0,this},render(f){return u||this.configure(),iu.updateContainer(xi.jsx(Hb,{store:s,children:f,onCreated:c,rootElement:r}),l,null,()=>{}),s},unmount(){My(r)}}}function Hb({store:r,children:e,onCreated:t,rootElement:n}){return Qa(()=>{const i=r.getState();i.set(s=>({internal:{...s.internal,active:!0}})),t&&t(i),r.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),xi.jsx(yy.Provider,{value:r,children:e})}function My(r,e){const t=Ao.get(r),n=t==null?void 0:t.fiber;if(n){const i=t==null?void 0:t.store.getState();i&&(i.internal.active=!1),iu.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var s,l,c,u;i.events.disconnect==null||i.events.disconnect(),(s=i.gl)==null||(l=s.renderLists)==null||l.dispose==null||l.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(u=i.gl)!=null&&u.xr&&i.xr.disconnect(),Cb(i),Ao.delete(r)}catch{}},500)})}}iu.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:Be.version});const If={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function Vb(r){const{handlePointer:e}=Ib(r);return{priority:1,enabled:!0,compute(t,n,i){n.pointer.set(t.offsetX/n.size.width*2-1,-(t.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(If).reduce((t,n)=>({...t,[n]:e(n)}),{}),update:()=>{var t;const{events:n,internal:i}=r.getState();(t=i.lastEvent)!=null&&t.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:t=>{var n;const{set:i,events:s}=r.getState();s.disconnect==null||s.disconnect(),i(l=>({events:{...l.events,connected:t}})),Object.entries((n=s.handlers)!=null?n:[]).forEach(([l,c])=>{const[u,h]=If[l];t.addEventListener(u,c,{passive:h})})},disconnect:()=>{const{set:t,events:n}=r.getState();if(n.connected){var i;Object.entries((i=n.handlers)!=null?i:[]).forEach(([s,l])=>{if(n&&n.connected instanceof HTMLElement){const[c]=If[s];n.connected.removeEventListener(c,l)}}),t(s=>({events:{...s.events,connected:void 0}}))}}}}function O0(r,e){let t;return(...n)=>{window.clearTimeout(t),t=window.setTimeout(()=>r(...n),e)}}function Gb({debounce:r,scroll:e,polyfill:t,offsetSize:n}={debounce:0,scroll:!1,offsetSize:!1}){const i=t||(typeof window>"u"?class{}:window.ResizeObserver);if(!i)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[s,l]=Be.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),c=Be.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:s,orientationHandler:null}),u=r?typeof r=="number"?r:r.scroll:null,h=r?typeof r=="number"?r:r.resize:null,f=Be.useRef(!1);Be.useEffect(()=>(f.current=!0,()=>void(f.current=!1)));const[p,m,g]=Be.useMemo(()=>{const v=()=>{if(!c.current.element)return;const{left:w,top:E,width:A,height:L,bottom:C,right:I,x:z,y:b}=c.current.element.getBoundingClientRect(),R={left:w,top:E,width:A,height:L,bottom:C,right:I,x:z,y:b};c.current.element instanceof HTMLElement&&n&&(R.height=c.current.element.offsetHeight,R.width=c.current.element.offsetWidth),Object.freeze(R),f.current&&!qb(c.current.lastBounds,R)&&l(c.current.lastBounds=R)};return[v,h?O0(v,h):v,u?O0(v,u):v]},[l,n,u,h]);function y(){c.current.scrollContainers&&(c.current.scrollContainers.forEach(v=>v.removeEventListener("scroll",g,!0)),c.current.scrollContainers=null),c.current.resizeObserver&&(c.current.resizeObserver.disconnect(),c.current.resizeObserver=null),c.current.orientationHandler&&("orientation"in screen&&"removeEventListener"in screen.orientation?screen.orientation.removeEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.removeEventListener("orientationchange",c.current.orientationHandler))}function M(){c.current.element&&(c.current.resizeObserver=new i(g),c.current.resizeObserver.observe(c.current.element),e&&c.current.scrollContainers&&c.current.scrollContainers.forEach(v=>v.addEventListener("scroll",g,{capture:!0,passive:!0})),c.current.orientationHandler=()=>{g()},"orientation"in screen&&"addEventListener"in screen.orientation?screen.orientation.addEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.addEventListener("orientationchange",c.current.orientationHandler))}const x=v=>{!v||v===c.current.element||(y(),c.current.element=v,c.current.scrollContainers=Ey(v),M())};return Xb(g,!!e),Wb(m),Be.useEffect(()=>{y(),M()},[e,g,m]),Be.useEffect(()=>y,[]),[x,s,p]}function Wb(r){Be.useEffect(()=>{const e=r;return window.addEventListener("resize",e),()=>void window.removeEventListener("resize",e)},[r])}function Xb(r,e){Be.useEffect(()=>{if(e){const t=r;return window.addEventListener("scroll",t,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",t,!0)}},[r,e])}function Ey(r){const e=[];if(!r||r===document.body)return e;const{overflow:t,overflowX:n,overflowY:i}=window.getComputedStyle(r);return[t,n,i].some(s=>s==="auto"||s==="scroll")&&e.push(r),[...e,...Ey(r.parentElement)]}const Yb=["x","y","top","bottom","left","right","width","height"],qb=(r,e)=>Yb.every(t=>r[t]===e[t]);var Zb=Object.defineProperty,jb=Object.defineProperties,Jb=Object.getOwnPropertyDescriptors,F0=Object.getOwnPropertySymbols,Kb=Object.prototype.hasOwnProperty,Qb=Object.prototype.propertyIsEnumerable,z0=(r,e,t)=>e in r?Zb(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,B0=(r,e)=>{for(var t in e||(e={}))Kb.call(e,t)&&z0(r,t,e[t]);if(F0)for(var t of F0(e))Qb.call(e,t)&&z0(r,t,e[t]);return r},$b=(r,e)=>jb(r,Jb(e)),k0,H0;typeof window<"u"&&((k0=window.document)!=null&&k0.createElement||((H0=window.navigator)==null?void 0:H0.product)==="ReactNative")?Be.useLayoutEffect:Be.useEffect;function wy(r,e,t){if(!r)return;if(t(r)===!0)return r;let n=r.child;for(;n;){const i=wy(n,e,t);if(i)return i;n=n.sibling}}function Ty(r){try{return Object.defineProperties(r,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return r}}const V0=console.error;console.error=function(){const r=[...arguments].join("");if(r!=null&&r.startsWith("Warning:")&&r.includes("useContext")){console.error=V0;return}return V0.apply(this,arguments)};const gp=Ty(Be.createContext(null));class Ay extends Be.Component{render(){return Be.createElement(gp.Provider,{value:this._reactInternals},this.props.children)}}function eC(){const r=Be.useContext(gp);if(r===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const e=Be.useId();return Be.useMemo(()=>{for(const n of[r,r==null?void 0:r.alternate]){if(!n)continue;const i=wy(n,!1,s=>{let l=s.memoizedState;for(;l;){if(l.memoizedState===e)return!0;l=l.next}});if(i)return i}},[r,e])}function tC(){const r=eC(),[e]=Be.useState(()=>new Map);e.clear();let t=r;for(;t;){if(t.type&&typeof t.type=="object"){const i=t.type._context===void 0&&t.type.Provider===t.type?t.type:t.type._context;i&&i!==gp&&!e.has(i)&&e.set(i,Be.useContext(Ty(i)))}t=t.return}return e}function nC(){const r=tC();return Be.useMemo(()=>Array.from(r.keys()).reduce((e,t)=>n=>Be.createElement(e,null,Be.createElement(t.Provider,$b(B0({},n),{value:r.get(t)}))),e=>Be.createElement(Ay,B0({},e))),[r])}const iC=Be.forwardRef(function({children:e,fallback:t,resize:n,style:i,gl:s,events:l=Vb,eventSource:c,eventPrefix:u,shadows:h,linear:f,flat:p,legacy:m,orthographic:g,frameloop:y,dpr:M,performance:x,raycaster:v,camera:w,scene:E,onPointerMissed:A,onCreated:L,...C},I){Be.useMemo(()=>cy(mb),[]);const z=nC(),[b,R]=Gb({scroll:!0,debounce:{scroll:50,resize:0},...n}),B=Be.useRef(null),$=Be.useRef(null);Be.useImperativeHandle(I,()=>B.current);const ae=fy(A),[V,j]=Be.useState(!1),[te,ue]=Be.useState(!1);if(V)throw V;if(te)throw te;const F=Be.useRef(null);Qa(()=>{const X=B.current;R.width>0&&R.height>0&&X&&(F.current||(F.current=kb(X)),F.current.configure({gl:s,events:l,shadows:h,linear:f,flat:p,legacy:m,orthographic:g,frameloop:y,dpr:M,performance:x,raycaster:v,camera:w,scene:E,size:R,onPointerMissed:(...Z)=>ae.current==null?void 0:ae.current(...Z),onCreated:Z=>{Z.events.connect==null||Z.events.connect(c?Tb(c)?c.current:c:$.current),u&&Z.setEvents({compute:(le,J)=>{const ce=le[u+"X"],Me=le[u+"Y"];J.pointer.set(ce/J.size.width*2-1,-(Me/J.size.height)*2+1),J.raycaster.setFromCamera(J.pointer,J.camera)}}),L==null||L(Z)}}),F.current.render(xi.jsx(z,{children:xi.jsx(dy,{set:ue,children:xi.jsx(Be.Suspense,{fallback:xi.jsx(Ab,{set:j}),children:e??null})})})))}),Be.useEffect(()=>{const X=B.current;if(X)return()=>My(X)},[]);const H=c?"none":"auto";return xi.jsx("div",{ref:$,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:H,...i},...C,children:xi.jsx("div",{ref:b,style:{width:"100%",height:"100%"},children:xi.jsx("canvas",{ref:B,style:{display:"block"},children:t})})})}),vC=Be.forwardRef(function(e,t){return xi.jsx(Ay,{children:xi.jsx(iC,{...e,ref:t})})});var rC=Object.defineProperty,sC=(r,e,t)=>e in r?rC(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,oC=(r,e,t)=>(sC(r,e+"",t),t);class aC{constructor(){oC(this,"_listeners")}addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,l=i.length;s<l;s++)i[s].call(this,e);e.target=null}}}var lC=Object.defineProperty,cC=(r,e,t)=>e in r?lC(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,tt=(r,e,t)=>(cC(r,typeof e!="symbol"?e+"":e,t),t);const Vc=new Ss,G0=new Fi,uC=Math.cos(70*(Math.PI/180)),W0=(r,e)=>(r%e+e)%e;let hC=class extends aC{constructor(e,t){super(),tt(this,"object"),tt(this,"domElement"),tt(this,"enabled",!0),tt(this,"target",new U),tt(this,"minDistance",0),tt(this,"maxDistance",1/0),tt(this,"minZoom",0),tt(this,"maxZoom",1/0),tt(this,"minPolarAngle",0),tt(this,"maxPolarAngle",Math.PI),tt(this,"minAzimuthAngle",-1/0),tt(this,"maxAzimuthAngle",1/0),tt(this,"enableDamping",!1),tt(this,"dampingFactor",.05),tt(this,"enableZoom",!0),tt(this,"zoomSpeed",1),tt(this,"enableRotate",!0),tt(this,"rotateSpeed",1),tt(this,"enablePan",!0),tt(this,"panSpeed",1),tt(this,"screenSpacePanning",!0),tt(this,"keyPanSpeed",7),tt(this,"zoomToCursor",!1),tt(this,"autoRotate",!1),tt(this,"autoRotateSpeed",2),tt(this,"reverseOrbit",!1),tt(this,"reverseHorizontalOrbit",!1),tt(this,"reverseVerticalOrbit",!1),tt(this,"keys",{LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"}),tt(this,"mouseButtons",{LEFT:rs.ROTATE,MIDDLE:rs.DOLLY,RIGHT:rs.PAN}),tt(this,"touches",{ONE:ss.ROTATE,TWO:ss.DOLLY_PAN}),tt(this,"target0"),tt(this,"position0"),tt(this,"zoom0"),tt(this,"_domElementKeyEvents",null),tt(this,"getPolarAngle"),tt(this,"getAzimuthalAngle"),tt(this,"setPolarAngle"),tt(this,"setAzimuthalAngle"),tt(this,"getDistance"),tt(this,"getZoomScale"),tt(this,"listenToKeyEvents"),tt(this,"stopListenToKeyEvents"),tt(this,"saveState"),tt(this,"reset"),tt(this,"update"),tt(this,"connect"),tt(this,"dispose"),tt(this,"dollyIn"),tt(this,"dollyOut"),tt(this,"getScale"),tt(this,"setScale"),this.object=e,this.domElement=t,this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=()=>f.phi,this.getAzimuthalAngle=()=>f.theta,this.setPolarAngle=G=>{let me=W0(G,2*Math.PI),Ne=f.phi;Ne<0&&(Ne+=2*Math.PI),me<0&&(me+=2*Math.PI);let Ie=Math.abs(me-Ne);2*Math.PI-Ie<Ie&&(me<Ne?me+=2*Math.PI:Ne+=2*Math.PI),p.phi=me-Ne,n.update()},this.setAzimuthalAngle=G=>{let me=W0(G,2*Math.PI),Ne=f.theta;Ne<0&&(Ne+=2*Math.PI),me<0&&(me+=2*Math.PI);let Ie=Math.abs(me-Ne);2*Math.PI-Ie<Ie&&(me<Ne?me+=2*Math.PI:Ne+=2*Math.PI),p.theta=me-Ne,n.update()},this.getDistance=()=>n.object.position.distanceTo(n.target),this.listenToKeyEvents=G=>{G.addEventListener("keydown",Qe),this._domElementKeyEvents=G},this.stopListenToKeyEvents=()=>{this._domElementKeyEvents.removeEventListener("keydown",Qe),this._domElementKeyEvents=null},this.saveState=()=>{n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=()=>{n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(i),n.update(),u=c.NONE},this.update=(()=>{const G=new U,me=new U(0,1,0),Ne=new Pn().setFromUnitVectors(e.up,me),Ie=Ne.clone().invert(),ye=new U,W=new Pn,we=2*Math.PI;return function(){const $e=n.object.position;Ne.setFromUnitVectors(e.up,me),Ie.copy(Ne).invert(),G.copy($e).sub(n.target),G.applyQuaternion(Ne),f.setFromVector3(G),n.autoRotate&&u===c.NONE&&V($()),n.enableDamping?(f.theta+=p.theta*n.dampingFactor,f.phi+=p.phi*n.dampingFactor):(f.theta+=p.theta,f.phi+=p.phi);let We=n.minAzimuthAngle,Et=n.maxAzimuthAngle;isFinite(We)&&isFinite(Et)&&(We<-Math.PI?We+=we:We>Math.PI&&(We-=we),Et<-Math.PI?Et+=we:Et>Math.PI&&(Et-=we),We<=Et?f.theta=Math.max(We,Math.min(Et,f.theta)):f.theta=f.theta>(We+Et)/2?Math.max(We,f.theta):Math.min(Et,f.theta)),f.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,f.phi)),f.makeSafe(),n.enableDamping===!0?n.target.addScaledVector(g,n.dampingFactor):n.target.add(g),n.zoomToCursor&&b||n.object.isOrthographicCamera?f.radius=J(f.radius):f.radius=J(f.radius*m),G.setFromSpherical(f),G.applyQuaternion(Ie),$e.copy(n.target).add(G),n.object.matrixAutoUpdate||n.object.updateMatrix(),n.object.lookAt(n.target),n.enableDamping===!0?(p.theta*=1-n.dampingFactor,p.phi*=1-n.dampingFactor,g.multiplyScalar(1-n.dampingFactor)):(p.set(0,0,0),g.set(0,0,0));let Tt=!1;if(n.zoomToCursor&&b){let Ut=null;if(n.object instanceof en&&n.object.isPerspectiveCamera){const kt=G.length();Ut=J(kt*m);const At=kt-Ut;n.object.position.addScaledVector(I,At),n.object.updateMatrixWorld()}else if(n.object.isOrthographicCamera){const kt=new U(z.x,z.y,0);kt.unproject(n.object),n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/m)),n.object.updateProjectionMatrix(),Tt=!0;const At=new U(z.x,z.y,0);At.unproject(n.object),n.object.position.sub(At).add(kt),n.object.updateMatrixWorld(),Ut=G.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),n.zoomToCursor=!1;Ut!==null&&(n.screenSpacePanning?n.target.set(0,0,-1).transformDirection(n.object.matrix).multiplyScalar(Ut).add(n.object.position):(Vc.origin.copy(n.object.position),Vc.direction.set(0,0,-1).transformDirection(n.object.matrix),Math.abs(n.object.up.dot(Vc.direction))<uC?e.lookAt(n.target):(G0.setFromNormalAndCoplanarPoint(n.object.up,n.target),Vc.intersectPlane(G0,n.target))))}else n.object instanceof Lr&&n.object.isOrthographicCamera&&(Tt=m!==1,Tt&&(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/m)),n.object.updateProjectionMatrix()));return m=1,b=!1,Tt||ye.distanceToSquared(n.object.position)>h||8*(1-W.dot(n.object.quaternion))>h?(n.dispatchEvent(i),ye.copy(n.object.position),W.copy(n.object.quaternion),Tt=!1,!0):!1}})(),this.connect=G=>{n.domElement=G,n.domElement.style.touchAction="none",n.domElement.addEventListener("contextmenu",wt),n.domElement.addEventListener("pointerdown",_e),n.domElement.addEventListener("pointercancel",pe),n.domElement.addEventListener("wheel",Oe)},this.dispose=()=>{var G,me,Ne,Ie,ye,W;n.domElement&&(n.domElement.style.touchAction="auto"),(G=n.domElement)==null||G.removeEventListener("contextmenu",wt),(me=n.domElement)==null||me.removeEventListener("pointerdown",_e),(Ne=n.domElement)==null||Ne.removeEventListener("pointercancel",pe),(Ie=n.domElement)==null||Ie.removeEventListener("wheel",Oe),(ye=n.domElement)==null||ye.ownerDocument.removeEventListener("pointermove",ge),(W=n.domElement)==null||W.ownerDocument.removeEventListener("pointerup",pe),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",Qe)};const n=this,i={type:"change"},s={type:"start"},l={type:"end"},c={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let u=c.NONE;const h=1e-6,f=new Md,p=new Md;let m=1;const g=new U,y=new he,M=new he,x=new he,v=new he,w=new he,E=new he,A=new he,L=new he,C=new he,I=new U,z=new he;let b=!1;const R=[],B={};function $(){return 2*Math.PI/60/60*n.autoRotateSpeed}function ae(){return Math.pow(.95,n.zoomSpeed)}function V(G){n.reverseOrbit||n.reverseHorizontalOrbit?p.theta+=G:p.theta-=G}function j(G){n.reverseOrbit||n.reverseVerticalOrbit?p.phi+=G:p.phi-=G}const te=(()=>{const G=new U;return function(Ne,Ie){G.setFromMatrixColumn(Ie,0),G.multiplyScalar(-Ne),g.add(G)}})(),ue=(()=>{const G=new U;return function(Ne,Ie){n.screenSpacePanning===!0?G.setFromMatrixColumn(Ie,1):(G.setFromMatrixColumn(Ie,0),G.crossVectors(n.object.up,G)),G.multiplyScalar(Ne),g.add(G)}})(),F=(()=>{const G=new U;return function(Ne,Ie){const ye=n.domElement;if(ye&&n.object instanceof en&&n.object.isPerspectiveCamera){const W=n.object.position;G.copy(W).sub(n.target);let we=G.length();we*=Math.tan(n.object.fov/2*Math.PI/180),te(2*Ne*we/ye.clientHeight,n.object.matrix),ue(2*Ie*we/ye.clientHeight,n.object.matrix)}else ye&&n.object instanceof Lr&&n.object.isOrthographicCamera?(te(Ne*(n.object.right-n.object.left)/n.object.zoom/ye.clientWidth,n.object.matrix),ue(Ie*(n.object.top-n.object.bottom)/n.object.zoom/ye.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}})();function H(G){n.object instanceof en&&n.object.isPerspectiveCamera||n.object instanceof Lr&&n.object.isOrthographicCamera?m=G:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function X(G){H(m/G)}function Z(G){H(m*G)}function le(G){if(!n.zoomToCursor||!n.domElement)return;b=!0;const me=n.domElement.getBoundingClientRect(),Ne=G.clientX-me.left,Ie=G.clientY-me.top,ye=me.width,W=me.height;z.x=Ne/ye*2-1,z.y=-(Ie/W)*2+1,I.set(z.x,z.y,1).unproject(n.object).sub(n.object.position).normalize()}function J(G){return Math.max(n.minDistance,Math.min(n.maxDistance,G))}function ce(G){y.set(G.clientX,G.clientY)}function Me(G){le(G),A.set(G.clientX,G.clientY)}function be(G){v.set(G.clientX,G.clientY)}function Ae(G){M.set(G.clientX,G.clientY),x.subVectors(M,y).multiplyScalar(n.rotateSpeed);const me=n.domElement;me&&(V(2*Math.PI*x.x/me.clientHeight),j(2*Math.PI*x.y/me.clientHeight)),y.copy(M),n.update()}function nt(G){L.set(G.clientX,G.clientY),C.subVectors(L,A),C.y>0?X(ae()):C.y<0&&Z(ae()),A.copy(L),n.update()}function ot(G){w.set(G.clientX,G.clientY),E.subVectors(w,v).multiplyScalar(n.panSpeed),F(E.x,E.y),v.copy(w),n.update()}function Ve(G){le(G),G.deltaY<0?Z(ae()):G.deltaY>0&&X(ae()),n.update()}function Ze(G){let me=!1;switch(G.code){case n.keys.UP:F(0,n.keyPanSpeed),me=!0;break;case n.keys.BOTTOM:F(0,-n.keyPanSpeed),me=!0;break;case n.keys.LEFT:F(n.keyPanSpeed,0),me=!0;break;case n.keys.RIGHT:F(-n.keyPanSpeed,0),me=!0;break}me&&(G.preventDefault(),n.update())}function k(){if(R.length==1)y.set(R[0].pageX,R[0].pageY);else{const G=.5*(R[0].pageX+R[1].pageX),me=.5*(R[0].pageY+R[1].pageY);y.set(G,me)}}function xe(){if(R.length==1)v.set(R[0].pageX,R[0].pageY);else{const G=.5*(R[0].pageX+R[1].pageX),me=.5*(R[0].pageY+R[1].pageY);v.set(G,me)}}function fe(){const G=R[0].pageX-R[1].pageX,me=R[0].pageY-R[1].pageY,Ne=Math.sqrt(G*G+me*me);A.set(0,Ne)}function Se(){n.enableZoom&&fe(),n.enablePan&&xe()}function de(){n.enableZoom&&fe(),n.enableRotate&&k()}function Ye(G){if(R.length==1)M.set(G.pageX,G.pageY);else{const Ne=ze(G),Ie=.5*(G.pageX+Ne.x),ye=.5*(G.pageY+Ne.y);M.set(Ie,ye)}x.subVectors(M,y).multiplyScalar(n.rotateSpeed);const me=n.domElement;me&&(V(2*Math.PI*x.x/me.clientHeight),j(2*Math.PI*x.y/me.clientHeight)),y.copy(M)}function Pe(G){if(R.length==1)w.set(G.pageX,G.pageY);else{const me=ze(G),Ne=.5*(G.pageX+me.x),Ie=.5*(G.pageY+me.y);w.set(Ne,Ie)}E.subVectors(w,v).multiplyScalar(n.panSpeed),F(E.x,E.y),v.copy(w)}function D(G){const me=ze(G),Ne=G.pageX-me.x,Ie=G.pageY-me.y,ye=Math.sqrt(Ne*Ne+Ie*Ie);L.set(0,ye),C.set(0,Math.pow(L.y/A.y,n.zoomSpeed)),X(C.y),A.copy(L)}function P(G){n.enableZoom&&D(G),n.enablePan&&Pe(G)}function Q(G){n.enableZoom&&D(G),n.enableRotate&&Ye(G)}function _e(G){var me,Ne;n.enabled!==!1&&(R.length===0&&((me=n.domElement)==null||me.ownerDocument.addEventListener("pointermove",ge),(Ne=n.domElement)==null||Ne.ownerDocument.addEventListener("pointerup",pe)),mt(G),G.pointerType==="touch"?ut(G):Ge(G))}function ge(G){n.enabled!==!1&&(G.pointerType==="touch"?ve(G):Ce(G))}function pe(G){var me,Ne,Ie;at(G),R.length===0&&((me=n.domElement)==null||me.releasePointerCapture(G.pointerId),(Ne=n.domElement)==null||Ne.ownerDocument.removeEventListener("pointermove",ge),(Ie=n.domElement)==null||Ie.ownerDocument.removeEventListener("pointerup",pe)),n.dispatchEvent(l),u=c.NONE}function Ge(G){let me;switch(G.button){case 0:me=n.mouseButtons.LEFT;break;case 1:me=n.mouseButtons.MIDDLE;break;case 2:me=n.mouseButtons.RIGHT;break;default:me=-1}switch(me){case rs.DOLLY:if(n.enableZoom===!1)return;Me(G),u=c.DOLLY;break;case rs.ROTATE:if(G.ctrlKey||G.metaKey||G.shiftKey){if(n.enablePan===!1)return;be(G),u=c.PAN}else{if(n.enableRotate===!1)return;ce(G),u=c.ROTATE}break;case rs.PAN:if(G.ctrlKey||G.metaKey||G.shiftKey){if(n.enableRotate===!1)return;ce(G),u=c.ROTATE}else{if(n.enablePan===!1)return;be(G),u=c.PAN}break;default:u=c.NONE}u!==c.NONE&&n.dispatchEvent(s)}function Ce(G){if(n.enabled!==!1)switch(u){case c.ROTATE:if(n.enableRotate===!1)return;Ae(G);break;case c.DOLLY:if(n.enableZoom===!1)return;nt(G);break;case c.PAN:if(n.enablePan===!1)return;ot(G);break}}function Oe(G){n.enabled===!1||n.enableZoom===!1||u!==c.NONE&&u!==c.ROTATE||(G.preventDefault(),n.dispatchEvent(s),Ve(G),n.dispatchEvent(l))}function Qe(G){n.enabled===!1||n.enablePan===!1||Ze(G)}function ut(G){switch(Ke(G),R.length){case 1:switch(n.touches.ONE){case ss.ROTATE:if(n.enableRotate===!1)return;k(),u=c.TOUCH_ROTATE;break;case ss.PAN:if(n.enablePan===!1)return;xe(),u=c.TOUCH_PAN;break;default:u=c.NONE}break;case 2:switch(n.touches.TWO){case ss.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Se(),u=c.TOUCH_DOLLY_PAN;break;case ss.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;de(),u=c.TOUCH_DOLLY_ROTATE;break;default:u=c.NONE}break;default:u=c.NONE}u!==c.NONE&&n.dispatchEvent(s)}function ve(G){switch(Ke(G),u){case c.TOUCH_ROTATE:if(n.enableRotate===!1)return;Ye(G),n.update();break;case c.TOUCH_PAN:if(n.enablePan===!1)return;Pe(G),n.update();break;case c.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;P(G),n.update();break;case c.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Q(G),n.update();break;default:u=c.NONE}}function wt(G){n.enabled!==!1&&G.preventDefault()}function mt(G){R.push(G)}function at(G){delete B[G.pointerId];for(let me=0;me<R.length;me++)if(R[me].pointerId==G.pointerId){R.splice(me,1);return}}function Ke(G){let me=B[G.pointerId];me===void 0&&(me=new he,B[G.pointerId]=me),me.set(G.pageX,G.pageY)}function ze(G){const me=G.pointerId===R[0].pointerId?R[1]:R[0];return B[me.pointerId]}this.dollyIn=(G=ae())=>{Z(G),n.update()},this.dollyOut=(G=ae())=>{X(G),n.update()},this.getScale=()=>m,this.setScale=G=>{H(G),n.update()},this.getZoomScale=()=>ae(),t!==void 0&&this.connect(t),this.update()}};function fC(r,e,t,n){const i=class extends Ti{constructor(l={}){const c=Object.entries(r);super({uniforms:c.reduce((u,[h,f])=>{const p=Vd.clone({[h]:{value:f}});return{...u,...p}},{}),vertexShader:e,fragmentShader:t}),this.key="",c.forEach(([u])=>Object.defineProperty(this,u,{get:()=>this.uniforms[u].value,set:h=>this.uniforms[u].value=h})),Object.assign(this,l)}};return i.key=Z_.generateUUID(),i}const dC=()=>parseInt(ka.replace(/\D+/g,"")),pC=dC(),SC=Be.forwardRef(({makeDefault:r,camera:e,regress:t,domElement:n,enableDamping:i=!0,keyEvents:s=!1,onChange:l,onStart:c,onEnd:u,...h},f)=>{const p=Ar(C=>C.invalidate),m=Ar(C=>C.camera),g=Ar(C=>C.gl),y=Ar(C=>C.events),M=Ar(C=>C.setEvents),x=Ar(C=>C.set),v=Ar(C=>C.get),w=Ar(C=>C.performance),E=e||m,A=n||y.connected||g.domElement,L=Be.useMemo(()=>new hC(E),[E]);return Sy(()=>{L.enabled&&L.update()},-1),Be.useEffect(()=>(s&&L.connect(s===!0?A:s),L.connect(A),()=>void L.dispose()),[s,A,t,L,p]),Be.useEffect(()=>{const C=b=>{p(),t&&w.regress(),l&&l(b)},I=b=>{c&&c(b)},z=b=>{u&&u(b)};return L.addEventListener("change",C),L.addEventListener("start",I),L.addEventListener("end",z),()=>{L.removeEventListener("start",I),L.removeEventListener("end",z),L.removeEventListener("change",C)}},[l,c,u,L,p,M]),Be.useEffect(()=>{if(r){const C=v().controls;return x({controls:L}),()=>x({controls:C})}},[r,L]),Be.createElement("primitive",va({ref:f,object:L,enableDamping:i},h))}),mC=fC({cellSize:.5,sectionSize:1,fadeDistance:100,fadeStrength:1,fadeFrom:1,cellThickness:.5,sectionThickness:1,cellColor:new Ue,sectionColor:new Ue,infiniteGrid:!1,followCamera:!1,worldCamProjPosition:new U,worldPlanePosition:new U},`
    varying vec3 localPosition;
    varying vec4 worldPosition;

    uniform vec3 worldCamProjPosition;
    uniform vec3 worldPlanePosition;
    uniform float fadeDistance;
    uniform bool infiniteGrid;
    uniform bool followCamera;

    void main() {
      localPosition = position.xzy;
      if (infiniteGrid) localPosition *= 1.0 + fadeDistance;
      
      worldPosition = modelMatrix * vec4(localPosition, 1.0);
      if (followCamera) {
        worldPosition.xyz += (worldCamProjPosition - worldPlanePosition);
        localPosition = (inverse(modelMatrix) * worldPosition).xyz;
      }

      gl_Position = projectionMatrix * viewMatrix * worldPosition;
    }
  `,`
    varying vec3 localPosition;
    varying vec4 worldPosition;

    uniform vec3 worldCamProjPosition;
    uniform float cellSize;
    uniform float sectionSize;
    uniform vec3 cellColor;
    uniform vec3 sectionColor;
    uniform float fadeDistance;
    uniform float fadeStrength;
    uniform float fadeFrom;
    uniform float cellThickness;
    uniform float sectionThickness;

    float getGrid(float size, float thickness) {
      vec2 r = localPosition.xz / size;
      vec2 grid = abs(fract(r - 0.5) - 0.5) / fwidth(r);
      float line = min(grid.x, grid.y) + 1.0 - thickness;
      return 1.0 - min(line, 1.0);
    }

    void main() {
      float g1 = getGrid(cellSize, cellThickness);
      float g2 = getGrid(sectionSize, sectionThickness);

      vec3 from = worldCamProjPosition*vec3(fadeFrom);
      float dist = distance(from, worldPosition.xyz);
      float d = 1.0 - min(dist / fadeDistance, 1.0);
      vec3 color = mix(cellColor, sectionColor, min(1.0, sectionThickness * g2));

      gl_FragColor = vec4(color, (g1 + g2) * pow(d, fadeStrength));
      gl_FragColor.a = mix(0.75 * gl_FragColor.a, gl_FragColor.a, g2);
      if (gl_FragColor.a <= 0.0) discard;

      #include <tonemapping_fragment>
      #include <${pC>=154?"colorspace_fragment":"encodings_fragment"}>
    }
  `),MC=Be.forwardRef(({args:r,cellColor:e="#000000",sectionColor:t="#2080ff",cellSize:n=.5,sectionSize:i=1,followCamera:s=!1,infiniteGrid:l=!1,fadeDistance:c=100,fadeStrength:u=1,fadeFrom:h=1,cellThickness:f=.5,sectionThickness:p=1,side:m=Rn,...g},y)=>{cy({GridMaterial:mC});const M=Be.useRef(null);Be.useImperativeHandle(y,()=>M.current,[]);const x=new Fi,v=new U(0,1,0),w=new U(0,0,0);Sy(L=>{x.setFromNormalAndCoplanarPoint(v,w).applyMatrix4(M.current.matrixWorld);const C=M.current.material,I=C.uniforms.worldCamProjPosition,z=C.uniforms.worldPlanePosition;x.projectPoint(L.camera.position,I.value),z.value.set(0,0,0).applyMatrix4(M.current.matrixWorld)});const E={cellSize:n,sectionSize:i,cellColor:e,sectionColor:t,cellThickness:f,sectionThickness:p},A={fadeDistance:c,fadeStrength:u,fadeFrom:h,infiniteGrid:l,followCamera:s};return Be.createElement("mesh",va({ref:M,frustumCulled:!1},g),Be.createElement("gridMaterial",va({transparent:!0,"extensions-derivatives":!0,side:m},E,A)),Be.createElement("planeGeometry",{args:r}))});export{MC as $,za as A,xt as B,Ue as C,xA as D,an as E,lr as F,_o as G,Ga as H,Lt as I,Gv as J,Ms as K,Yn as L,lt as M,Ja as N,Lr as O,en as P,Pn as Q,Ma as R,Zd as S,SA as T,Ro as U,U as V,Sy as W,In as X,vC as Y,SC as Z,va as _,Nt as a,db as a0,Zm as a1,Xe as b,Dr as c,xd as d,Or as e,Z_ as f,Uv as g,Iv as h,he as i,xi as j,zi as k,or as l,Zv as m,Xv as n,Yv as o,qv as p,Fa as q,Po as r,Jd as s,Bn as t,pv as u,ln as v,Nr as w,Gi as x,mu as y,Cn as z};
//# sourceMappingURL=three-3s6q0L1q.js.map
