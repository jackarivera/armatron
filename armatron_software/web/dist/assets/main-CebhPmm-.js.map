{"version":3,"file":"main-CebhPmm-.js","sources":["../../src/services/socket.ts","../../src/services/motorControl.ts","../../src/components/JointCard.tsx","../../src/components/SavedSetsList.tsx","../../src/components/MultiJointControl.tsx","../../src/services/robotState.ts","../../src/components/GlobalControls.tsx","../../src/pages/JointControl.tsx","../../node_modules/three/examples/jsm/loaders/STLLoader.js","../../node_modules/three/examples/jsm/loaders/TGALoader.js","../../node_modules/three/examples/jsm/loaders/ColladaLoader.js","../../node_modules/urdf-loader/src/URDFClasses.js","../../node_modules/urdf-loader/src/URDFLoader.js","../../src/components/RobotViewer/RobotModel.tsx","../../src/components/RobotViewer/DigitalTwinModel.tsx","../../src/components/RobotViewer/index.tsx","../../node_modules/@mui/icons-material/utils/createSvgIcon.js","../../node_modules/@mui/icons-material/Delete.js","../../node_modules/@mui/icons-material/PlayArrow.js","../../node_modules/@mui/icons-material/Edit.js","../../node_modules/@mui/icons-material/ContentCopy.js","../../src/components/JointPositionControl.tsx","../../src/components/ServiceLogsViewer.tsx","../../src/pages/Dashboard.tsx","../../src/components/ThemeProvider.tsx","../../src/components/SettingsDialog/index.tsx","../../src/components/Layout/index.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["import { io, Socket } from 'socket.io-client';\r\n\r\ninterface MotorState {\r\n  temp: number;\r\n  torqueA: number;\r\n  speedDeg_s: number;\r\n  posDeg: number;\r\n  encoder_val?: number;\r\n  error?: number;\r\n  positionRad_Mapped?: number;\r\n  positionDeg_Mapped?: number;\r\n  multiTurnRaw: number;\r\n  multiTurnRad_Mapped?: number;\r\n  multiTurnDeg_Mapped?: number;\r\n  gains?: {\r\n    angKp: number;\r\n    angKi: number;\r\n    spdKp: number;\r\n    spdKi: number;\r\n    iqKp: number;\r\n    iqKi: number;\r\n  };\r\n}\r\n\r\ninterface MotorStates {\r\n  motors: {\r\n    [key: string]: MotorState;\r\n  };\r\n  diff_roll_rad?: number;\r\n  diff_pitch_rad?: number;\r\n  diff_roll_deg?: number;\r\n  diff_pitch_deg?: number;\r\n}\r\n\r\nclass SocketService {\r\n  private static instance: SocketService;\r\n  private socket: Socket | null = null;\r\n  private motorStateCallbacks: ((data: MotorStates) => void)[] = [];\r\n  private isConnecting: boolean = false;\r\n  private reconnectAttempts: number = 0;\r\n  private readonly MAX_RECONNECT_ATTEMPTS = 5;\r\n\r\n  private constructor() {}\r\n\r\n  public static getInstance(): SocketService {\r\n    if (!SocketService.instance) {\r\n      SocketService.instance = new SocketService();\r\n    }\r\n    return SocketService.instance;\r\n  }\r\n\r\n  public connect() {\r\n    if (this.socket?.connected || this.isConnecting) {\r\n      return;\r\n    }\r\n\r\n    this.isConnecting = true;\r\n    const host = window.location.hostname;\r\n    this.socket = io(`http://${host}:8888`, {\r\n      reconnection: true,\r\n      reconnectionAttempts: this.MAX_RECONNECT_ATTEMPTS,\r\n      reconnectionDelay: 1000,\r\n      reconnectionDelayMax: 5000,\r\n      timeout: 20000\r\n    });\r\n\r\n    this.setupListeners();\r\n  }\r\n\r\n  private setupListeners() {\r\n    if (!this.socket) return;\r\n\r\n    this.socket.on('motorStates', (data: MotorStates) => {\r\n      if (data && data.motors) {\r\n        this.motorStateCallbacks.forEach(callback => callback(data));\r\n      }\r\n    });\r\n\r\n    this.socket.on('connect', () => {\r\n      console.log('Connected to server');\r\n      this.isConnecting = false;\r\n      this.reconnectAttempts = 0;\r\n    });\r\n\r\n    this.socket.on('disconnect', () => {\r\n      console.log('Disconnected from server');\r\n      this.isConnecting = false;\r\n    });\r\n\r\n    this.socket.on('connect_error', (error) => {\r\n      console.error('Connection error:', error);\r\n      this.isConnecting = false;\r\n      this.reconnectAttempts++;\r\n      if (this.reconnectAttempts >= this.MAX_RECONNECT_ATTEMPTS) {\r\n        console.error('Max reconnection attempts reached');\r\n        this.socket?.disconnect();\r\n      }\r\n    });\r\n  }\r\n\r\n  public sendCommand(command: any) {\r\n    if (this.socket?.connected) {\r\n      this.socket.emit('sendCommand', command);\r\n    } else {\r\n      console.warn('Cannot send command: Socket not connected');\r\n    }\r\n  }\r\n\r\n  public onMotorStates(callback: (data: MotorStates) => void) {\r\n    this.motorStateCallbacks.push(callback);\r\n    return () => {\r\n      this.motorStateCallbacks = this.motorStateCallbacks.filter(cb => cb !== callback);\r\n    };\r\n  }\r\n\r\n  public on(event: string, callback: (...args: any[]) => void) {\r\n    if (this.socket) {\r\n      this.socket.on(event, callback);\r\n    }\r\n  }\r\n\r\n  public off(event: string, callback?: (...args: any[]) => void) {\r\n    this.socket?.off(event, callback);\r\n  }\r\n\r\n  public emit(event: string, ...args: any[]) {\r\n    this.socket?.emit(event, ...args);\r\n  }\r\n\r\n  public isConnected(): boolean {\r\n    return this.socket?.connected || false;\r\n  }\r\n}\r\n\r\nexport const socketService = SocketService.getInstance(); ","import { socketService } from './socket';\r\n\r\ninterface MotorCommand {\r\n  cmd: string;\r\n  motorID?: number;\r\n  value?: number;\r\n  angle?: number;\r\n  maxSpeed?: number;\r\n  angles?: number[];\r\n  speeds?: number[];\r\n  angKp?: number;\r\n  angKi?: number;\r\n  spdKp?: number;\r\n  spdKi?: number;\r\n  iqKp?: number;\r\n  iqKi?: number;\r\n  encoderValue?: number;\r\n  accelVal?: number;\r\n}\r\n\r\nclass MotorControlService {\r\n  private static instance: MotorControlService;\r\n\r\n  private constructor() {}\r\n\r\n  public static getInstance(): MotorControlService {\r\n    if (!MotorControlService.instance) {\r\n      MotorControlService.instance = new MotorControlService();\r\n    }\r\n    return MotorControlService.instance;\r\n  }\r\n\r\n  // Individual joint commands\r\n  public motorOn(motorID: number) {\r\n    this.sendCommand({ cmd: 'motorOn', motorID });\r\n  }\r\n\r\n  public motorOff(motorID: number) {\r\n    this.sendCommand({ cmd: 'motorOff', motorID });\r\n  }\r\n\r\n  public motorStop(motorID: number) {\r\n    this.sendCommand({ cmd: 'motorStop', motorID });\r\n  }\r\n\r\n  public clearMotorError(motorID: number) {\r\n    this.sendCommand({ cmd: 'clearMotorError', motorID });\r\n  }\r\n\r\n  public syncSingleAndMulti(motorID: number) {\r\n    this.sendCommand({ cmd: 'syncSingleAndMulti', motorID });\r\n  }\r\n\r\n  public setTorque(motorID: number, value: number) {\r\n    this.sendCommand({ cmd: 'setTorque', motorID, value });\r\n  }\r\n\r\n  public setPosition(motorID: number, angle: number, maxSpeed: number) {\r\n    this.sendCommand({ cmd: 'setMultiAngleWithSpeed', motorID, angle, maxSpeed });\r\n  }\r\n\r\n  // Multi-joint commands\r\n  public setMultiJointAngles(angles: number[], speeds: number[]) {\r\n    this.sendCommand({ cmd: 'setMultiJointAngles', angles, speeds });\r\n  }\r\n\r\n  public emergencyStop() {\r\n    for (let i = 1; i <= 7; i++) {\r\n      this.motorStop(i);\r\n    }\r\n  }\r\n\r\n  // Global control commands\r\n  public writePID_RAM(motorID: number, angKp: number, angKi: number, spdKp: number, spdKi: number, iqKp: number, iqKi: number) {\r\n    this.sendCommand({ cmd: 'writePID_RAM', motorID, angKp, angKi, spdKp, spdKi, iqKp, iqKi });\r\n  }\r\n\r\n  public readPID(motorID: number) {\r\n    this.sendCommand({ cmd: 'readPID', motorID });\r\n  }\r\n\r\n  public writePID_ROM(motorID: number, angKp: number, angKi: number, spdKp: number, spdKi: number, iqKp: number, iqKi: number) {\r\n    this.sendCommand({ cmd: 'writePID_ROM', motorID, angKp, angKi, spdKp, spdKi, iqKp, iqKi });\r\n  }\r\n\r\n  public readEncoder(motorID: number) {\r\n    this.sendCommand({ cmd: 'readEncoder', motorID });\r\n  }\r\n\r\n  public writeEncoderZero(motorID: number, encoderValue: number) {\r\n    this.sendCommand({ cmd: 'writeEncoderOffset', motorID, encoderValue });\r\n  }\r\n\r\n  public writeCurrentPosAsZero(motorID: number) {\r\n    this.sendCommand({ cmd: 'writeCurrentPosAsZero', motorID });\r\n  }\r\n\r\n  public writeAcceleration(motorID: number, accelVal: number) {\r\n    this.sendCommand({ cmd: 'writeAcceleration', motorID, accelVal });\r\n  }\r\n\r\n  public readAcceleration(motorID: number) {\r\n    this.sendCommand({ cmd: 'readAcceleration', motorID });\r\n  }\r\n\r\n  private sendCommand(command: MotorCommand) {\r\n    socketService.sendCommand(command);\r\n  }\r\n}\r\n\r\nexport const motorControlService = MotorControlService.getInstance(); ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { motorControlService } from '../services/motorControl';\r\nimport { socketService } from '../services/socket';\r\n\r\n// Register Chart.js components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\ninterface MotorState {\r\n  temp: number;\r\n  torqueA: number;\r\n  speedDeg_s: number;\r\n  posDeg: number;\r\n  encoder_val?: number;\r\n  error?: number;\r\n  positionRad_Mapped?: number;\r\n  positionDeg_Mapped?: number;\r\n  multiTurnRaw: number;\r\n  multiTurnRad_Mapped?: number;\r\n  multiTurnDeg_Mapped?: number;\r\n}\r\n\r\ninterface Props {\r\n  jointId: number;\r\n}\r\n\r\nconst JointCard: React.FC<Props> = ({ jointId }) => {\r\n  const [motorState, setMotorState] = useState<MotorState | null>(null);\r\n  const [torqueValue, setTorqueValue] = useState<number>(50);\r\n  const [positionValue, setPositionValue] = useState<number>(90);\r\n  const [speedValue, setSpeedValue] = useState<number>(360);\r\n  const [chartData, setChartData] = useState({\r\n    labels: [] as string[],\r\n    datasets: [\r\n      { label: 'Position (deg)', data: [] as number[], borderColor: 'blue', fill: false },\r\n      { label: 'Speed (deg/s)', data: [] as number[], borderColor: 'red', fill: false },\r\n      { label: 'Torque', data: [] as number[], borderColor: 'purple', fill: false }\r\n    ]\r\n  });\r\n\r\n  const updateChart = (newData: MotorState) => {\r\n    const now = new Date().toLocaleTimeString();\r\n    setChartData(prev => {\r\n      const newLabels = [...prev.labels, now];\r\n      const newPositionData = [...prev.datasets[0].data, newData.multiTurnDeg_Mapped??0];\r\n      const newSpeedData = [...prev.datasets[1].data, newData.speedDeg_s];\r\n      const newTorqueData = [...prev.datasets[2].data, newData.torqueA];\r\n\r\n      if (newLabels.length > 200) {\r\n        newLabels.shift();\r\n        newPositionData.shift();\r\n        newSpeedData.shift();\r\n        newTorqueData.shift();\r\n      }\r\n\r\n      return {\r\n        labels: newLabels,\r\n        datasets: [\r\n          { ...prev.datasets[0], data: newPositionData },\r\n          { ...prev.datasets[1], data: newSpeedData },\r\n          { ...prev.datasets[2], data: newTorqueData }\r\n        ]\r\n      };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = socketService.onMotorStates(data => {\r\n      const motor = data.motors[String(jointId)];\r\n      if (motor) {\r\n        setMotorState(motor);\r\n        updateChart(motor);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [jointId]);\r\n\r\n  return (\r\n    <div className=\"card\" id={`card-${jointId}`}>\r\n      <h3>Joint {jointId}</h3>\r\n      <div className=\"card-content\">\r\n        <div className=\"card-left\">\r\n          <div className=\"data-section\">\r\n            <div>Temperature: <span className=\"temp\">{motorState?.temp.toFixed(2) || '--'}</span></div>\r\n            <div>Torque: <span className=\"torque\">{motorState?.torqueA.toFixed(2) || '--'}</span></div>\r\n            <div>Speed: <span className=\"speed\">{motorState?.speedDeg_s.toFixed(2) || '--'}</span></div>\r\n            <div>Encoder: <span className=\"enc\">{motorState?.encoder_val?.toFixed(6) || '--'}</span></div>\r\n            <div>Error: <span className=\"error\">{motorState?.error ? 'YES' : 'NO'}</span></div>\r\n            <br />\r\n            <div>[Single Turn] Raw Angle: <span className=\"position\">{motorState?.posDeg.toFixed(6) || '--'}</span></div>\r\n            <div>[Single Turn] Remapped Angle [rad]: <span className=\"pos_remapped_rad\">{motorState?.positionRad_Mapped?.toFixed(6) || '--'}</span></div>\r\n            <div>[Single Turn] Remapped Angle [deg]: <span className=\"pos_remapped_deg\">{motorState?.positionDeg_Mapped?.toFixed(6) || '--'}</span></div>\r\n            <br />\r\n            <div>[Multi Turn] Raw Angle: <span className=\"position_multi\">{motorState?.multiTurnRaw.toFixed(6) || '--'}</span></div>\r\n            <div>[Multi Turn] Remapped Angle [rad]: <span className=\"pos_remapped_rad_multi\">{motorState?.multiTurnRad_Mapped?.toFixed(6) || '--'}</span></div>\r\n            <div>[Multi Turn] Remapped Angle [deg]: <span className=\"pos_remapped_deg_multi\">{motorState?.multiTurnDeg_Mapped?.toFixed(6) || '--'}</span></div>\r\n          </div>\r\n          <div className=\"local-controls\">\r\n            <button onClick={() => motorControlService.motorOn(jointId)}>Motor ON</button>\r\n            <button onClick={() => motorControlService.motorOff(jointId)}>Motor OFF</button>\r\n            <button onClick={() => motorControlService.motorStop(jointId)}>Motor STOP</button>\r\n            <button onClick={() => motorControlService.clearMotorError(jointId)}>Clear Error</button>\r\n            <button onClick={() => motorControlService.syncSingleAndMulti(jointId)}>Sync Angles</button>\r\n            <div>\r\n              <label>Torque (raw):</label>\r\n              <input type=\"number\" value={torqueValue} onChange={(e) => setTorqueValue(Number(e.target.value))} />\r\n              <button onClick={() => motorControlService.setTorque(jointId, torqueValue)}>Set Torque</button>\r\n            </div>\r\n            <div>\r\n              <label>Position (deg):</label>\r\n              <input type=\"number\" value={positionValue} onChange={(e) => setPositionValue(Number(e.target.value))} />\r\n              <label>MaxSpeed (dps):</label>\r\n              <input type=\"number\" value={speedValue} onChange={(e) => setSpeedValue(Number(e.target.value))} />\r\n              <button onClick={() => motorControlService.setPosition(jointId, positionValue, speedValue)}>Set Position</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-right\">\r\n          <Line data={chartData} options={{ animation: false, scales: { x: { display: false } } }} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JointCard; ","import React, { useState } from 'react';\r\nimport { motorControlService } from '../services/motorControl';\r\n\r\ninterface SavedSet {\r\n  angles: number[];\r\n  speeds: number[];\r\n}\r\n\r\ninterface SavedSetsListProps {\r\n  savedSets: Record<string, SavedSet>;\r\n  onDeleteSet: (name: string) => void;\r\n  onUpdateSet: (name: string, set: SavedSet) => void;\r\n}\r\n\r\nconst SavedSetsList: React.FC<SavedSetsListProps> = ({ savedSets, onDeleteSet, onUpdateSet }) => {\r\n  const [editingSet, setEditingSet] = useState<string | null>(null);\r\n  const [editedSet, setEditedSet] = useState<SavedSet | null>(null);\r\n  const [hasChanges, setHasChanges] = useState(false);\r\n\r\n  const handleEditStart = (name: string) => {\r\n    setEditingSet(name);\r\n    setEditedSet({ ...savedSets[name] });\r\n    setHasChanges(false);\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setEditingSet(null);\r\n    setEditedSet(null);\r\n    setHasChanges(false);\r\n  };\r\n\r\n  const handleEditSave = () => {\r\n    if (editingSet && editedSet) {\r\n      onUpdateSet(editingSet, editedSet);\r\n      setEditingSet(null);\r\n      setEditedSet(null);\r\n      setHasChanges(false);\r\n    }\r\n  };\r\n\r\n  const handleValueChange = (jointIndex: number, field: 'angle' | 'speed', value: string) => {\r\n    if (editedSet) {\r\n      const newSet = { ...editedSet };\r\n      if (field === 'angle') {\r\n        newSet.angles[jointIndex] = parseFloat(value) || 0;\r\n      } else {\r\n        newSet.speeds[jointIndex] = parseFloat(value) || 0;\r\n      }\r\n      setEditedSet(newSet);\r\n      setHasChanges(true);\r\n    }\r\n  };\r\n\r\n  const handleSetAngles = (set: SavedSet) => {\r\n    motorControlService.setMultiJointAngles(set.angles, set.speeds);\r\n  };\r\n\r\n  const handleDelete = (name: string) => {\r\n    if (window.confirm(`Are you sure you want to delete the set \"${name}\"?`)) {\r\n      onDeleteSet(name);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"saved-sets-list\">\r\n      {Object.entries(savedSets).map(([name, set]) => (\r\n        <div key={name} className=\"saved-set-item\">\r\n          <div className=\"set-header\">\r\n            <h4>{name}</h4>\r\n            <div className=\"set-actions\">\r\n              <button onClick={() => handleSetAngles(set)}>Set Angles</button>\r\n              <button onClick={() => handleDelete(name)}>🗑️</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"set-values\">\r\n            {[1, 2, 3, 4, 5, 6, 7].map((jointId) => (\r\n              <div key={jointId} className=\"joint-value\">\r\n                <span className=\"joint-label\">Joint {jointId}:</span>\r\n                {editingSet === name ? (\r\n                  <>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={editedSet?.angles[jointId - 1]}\r\n                      onChange={(e) => handleValueChange(jointId - 1, 'angle', e.target.value)}\r\n                      className=\"editable-input\"\r\n                    />\r\n                    <input\r\n                      type=\"number\"\r\n                      value={editedSet?.speeds[jointId - 1]}\r\n                      onChange={(e) => handleValueChange(jointId - 1, 'speed', e.target.value)}\r\n                      className=\"editable-input\"\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <span className=\"value-display\">{set.angles[jointId - 1]}°</span>\r\n                    <span className=\"value-display\">{set.speeds[jointId - 1]} dps</span>\r\n                  </>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {editingSet === name ? (\r\n            <div className=\"edit-actions\">\r\n              <button onClick={handleEditSave} disabled={!hasChanges}>Save Changes</button>\r\n              <button onClick={handleEditCancel}>Cancel</button>\r\n            </div>\r\n          ) : (\r\n            <button onClick={() => handleEditStart(name)}>Edit</button>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SavedSetsList; ","import React, { useState, useEffect } from 'react';\r\nimport { motorControlService } from '../services/motorControl';\r\nimport SavedSetsList from './SavedSetsList';\r\n\r\ninterface SavedSet {\r\n  angles: number[];\r\n  speeds: number[];\r\n}\r\n\r\nconst MultiJointControl: React.FC = () => {\r\n  const [angles, setAngles] = useState<number[]>([-1, -1, -1, -1, -1, -1, -1]);\r\n  const [speeds, setSpeeds] = useState<number[]>([30, 30, 30, 30, 30, 30, 30]);\r\n  const [setName, setSetName] = useState<string>('');\r\n  const [savedSets, setSavedSets] = useState<Record<string, SavedSet>>({});\r\n\r\n  // Load saved sets from localStorage on component mount\r\n  useEffect(() => {\r\n    const saved = localStorage.getItem('savedAngleSets');\r\n    if (saved) {\r\n      setSavedSets(JSON.parse(saved));\r\n    }\r\n  }, []);\r\n\r\n  // Save sets to localStorage whenever they change\r\n  useEffect(() => {\r\n    localStorage.setItem('savedAngleSets', JSON.stringify(savedSets));\r\n  }, [savedSets]);\r\n\r\n  const handleAngleChange = (index: number, value: string) => {\r\n    const newAngles = [...angles];\r\n    newAngles[index] = parseFloat(value) || 0;\r\n    setAngles(newAngles);\r\n  };\r\n\r\n  const handleSpeedChange = (index: number, value: string) => {\r\n    const newSpeeds = [...speeds];\r\n    newSpeeds[index] = parseFloat(value) || 0;\r\n    setSpeeds(newSpeeds);\r\n  };\r\n\r\n  const handleSendCommand = () => {\r\n    motorControlService.setMultiJointAngles(angles, speeds);\r\n  };\r\n\r\n  const handleEmergencyStop = () => {\r\n    motorControlService.emergencyStop();\r\n  };\r\n\r\n  const handleSaveSet = () => {\r\n    if (!setName.trim()) {\r\n      alert('Please provide a name for the set');\r\n      return;\r\n    }\r\n    setSavedSets(prev => ({\r\n      ...prev,\r\n      [setName]: { angles: [...angles], speeds: [...speeds] }\r\n    }));\r\n    setSetName('');\r\n    alert(`Set saved as '${setName}'`);\r\n  };\r\n\r\n  const handleDeleteSet = (name: string) => {\r\n    setSavedSets(prev => {\r\n      const newSets = { ...prev };\r\n      delete newSets[name];\r\n      return newSets;\r\n    });\r\n  };\r\n\r\n  const handleUpdateSet = (name: string, set: SavedSet) => {\r\n    setSavedSets(prev => ({\r\n      ...prev,\r\n      [name]: set\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div id=\"multiJointControl\" className=\"container\">\r\n      <h2>Multi Joint Setpoints</h2>\r\n      <div className=\"multi-joint-grid\">\r\n        {[1, 2, 3, 4, 5, 6, 7].map((jointId) => (\r\n          <div key={jointId} className=\"multi-joint-column\" data-joint={jointId}>\r\n            <h3>Joint {jointId}</h3>\r\n            <label>Angle (deg):</label>\r\n            <input\r\n              type=\"number\"\r\n              id={`multiAngle-${jointId}`}\r\n              value={angles[jointId - 1]}\r\n              onChange={(e) => handleAngleChange(jointId - 1, e.target.value)}\r\n            />\r\n            <label>Max Speed (dps):</label>\r\n            <input\r\n              type=\"number\"\r\n              id={`multiSpeed-${jointId}`}\r\n              value={speeds[jointId - 1]}\r\n              onChange={(e) => handleSpeedChange(jointId - 1, e.target.value)}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"multi-joint-actions\">\r\n        <button id=\"sendMultiJoint\" onClick={handleSendCommand}>Send Multi Joint Command</button>\r\n        <button id=\"emergencyStop\" className=\"estop\" onClick={handleEmergencyStop}>ESTOP</button>\r\n      </div>\r\n      <div className=\"saved-sets\">\r\n        <h3>Saved Angle Sets</h3>\r\n        <div className=\"save-set-inputs\">\r\n          <input\r\n            type=\"text\"\r\n            value={setName}\r\n            onChange={(e) => setSetName(e.target.value)}\r\n            placeholder=\"Name this set\"\r\n          />\r\n          <button onClick={handleSaveSet}>Save Set</button>\r\n        </div>\r\n        <SavedSetsList\r\n          savedSets={savedSets}\r\n          onDeleteSet={handleDeleteSet}\r\n          onUpdateSet={handleUpdateSet}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MultiJointControl; ","import { socketService } from './socket';\r\nimport { EventEmitter } from 'events';\r\n\r\ninterface TwinState {\r\n  active: boolean;\r\n  joint_angles_deg: number[]; // First 5 elements are regular joints, last 2 are diff_pitch_rad and diff_roll_rad\r\n  diff_roll_rad?: number;\r\n  diff_pitch_rad?: number;\r\n}\r\n\r\ninterface MotorGains {\r\n  angKp: number;\r\n  angKi: number;\r\n  spdKp: number;\r\n  spdKi: number;\r\n  iqKp: number;\r\n  iqKi: number;\r\n}\r\n\r\ninterface MotorState {\r\n  temp: number;\r\n  torqueA: number;\r\n  speedDeg_s: number;\r\n  posDeg: number;\r\n  encoder_val?: number;\r\n  error?: number;\r\n  positionRad_Mapped?: number;\r\n  positionDeg_Mapped?: number;\r\n  multiTurnRaw: number;\r\n  multiTurnRad_Mapped?: number;\r\n  multiTurnDeg_Mapped?: number;\r\n  gains?: MotorGains;\r\n}\r\n\r\ninterface RobotState {\r\n  motors: {\r\n    [key: string]: MotorState;\r\n  };\r\n  diff_roll_rad?: number;\r\n  diff_pitch_rad?: number;\r\n  diff_roll_deg?: number;\r\n  diff_pitch_deg?: number;\r\n  twin?: TwinState;\r\n  connected: boolean;\r\n  lastUpdate: number;\r\n}\r\n\r\nclass RobotStateService extends EventEmitter {\r\n  private static instance: RobotStateService;\r\n  private state: RobotState = {\r\n    motors: {},\r\n    diff_roll_rad: 0,\r\n    diff_pitch_rad: 0,\r\n    diff_roll_deg: 0,\r\n    diff_pitch_deg: 0,\r\n    connected: false,\r\n    lastUpdate: 0\r\n  };\r\n  private connectionCheckInterval: NodeJS.Timeout | null = null;\r\n  private readonly CONNECTION_TIMEOUT_MS = 1000;\r\n\r\n  private constructor() {\r\n    super();\r\n    this.setupSocketListeners();\r\n    this.startConnectionCheck();\r\n    \r\n    // Also register with the specific motor states callback system\r\n    socketService.onMotorStates((data) => {\r\n      console.log('[RobotStateService] Received data via onMotorStates callback', data);\r\n      this.handleMotorStates(data);\r\n    });\r\n  }\r\n\r\n  public static getInstance(): RobotStateService {\r\n    if (!RobotStateService.instance) {\r\n      RobotStateService.instance = new RobotStateService();\r\n    }\r\n    return RobotStateService.instance;\r\n  }\r\n\r\n  private startConnectionCheck() {\r\n    this.connectionCheckInterval = setInterval(() => {\r\n      const timeSinceLastUpdate = Date.now() - this.state.lastUpdate;\r\n      const shouldBeConnected = timeSinceLastUpdate < this.CONNECTION_TIMEOUT_MS;\r\n      \r\n      if (this.state.connected !== shouldBeConnected) {\r\n        this.state.connected = shouldBeConnected;\r\n        this.emit('update', this.state);\r\n      }\r\n    }, 100); // Check every 100ms\r\n  }\r\n\r\n  private setupSocketListeners() {\r\n    socketService.on('connect', () => {\r\n      this.state.lastUpdate = Date.now();\r\n      this.emit('update', this.state);\r\n    });\r\n\r\n    socketService.on('disconnect', () => {\r\n      this.state.connected = false;\r\n      this.state.lastUpdate = Date.now();\r\n      this.emit('update', this.state);\r\n    });\r\n\r\n    socketService.on('connect_error', () => {\r\n      this.state.connected = false;\r\n      this.state.lastUpdate = Date.now();\r\n      this.emit('update', this.state);\r\n    });\r\n  }\r\n\r\n  private handleMotorStates(data: any) {\r\n    try {\r\n      // Create a new state object that preserves existing state\r\n      const newState: RobotState = {\r\n        connected: true,  // Set connected to true when we receive data\r\n        lastUpdate: Date.now(),\r\n        motors: {},  // Initialize motors object\r\n        diff_roll_rad: 0,\r\n        diff_pitch_rad: 0,\r\n        diff_roll_deg: 0,\r\n        diff_pitch_deg: 0,\r\n        twin: {\r\n          active: false,\r\n          joint_angles_deg: [0, 0, 0, 0, 0, 0, 0],\r\n          diff_roll_rad: 0,\r\n          diff_pitch_rad: 0,\r\n        },\r\n      };\r\n\r\n      // Process motor states\r\n      if (data.motors) {\r\n        Object.entries(data.motors).forEach(([key, value]: [string, any]) => {\r\n          if (!value) {\r\n            console.warn(`[RobotStateService] Missing data for motor ${key}`);\r\n            return;\r\n          }\r\n          \r\n          try {\r\n            console.log(`[RobotStateService] Processing motor ${key} data:`, value);\r\n            newState.motors[key] = {\r\n              temp: value.temp || 0,\r\n              torqueA: value.torqueA || 0,\r\n              speedDeg_s: value.speedDeg_s || 0,\r\n              posDeg: value.posDeg || 0,\r\n              multiTurnRaw: value.multiTurnRaw || 0,\r\n              multiTurnRad_Mapped: value.multiTurnRad_Mapped,\r\n              multiTurnDeg_Mapped: value.multiTurnDeg_Mapped,\r\n              error: value.error || 0,\r\n              encoder_val: value.encoder_val,\r\n              positionRad_Mapped: value.positionRad_Mapped,\r\n              positionDeg_Mapped: value.positionDeg_Mapped,\r\n              gains: value.gains ? {\r\n                angKp: value.gains.angKp || 0,\r\n                angKi: value.gains.angKi || 0,\r\n                spdKp: value.gains.spdKp || 0,\r\n                spdKi: value.gains.spdKi || 0,\r\n                iqKp: value.gains.iqKp || 0,\r\n                iqKi: value.gains.iqKi || 0\r\n              } : undefined\r\n            };\r\n            console.log(`[RobotStateService] Processed motor ${key} gains:`, newState.motors[key].gains);\r\n          } catch (err) {\r\n            console.error(`[RobotStateService] Error processing motor ${key} data:`, err);\r\n          }\r\n        });\r\n      } else {\r\n        console.warn('[RobotStateService] Received data without motors property');\r\n      }\r\n\r\n      // Add differential data\r\n      if (data.diff_roll_rad !== undefined) newState.diff_roll_rad = data.diff_roll_rad;\r\n      if (data.diff_pitch_rad !== undefined) newState.diff_pitch_rad = data.diff_pitch_rad;\r\n      if (data.diff_roll_deg !== undefined) newState.diff_roll_deg = data.diff_roll_deg;\r\n      if (data.diff_pitch_deg !== undefined) newState.diff_pitch_deg = data.diff_pitch_deg;\r\n\r\n      // Process twin state if present\r\n      if (data.twin) {\r\n        try {\r\n          newState.twin = {\r\n            active: !!data.twin.active,\r\n            joint_angles_deg: Array.isArray(data.twin.joint_angles_deg) ? \r\n              data.twin.joint_angles_deg : [0, 0, 0, 0, 0, 0, 0],\r\n            diff_roll_rad: Array.isArray(data.twin.joint_angles_deg) && data.twin.joint_angles_deg.length > 6 ?\r\n              data.twin.joint_angles_deg[6] : 0,\r\n            diff_pitch_rad: Array.isArray(data.twin.joint_angles_deg) && data.twin.joint_angles_deg.length > 5 ?\r\n              data.twin.joint_angles_deg[5] : 0,\r\n          };\r\n        } catch (err) {\r\n          console.error('[RobotStateService] Error processing twin data:', err);\r\n        }\r\n      }\r\n\r\n      console.log('[RobotStateService] Updating state with new data');\r\n      this.updateState(newState);\r\n    } catch (err) {\r\n      console.error('[RobotStateService] Error handling motor states:', err);\r\n    }\r\n  }\r\n\r\n  public getState(): RobotState {\r\n    return { ...this.state }; // Return a copy to prevent direct state mutation\r\n  }\r\n\r\n  public getMotorState(motorId: string): MotorState | undefined {\r\n    return this.state.motors[motorId];\r\n  }\r\n\r\n  public isConnected(): boolean {\r\n    return this.state.connected;\r\n  }\r\n\r\n  public getLastUpdate(): number {\r\n    return this.state.lastUpdate;\r\n  }\r\n\r\n  public cleanup() {\r\n    if (this.connectionCheckInterval) {\r\n      clearInterval(this.connectionCheckInterval);\r\n    }\r\n  }\r\n\r\n  public updateState(newState: Partial<RobotState>): void {\r\n    this.state = {\r\n      ...this.state,\r\n      ...newState,\r\n      motors: {\r\n        ...this.state.motors,\r\n        ...newState.motors\r\n      },\r\n      twin: {\r\n        ...(this.state.twin || { active: false, joint_angles_deg: [] }),\r\n        ...(newState.twin || {})\r\n      },\r\n      connected: this.state.connected,\r\n      lastUpdate: Date.now()\r\n    };\r\n    this.emit('update', this.state);\r\n  }\r\n\r\n  public updateTwinState(twinState: Partial<TwinState>): void {\r\n    this.state = {\r\n      ...this.state,\r\n      twin: {\r\n        ...(this.state.twin || { active: false, joint_angles_deg: [] }),\r\n        ...twinState,\r\n      }\r\n    };\r\n    this.emit('update', this.state);\r\n  }\r\n}\r\n\r\nexport const robotStateService = RobotStateService.getInstance(); ","import React, { useState, useEffect } from 'react';\r\nimport { motorControlService } from '../services/motorControl';\r\nimport { robotStateService } from '../services/robotState';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst CurrentGainsContainer = styled('div')(({ theme }) => ({\r\n  marginBottom: theme.spacing(2),\r\n  padding: theme.spacing(2),\r\n  backgroundColor: theme.palette.background.paper,\r\n  borderRadius: theme.shape.borderRadius,\r\n  boxShadow: theme.shadows[1],\r\n}));\r\n\r\nconst GainsGrid = styled('div')(({ theme }) => ({\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(2, 1fr)',\r\n  gap: theme.spacing(1),\r\n  marginTop: theme.spacing(1),\r\n}));\r\n\r\nconst GainsRow = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(0.5),\r\n  borderBottom: `1px solid ${theme.palette.divider}`,\r\n}));\r\n\r\nconst GainValue = styled('span')(({ theme }) => ({\r\n  fontWeight: 'bold',\r\n  color: theme.palette.primary.main,\r\n}));\r\n\r\nconst GlobalControls: React.FC = () => {\r\n  const [selectedJoint, setSelectedJoint] = useState<number>(1);\r\n  const [pidGains, setPidGains] = useState({\r\n    angKp: 100,\r\n    angKi: 50,\r\n    spdKp: 50,\r\n    spdKi: 20,\r\n    iqKp: 50,\r\n    iqKi: 50\r\n  });\r\n  const [encoderValue, setEncoderValue] = useState<number>(0);\r\n  const [accelVal, setAccelVal] = useState<number>(1000);\r\n  const [currentGains, setCurrentGains] = useState<{\r\n    angKp: number;\r\n    angKi: number;\r\n    spdKp: number;\r\n    spdKi: number;\r\n    iqKp: number;\r\n    iqKi: number;\r\n  } | null>(null);\r\n\r\n  // Subscribe to state updates to get current gains\r\n  useEffect(() => {\r\n    const handleStateUpdate = () => {\r\n      const state = robotStateService.getState();\r\n      const motorState = state.motors[selectedJoint.toString()];\r\n      console.log('[GlobalControls] State update received:', motorState);\r\n      if (motorState?.gains) {\r\n        console.log('[GlobalControls] Updating gains:', motorState.gains);\r\n        setCurrentGains(motorState.gains);\r\n        // Also update the input fields to match current gains\r\n        setPidGains({\r\n          angKp: motorState.gains.angKp,\r\n          angKi: motorState.gains.angKi,\r\n          spdKp: motorState.gains.spdKp,\r\n          spdKi: motorState.gains.spdKi,\r\n          iqKp: motorState.gains.iqKp,\r\n          iqKi: motorState.gains.iqKi\r\n        });\r\n      }\r\n    };\r\n\r\n    // Initial state check\r\n    handleStateUpdate();\r\n\r\n    // Subscribe to updates\r\n    robotStateService.on('update', handleStateUpdate);\r\n    return () => {\r\n      robotStateService.off('update', handleStateUpdate);\r\n    };\r\n  }, [selectedJoint]);\r\n\r\n  const handlePidChange = (field: string, value: string) => {\r\n    setPidGains(prev => ({\r\n      ...prev,\r\n      [field]: parseInt(value) || 0\r\n    }));\r\n  };\r\n\r\n  const handleReadPid = () => {\r\n    console.log('[GlobalControls] Reading PID for joint:', selectedJoint);\r\n    motorControlService.readPID(selectedJoint);\r\n  };\r\n\r\n  const handleWritePidRAM = () => {\r\n    motorControlService.writePID_RAM(\r\n      selectedJoint,\r\n      pidGains.angKp,\r\n      pidGains.angKi,\r\n      pidGains.spdKp,\r\n      pidGains.spdKi,\r\n      pidGains.iqKp,\r\n      pidGains.iqKi\r\n    );\r\n  };\r\n\r\n  const handleWritePidROM = () => {\r\n    motorControlService.writePID_ROM(\r\n      selectedJoint,\r\n      pidGains.angKp,\r\n      pidGains.angKi,\r\n      pidGains.spdKp,\r\n      pidGains.spdKi,\r\n      pidGains.iqKp,\r\n      pidGains.iqKi\r\n    );\r\n  };\r\n\r\n  const handleReadEncoder = () => {\r\n    motorControlService.readEncoder(selectedJoint);\r\n  };\r\n\r\n  const handleWriteEncoderZero = () => {\r\n    motorControlService.writeEncoderZero(selectedJoint, encoderValue);\r\n  };\r\n\r\n  const handleWriteCurrentPosZero = () => {\r\n    motorControlService.writeCurrentPosAsZero(selectedJoint);\r\n  };\r\n\r\n  const handleWriteAcceleration = () => {\r\n    motorControlService.writeAcceleration(selectedJoint, accelVal);\r\n  };\r\n\r\n  const handleReadAcceleration = () => {\r\n    motorControlService.readAcceleration(selectedJoint);\r\n  };\r\n\r\n  return (\r\n    <div id=\"globalControls\" className=\"container global-controls\">\r\n      <h2>Global Controls</h2>\r\n      \r\n      <div className=\"joint-selector\">\r\n        <label htmlFor=\"jointSelect\">Select Joint:</label>\r\n        <select\r\n          id=\"jointSelect\"\r\n          value={selectedJoint}\r\n          onChange={(e) => setSelectedJoint(parseInt(e.target.value))}\r\n        >\r\n          {[1, 2, 3, 4, 5, 6, 7].map((joint) => (\r\n            <option key={joint} value={joint}>Joint {joint}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"pid-controls\">\r\n        <h3>PID Control</h3>\r\n        \r\n        {/* Current Gains Display */}\r\n        <CurrentGainsContainer>\r\n          <h4>Current Gains</h4>\r\n          {currentGains ? (\r\n            <GainsGrid>\r\n              <GainsRow>\r\n                <span>Angle Kp:</span>\r\n                <GainValue>{currentGains.angKp}</GainValue>\r\n              </GainsRow>\r\n              <GainsRow>\r\n                <span>Angle Ki:</span>\r\n                <GainValue>{currentGains.angKi}</GainValue>\r\n              </GainsRow>\r\n              <GainsRow>\r\n                <span>Speed Kp:</span>\r\n                <GainValue>{currentGains.spdKp}</GainValue>\r\n              </GainsRow>\r\n              <GainsRow>\r\n                <span>Speed Ki:</span>\r\n                <GainValue>{currentGains.spdKi}</GainValue>\r\n              </GainsRow>\r\n              <GainsRow>\r\n                <span>IQ Kp:</span>\r\n                <GainValue>{currentGains.iqKp}</GainValue>\r\n              </GainsRow>\r\n              <GainsRow>\r\n                <span>IQ Ki:</span>\r\n                <GainValue>{currentGains.iqKi}</GainValue>\r\n              </GainsRow>\r\n            </GainsGrid>\r\n          ) : (\r\n            <p>No gains data available. Click \"Read PID Gains\" to fetch current values.</p>\r\n          )}\r\n        </CurrentGainsContainer>\r\n\r\n        <div className=\"pid-inputs\">\r\n          <div>\r\n            <label htmlFor=\"angKp\">Angle Kp:</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"angKp\"\r\n              value={pidGains.angKp}\r\n              onChange={(e) => handlePidChange('angKp', e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"angKi\">Angle Ki:</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"angKi\"\r\n              value={pidGains.angKi}\r\n              onChange={(e) => handlePidChange('angKi', e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"spdKp\">Speed Kp:</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"spdKp\"\r\n              value={pidGains.spdKp}\r\n              onChange={(e) => handlePidChange('spdKp', e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"spdKi\">Speed Ki:</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"spdKi\"\r\n              value={pidGains.spdKi}\r\n              onChange={(e) => handlePidChange('spdKi', e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"iqKp\">IQ Kp:</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"iqKp\"\r\n              value={pidGains.iqKp}\r\n              onChange={(e) => handlePidChange('iqKp', e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"iqKi\">IQ Ki:</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"iqKi\"\r\n              value={pidGains.iqKi}\r\n              onChange={(e) => handlePidChange('iqKi', e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"pid-actions\">\r\n          <button onClick={handleReadPid}>Read PID Gains</button>\r\n          <button onClick={handleWritePidRAM}>Write Gains to RAM</button>\r\n          <button onClick={handleWritePidROM}>Write Gains to ROM</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"encoder-controls\">\r\n        <h3>Encoder</h3>\r\n        <div className=\"encoder-input\">\r\n          <label htmlFor=\"encoderValue\">Encoder Value:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"encoderValue\"\r\n            value={encoderValue}\r\n            onChange={(e) => setEncoderValue(parseInt(e.target.value) || 0)}\r\n          />\r\n        </div>\r\n        <div className=\"encoder-actions\">\r\n          <button onClick={handleReadEncoder}>Read Encoder</button>\r\n          <button onClick={handleWriteEncoderZero}>Set Encoder Zero</button>\r\n          <button onClick={handleWriteCurrentPosZero}>Write Current Pos as Zero</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"accel-controls\">\r\n        <h3>Acceleration</h3>\r\n        <div className=\"accel-input\">\r\n          <label htmlFor=\"accelVal\">Acceleration Value (1 dps^2):</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"accelVal\"\r\n            value={accelVal}\r\n            onChange={(e) => setAccelVal(parseInt(e.target.value) || 0)}\r\n          />\r\n        </div>\r\n        <div className=\"accel-actions\">\r\n          <button onClick={handleWriteAcceleration}>Write Acceleration</button>\r\n          <button onClick={handleReadAcceleration}>Read Acceleration</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GlobalControls; ","import React from 'react';\r\nimport { Paper } from '@mui/material';\r\nimport JointCard from '../components/JointCard';\r\nimport MultiJointControl from '../components/MultiJointControl';\r\nimport GlobalControls from '../components/GlobalControls';\r\n\r\nconst JointControl: React.FC = () => {\r\n  return (\r\n    <Paper sx={{ p: 3 }}>\r\n      <h1>Armatron Motor Tuner</h1>\r\n\r\n      <MultiJointControl />\r\n\r\n      <div id=\"cardsGrid\" className=\"cards-grid\">\r\n        {[1, 2, 3, 4, 5, 6, 7].map((jointId) => (\r\n          <JointCard key={jointId} jointId={jointId} />\r\n        ))}\r\n      </div>\r\n\r\n      <GlobalControls />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default JointControl; ","import {\n\tBufferAttribute,\n\tBufferGeometry,\n\tColor,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tLoader,\n\tVector3\n} from 'three';\n\n/**\n * Description: A THREE loader for STL ASCII files, as created by Solidworks and other CAD programs.\n *\n * Supports both binary and ASCII encoded files, with automatic detection of type.\n *\n * The loader returns a non-indexed buffer geometry.\n *\n * Limitations:\n *  Binary decoding supports \"Magics\" color format (http://en.wikipedia.org/wiki/STL_(file_format)#Color_in_binary_STL).\n *  There is perhaps some question as to how valid it is to always assume little-endian-ness.\n *  ASCII decoding assumes file is UTF-8.\n *\n * Usage:\n *  const loader = new STLLoader();\n *  loader.load( './models/stl/slotted_disk.stl', function ( geometry ) {\n *    scene.add( new THREE.Mesh( geometry ) );\n *  });\n *\n * For binary STLs geometry might contain colors for vertices. To use it:\n *  // use the same code to load STL as above\n *  if (geometry.hasColors) {\n *    material = new THREE.MeshPhongMaterial({ opacity: geometry.alpha, vertexColors: true });\n *  } else { .... }\n *  const mesh = new THREE.Mesh( geometry, material );\n *\n * For ASCII STLs containing multiple solids, each solid is assigned to a different group.\n * Groups can be used to assign a different color by defining an array of materials with the same length of\n * geometry.groups and passing it to the Mesh constructor:\n *\n * const mesh = new THREE.Mesh( geometry, material );\n *\n * For example:\n *\n *  const materials = [];\n *  const nGeometryGroups = geometry.groups.length;\n *\n *  const colorMap = ...; // Some logic to index colors.\n *\n *  for (let i = 0; i < nGeometryGroups; i++) {\n *\n *\t\tconst material = new THREE.MeshPhongMaterial({\n *\t\t\tcolor: colorMap[i],\n *\t\t\twireframe: false\n *\t\t});\n *\n *  }\n *\n *  materials.push(material);\n *  const mesh = new THREE.Mesh(geometry, materials);\n */\n\n\nclass STLLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( data ) {\n\n\t\tfunction isBinary( data ) {\n\n\t\t\tconst reader = new DataView( data );\n\t\t\tconst face_size = ( 32 / 8 * 3 ) + ( ( 32 / 8 * 3 ) * 3 ) + ( 16 / 8 );\n\t\t\tconst n_faces = reader.getUint32( 80, true );\n\t\t\tconst expect = 80 + ( 32 / 8 ) + ( n_faces * face_size );\n\n\t\t\tif ( expect === reader.byteLength ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// An ASCII STL data must begin with 'solid ' as the first six bytes.\n\t\t\t// However, ASCII STLs lacking the SPACE after the 'd' are known to be\n\t\t\t// plentiful.  So, check the first 5 bytes for 'solid'.\n\n\t\t\t// Several encodings, such as UTF-8, precede the text with up to 5 bytes:\n\t\t\t// https://en.wikipedia.org/wiki/Byte_order_mark#Byte_order_marks_by_encoding\n\t\t\t// Search for \"solid\" to start anywhere after those prefixes.\n\n\t\t\t// US-ASCII ordinal values for 's', 'o', 'l', 'i', 'd'\n\n\t\t\tconst solid = [ 115, 111, 108, 105, 100 ];\n\n\t\t\tfor ( let off = 0; off < 5; off ++ ) {\n\n\t\t\t\t// If \"solid\" text is matched to the current offset, declare it to be an ASCII STL.\n\n\t\t\t\tif ( matchDataViewAt( solid, reader, off ) ) return false;\n\n\t\t\t}\n\n\t\t\t// Couldn't find \"solid\" text at the beginning; it is binary STL.\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tfunction matchDataViewAt( query, reader, offset ) {\n\n\t\t\t// Check if each byte in query matches the corresponding byte from the current offset\n\n\t\t\tfor ( let i = 0, il = query.length; i < il; i ++ ) {\n\n\t\t\t\tif ( query[ i ] !== reader.getUint8( offset + i ) ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tfunction parseBinary( data ) {\n\n\t\t\tconst reader = new DataView( data );\n\t\t\tconst faces = reader.getUint32( 80, true );\n\n\t\t\tlet r, g, b, hasColors = false, colors;\n\t\t\tlet defaultR, defaultG, defaultB, alpha;\n\n\t\t\t// process STL header\n\t\t\t// check for default color in header (\"COLOR=rgba\" sequence).\n\n\t\t\tfor ( let index = 0; index < 80 - 10; index ++ ) {\n\n\t\t\t\tif ( ( reader.getUint32( index, false ) == 0x434F4C4F /*COLO*/ ) &&\n\t\t\t\t\t( reader.getUint8( index + 4 ) == 0x52 /*'R'*/ ) &&\n\t\t\t\t\t( reader.getUint8( index + 5 ) == 0x3D /*'='*/ ) ) {\n\n\t\t\t\t\thasColors = true;\n\t\t\t\t\tcolors = new Float32Array( faces * 3 * 3 );\n\n\t\t\t\t\tdefaultR = reader.getUint8( index + 6 ) / 255;\n\t\t\t\t\tdefaultG = reader.getUint8( index + 7 ) / 255;\n\t\t\t\t\tdefaultB = reader.getUint8( index + 8 ) / 255;\n\t\t\t\t\talpha = reader.getUint8( index + 9 ) / 255;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst dataOffset = 84;\n\t\t\tconst faceLength = 12 * 4 + 2;\n\n\t\t\tconst geometry = new BufferGeometry();\n\n\t\t\tconst vertices = new Float32Array( faces * 3 * 3 );\n\t\t\tconst normals = new Float32Array( faces * 3 * 3 );\n\n\t\t\tconst color = new Color();\n\n\t\t\tfor ( let face = 0; face < faces; face ++ ) {\n\n\t\t\t\tconst start = dataOffset + face * faceLength;\n\t\t\t\tconst normalX = reader.getFloat32( start, true );\n\t\t\t\tconst normalY = reader.getFloat32( start + 4, true );\n\t\t\t\tconst normalZ = reader.getFloat32( start + 8, true );\n\n\t\t\t\tif ( hasColors ) {\n\n\t\t\t\t\tconst packedColor = reader.getUint16( start + 48, true );\n\n\t\t\t\t\tif ( ( packedColor & 0x8000 ) === 0 ) {\n\n\t\t\t\t\t\t// facet has its own unique color\n\n\t\t\t\t\t\tr = ( packedColor & 0x1F ) / 31;\n\t\t\t\t\t\tg = ( ( packedColor >> 5 ) & 0x1F ) / 31;\n\t\t\t\t\t\tb = ( ( packedColor >> 10 ) & 0x1F ) / 31;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tr = defaultR;\n\t\t\t\t\t\tg = defaultG;\n\t\t\t\t\t\tb = defaultB;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 1; i <= 3; i ++ ) {\n\n\t\t\t\t\tconst vertexstart = start + i * 12;\n\t\t\t\t\tconst componentIdx = ( face * 3 * 3 ) + ( ( i - 1 ) * 3 );\n\n\t\t\t\t\tvertices[ componentIdx ] = reader.getFloat32( vertexstart, true );\n\t\t\t\t\tvertices[ componentIdx + 1 ] = reader.getFloat32( vertexstart + 4, true );\n\t\t\t\t\tvertices[ componentIdx + 2 ] = reader.getFloat32( vertexstart + 8, true );\n\n\t\t\t\t\tnormals[ componentIdx ] = normalX;\n\t\t\t\t\tnormals[ componentIdx + 1 ] = normalY;\n\t\t\t\t\tnormals[ componentIdx + 2 ] = normalZ;\n\n\t\t\t\t\tif ( hasColors ) {\n\n\t\t\t\t\t\tcolor.set( r, g, b ).convertSRGBToLinear();\n\n\t\t\t\t\t\tcolors[ componentIdx ] = color.r;\n\t\t\t\t\t\tcolors[ componentIdx + 1 ] = color.g;\n\t\t\t\t\t\tcolors[ componentIdx + 2 ] = color.b;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'position', new BufferAttribute( vertices, 3 ) );\n\t\t\tgeometry.setAttribute( 'normal', new BufferAttribute( normals, 3 ) );\n\n\t\t\tif ( hasColors ) {\n\n\t\t\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\t\t\t\tgeometry.hasColors = true;\n\t\t\t\tgeometry.alpha = alpha;\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\tfunction parseASCII( data ) {\n\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tconst patternSolid = /solid([\\s\\S]*?)endsolid/g;\n\t\t\tconst patternFace = /facet([\\s\\S]*?)endfacet/g;\n\t\t\tconst patternName = /solid\\s(.+)/;\n\t\t\tlet faceCounter = 0;\n\n\t\t\tconst patternFloat = /[\\s]+([+-]?(?:\\d*)(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)/.source;\n\t\t\tconst patternVertex = new RegExp( 'vertex' + patternFloat + patternFloat + patternFloat, 'g' );\n\t\t\tconst patternNormal = new RegExp( 'normal' + patternFloat + patternFloat + patternFloat, 'g' );\n\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst groupNames = [];\n\n\t\t\tconst normal = new Vector3();\n\n\t\t\tlet result;\n\n\t\t\tlet groupCount = 0;\n\t\t\tlet startVertex = 0;\n\t\t\tlet endVertex = 0;\n\n\t\t\twhile ( ( result = patternSolid.exec( data ) ) !== null ) {\n\n\t\t\t\tstartVertex = endVertex;\n\n\t\t\t\tconst solid = result[ 0 ];\n\n\t\t\t\tconst name = ( result = patternName.exec( solid ) ) !== null ? result[ 1 ] : '';\n\t\t\t\tgroupNames.push( name );\n\n\t\t\t\twhile ( ( result = patternFace.exec( solid ) ) !== null ) {\n\n\t\t\t\t\tlet vertexCountPerFace = 0;\n\t\t\t\t\tlet normalCountPerFace = 0;\n\n\t\t\t\t\tconst text = result[ 0 ];\n\n\t\t\t\t\twhile ( ( result = patternNormal.exec( text ) ) !== null ) {\n\n\t\t\t\t\t\tnormal.x = parseFloat( result[ 1 ] );\n\t\t\t\t\t\tnormal.y = parseFloat( result[ 2 ] );\n\t\t\t\t\t\tnormal.z = parseFloat( result[ 3 ] );\n\t\t\t\t\t\tnormalCountPerFace ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\twhile ( ( result = patternVertex.exec( text ) ) !== null ) {\n\n\t\t\t\t\t\tvertices.push( parseFloat( result[ 1 ] ), parseFloat( result[ 2 ] ), parseFloat( result[ 3 ] ) );\n\t\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\t\t\t\t\t\tvertexCountPerFace ++;\n\t\t\t\t\t\tendVertex ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// every face have to own ONE valid normal\n\n\t\t\t\t\tif ( normalCountPerFace !== 1 ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.STLLoader: Something isn\\'t right with the normal of face number ' + faceCounter );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// each face have to own THREE valid vertices\n\n\t\t\t\t\tif ( vertexCountPerFace !== 3 ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.STLLoader: Something isn\\'t right with the vertices of face number ' + faceCounter );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceCounter ++;\n\n\t\t\t\t}\n\n\t\t\t\tconst start = startVertex;\n\t\t\t\tconst count = endVertex - startVertex;\n\n\t\t\t\tgeometry.userData.groupNames = groupNames;\n\n\t\t\t\tgeometry.addGroup( start, count, groupCount );\n\t\t\t\tgroupCount ++;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tgeometry.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\tfunction ensureString( buffer ) {\n\n\t\t\tif ( typeof buffer !== 'string' ) {\n\n\t\t\t\treturn new TextDecoder().decode( buffer );\n\n\t\t\t}\n\n\t\t\treturn buffer;\n\n\t\t}\n\n\t\tfunction ensureBinary( buffer ) {\n\n\t\t\tif ( typeof buffer === 'string' ) {\n\n\t\t\t\tconst array_buffer = new Uint8Array( buffer.length );\n\t\t\t\tfor ( let i = 0; i < buffer.length; i ++ ) {\n\n\t\t\t\t\tarray_buffer[ i ] = buffer.charCodeAt( i ) & 0xff; // implicitly assumes little-endian\n\n\t\t\t\t}\n\n\t\t\t\treturn array_buffer.buffer || array_buffer;\n\n\t\t\t} else {\n\n\t\t\t\treturn buffer;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// start\n\n\t\tconst binData = ensureBinary( data );\n\n\t\treturn isBinary( binData ) ? parseBinary( binData ) : parseASCII( ensureString( data ) );\n\n\t}\n\n}\n\nexport { STLLoader };\n","import {\n\tDataTextureLoader,\n\tLinearMipmapLinearFilter\n} from 'three';\n\nclass TGALoader extends DataTextureLoader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tparse( buffer ) {\n\n\t\t// reference from vthibault, https://github.com/vthibault/roBrowser/blob/master/src/Loaders/Targa.js\n\n\t\tfunction tgaCheckHeader( header ) {\n\n\t\t\tswitch ( header.image_type ) {\n\n\t\t\t\t// check indexed type\n\n\t\t\t\tcase TGA_TYPE_INDEXED:\n\t\t\t\tcase TGA_TYPE_RLE_INDEXED:\n\t\t\t\t\tif ( header.colormap_length > 256 || header.colormap_size !== 24 || header.colormap_type !== 1 ) {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.TGALoader: Invalid type colormap data for indexed type.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// check colormap type\n\n\t\t\t\tcase TGA_TYPE_RGB:\n\t\t\t\tcase TGA_TYPE_GREY:\n\t\t\t\tcase TGA_TYPE_RLE_RGB:\n\t\t\t\tcase TGA_TYPE_RLE_GREY:\n\t\t\t\t\tif ( header.colormap_type ) {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.TGALoader: Invalid type colormap data for colormap type.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// What the need of a file without data ?\n\n\t\t\t\tcase TGA_TYPE_NO_DATA:\n\t\t\t\t\tthrow new Error( 'THREE.TGALoader: No data.' );\n\n\t\t\t\t\t// Invalid type ?\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'THREE.TGALoader: Invalid type ' + header.image_type );\n\n\t\t\t}\n\n\t\t\t// check image width and height\n\n\t\t\tif ( header.width <= 0 || header.height <= 0 ) {\n\n\t\t\t\tthrow new Error( 'THREE.TGALoader: Invalid image size.' );\n\n\t\t\t}\n\n\t\t\t// check image pixel size\n\n\t\t\tif ( header.pixel_size !== 8 && header.pixel_size !== 16 &&\n\t\t\t\theader.pixel_size !== 24 && header.pixel_size !== 32 ) {\n\n\t\t\t\tthrow new Error( 'THREE.TGALoader: Invalid pixel size ' + header.pixel_size );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// parse tga image buffer\n\n\t\tfunction tgaParse( use_rle, use_pal, header, offset, data ) {\n\n\t\t\tlet pixel_data,\n\t\t\t\tpalettes;\n\n\t\t\tconst pixel_size = header.pixel_size >> 3;\n\t\t\tconst pixel_total = header.width * header.height * pixel_size;\n\n\t\t\t // read palettes\n\n\t\t\t if ( use_pal ) {\n\n\t\t\t\t palettes = data.subarray( offset, offset += header.colormap_length * ( header.colormap_size >> 3 ) );\n\n\t\t\t }\n\n\t\t\t // read RLE\n\n\t\t\t if ( use_rle ) {\n\n\t\t\t\t pixel_data = new Uint8Array( pixel_total );\n\n\t\t\t\tlet c, count, i;\n\t\t\t\tlet shift = 0;\n\t\t\t\tconst pixels = new Uint8Array( pixel_size );\n\n\t\t\t\twhile ( shift < pixel_total ) {\n\n\t\t\t\t\tc = data[ offset ++ ];\n\t\t\t\t\tcount = ( c & 0x7f ) + 1;\n\n\t\t\t\t\t// RLE pixels\n\n\t\t\t\t\tif ( c & 0x80 ) {\n\n\t\t\t\t\t\t// bind pixel tmp array\n\n\t\t\t\t\t\tfor ( i = 0; i < pixel_size; ++ i ) {\n\n\t\t\t\t\t\t\tpixels[ i ] = data[ offset ++ ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// copy pixel array\n\n\t\t\t\t\t\tfor ( i = 0; i < count; ++ i ) {\n\n\t\t\t\t\t\t\tpixel_data.set( pixels, shift + i * pixel_size );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tshift += pixel_size * count;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// raw pixels\n\n\t\t\t\t\t\tcount *= pixel_size;\n\n\t\t\t\t\t\tfor ( i = 0; i < count; ++ i ) {\n\n\t\t\t\t\t\t\tpixel_data[ shift + i ] = data[ offset ++ ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tshift += count;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t } else {\n\n\t\t\t\t// raw pixels\n\n\t\t\t\tpixel_data = data.subarray(\n\t\t\t\t\t offset, offset += ( use_pal ? header.width * header.height : pixel_total )\n\t\t\t\t);\n\n\t\t\t }\n\n\t\t\t return {\n\t\t\t\tpixel_data: pixel_data,\n\t\t\t\tpalettes: palettes\n\t\t\t };\n\n\t\t}\n\n\t\tfunction tgaGetImageData8bits( imageData, y_start, y_step, y_end, x_start, x_step, x_end, image, palettes ) {\n\n\t\t\tconst colormap = palettes;\n\t\t\tlet color, i = 0, x, y;\n\t\t\tconst width = header.width;\n\n\t\t\tfor ( y = y_start; y !== y_end; y += y_step ) {\n\n\t\t\t\tfor ( x = x_start; x !== x_end; x += x_step, i ++ ) {\n\n\t\t\t\t\tcolor = image[ i ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 3 ] = 255;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 2 ] = colormap[ ( color * 3 ) + 0 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 1 ] = colormap[ ( color * 3 ) + 1 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 0 ] = colormap[ ( color * 3 ) + 2 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn imageData;\n\n\t\t}\n\n\t\tfunction tgaGetImageData16bits( imageData, y_start, y_step, y_end, x_start, x_step, x_end, image ) {\n\n\t\t\tlet color, i = 0, x, y;\n\t\t\tconst width = header.width;\n\n\t\t\tfor ( y = y_start; y !== y_end; y += y_step ) {\n\n\t\t\t\tfor ( x = x_start; x !== x_end; x += x_step, i += 2 ) {\n\n\t\t\t\t\tcolor = image[ i + 0 ] + ( image[ i + 1 ] << 8 );\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 0 ] = ( color & 0x7C00 ) >> 7;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 1 ] = ( color & 0x03E0 ) >> 2;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 2 ] = ( color & 0x001F ) << 3;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 3 ] = ( color & 0x8000 ) ? 0 : 255;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn imageData;\n\n\t\t}\n\n\t\tfunction tgaGetImageData24bits( imageData, y_start, y_step, y_end, x_start, x_step, x_end, image ) {\n\n\t\t\tlet i = 0, x, y;\n\t\t\tconst width = header.width;\n\n\t\t\tfor ( y = y_start; y !== y_end; y += y_step ) {\n\n\t\t\t\tfor ( x = x_start; x !== x_end; x += x_step, i += 3 ) {\n\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 3 ] = 255;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 2 ] = image[ i + 0 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 1 ] = image[ i + 1 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 0 ] = image[ i + 2 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn imageData;\n\n\t\t}\n\n\t\tfunction tgaGetImageData32bits( imageData, y_start, y_step, y_end, x_start, x_step, x_end, image ) {\n\n\t\t\tlet i = 0, x, y;\n\t\t\tconst width = header.width;\n\n\t\t\tfor ( y = y_start; y !== y_end; y += y_step ) {\n\n\t\t\t\tfor ( x = x_start; x !== x_end; x += x_step, i += 4 ) {\n\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 2 ] = image[ i + 0 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 1 ] = image[ i + 1 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 0 ] = image[ i + 2 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 3 ] = image[ i + 3 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn imageData;\n\n\t\t}\n\n\t\tfunction tgaGetImageDataGrey8bits( imageData, y_start, y_step, y_end, x_start, x_step, x_end, image ) {\n\n\t\t\tlet color, i = 0, x, y;\n\t\t\tconst width = header.width;\n\n\t\t\tfor ( y = y_start; y !== y_end; y += y_step ) {\n\n\t\t\t\tfor ( x = x_start; x !== x_end; x += x_step, i ++ ) {\n\n\t\t\t\t\tcolor = image[ i ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 0 ] = color;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 1 ] = color;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 2 ] = color;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 3 ] = 255;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn imageData;\n\n\t\t}\n\n\t\tfunction tgaGetImageDataGrey16bits( imageData, y_start, y_step, y_end, x_start, x_step, x_end, image ) {\n\n\t\t\tlet i = 0, x, y;\n\t\t\tconst width = header.width;\n\n\t\t\tfor ( y = y_start; y !== y_end; y += y_step ) {\n\n\t\t\t\tfor ( x = x_start; x !== x_end; x += x_step, i += 2 ) {\n\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 0 ] = image[ i + 0 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 1 ] = image[ i + 0 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 2 ] = image[ i + 0 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 3 ] = image[ i + 1 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn imageData;\n\n\t\t}\n\n\t\tfunction getTgaRGBA( data, width, height, image, palette ) {\n\n\t\t\tlet x_start,\n\t\t\t\ty_start,\n\t\t\t\tx_step,\n\t\t\t\ty_step,\n\t\t\t\tx_end,\n\t\t\t\ty_end;\n\n\t\t\tswitch ( ( header.flags & TGA_ORIGIN_MASK ) >> TGA_ORIGIN_SHIFT ) {\n\n\t\t\t\tdefault:\n\t\t\t\tcase TGA_ORIGIN_UL:\n\t\t\t\t\tx_start = 0;\n\t\t\t\t\tx_step = 1;\n\t\t\t\t\tx_end = width;\n\t\t\t\t\ty_start = 0;\n\t\t\t\t\ty_step = 1;\n\t\t\t\t\ty_end = height;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TGA_ORIGIN_BL:\n\t\t\t\t\tx_start = 0;\n\t\t\t\t\tx_step = 1;\n\t\t\t\t\tx_end = width;\n\t\t\t\t\ty_start = height - 1;\n\t\t\t\t\ty_step = - 1;\n\t\t\t\t\ty_end = - 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TGA_ORIGIN_UR:\n\t\t\t\t\tx_start = width - 1;\n\t\t\t\t\tx_step = - 1;\n\t\t\t\t\tx_end = - 1;\n\t\t\t\t\ty_start = 0;\n\t\t\t\t\ty_step = 1;\n\t\t\t\t\ty_end = height;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TGA_ORIGIN_BR:\n\t\t\t\t\tx_start = width - 1;\n\t\t\t\t\tx_step = - 1;\n\t\t\t\t\tx_end = - 1;\n\t\t\t\t\ty_start = height - 1;\n\t\t\t\t\ty_step = - 1;\n\t\t\t\t\ty_end = - 1;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( use_grey ) {\n\n\t\t\t\tswitch ( header.pixel_size ) {\n\n\t\t\t\t\tcase 8:\n\t\t\t\t\t\ttgaGetImageDataGrey8bits( data, y_start, y_step, y_end, x_start, x_step, x_end, image );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 16:\n\t\t\t\t\t\ttgaGetImageDataGrey16bits( data, y_start, y_step, y_end, x_start, x_step, x_end, image );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error( 'THREE.TGALoader: Format not supported.' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tswitch ( header.pixel_size ) {\n\n\t\t\t\t\tcase 8:\n\t\t\t\t\t\ttgaGetImageData8bits( data, y_start, y_step, y_end, x_start, x_step, x_end, image, palette );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 16:\n\t\t\t\t\t\ttgaGetImageData16bits( data, y_start, y_step, y_end, x_start, x_step, x_end, image );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 24:\n\t\t\t\t\t\ttgaGetImageData24bits( data, y_start, y_step, y_end, x_start, x_step, x_end, image );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 32:\n\t\t\t\t\t\ttgaGetImageData32bits( data, y_start, y_step, y_end, x_start, x_step, x_end, image );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error( 'THREE.TGALoader: Format not supported.' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Load image data according to specific method\n\t\t\t// let func = 'tgaGetImageData' + (use_grey ? 'Grey' : '') + (header.pixel_size) + 'bits';\n\t\t\t// func(data, y_start, y_step, y_end, x_start, x_step, x_end, width, image, palette );\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// TGA constants\n\n\t\tconst TGA_TYPE_NO_DATA = 0,\n\t\t\tTGA_TYPE_INDEXED = 1,\n\t\t\tTGA_TYPE_RGB = 2,\n\t\t\tTGA_TYPE_GREY = 3,\n\t\t\tTGA_TYPE_RLE_INDEXED = 9,\n\t\t\tTGA_TYPE_RLE_RGB = 10,\n\t\t\tTGA_TYPE_RLE_GREY = 11,\n\n\t\t\tTGA_ORIGIN_MASK = 0x30,\n\t\t\tTGA_ORIGIN_SHIFT = 0x04,\n\t\t\tTGA_ORIGIN_BL = 0x00,\n\t\t\tTGA_ORIGIN_BR = 0x01,\n\t\t\tTGA_ORIGIN_UL = 0x02,\n\t\t\tTGA_ORIGIN_UR = 0x03;\n\n\t\tif ( buffer.length < 19 ) throw new Error( 'THREE.TGALoader: Not enough data to contain header.' );\n\n\t\tlet offset = 0;\n\n\t\tconst content = new Uint8Array( buffer ),\n\t\t\theader = {\n\t\t\t\tid_length: content[ offset ++ ],\n\t\t\t\tcolormap_type: content[ offset ++ ],\n\t\t\t\timage_type: content[ offset ++ ],\n\t\t\t\tcolormap_index: content[ offset ++ ] | content[ offset ++ ] << 8,\n\t\t\t\tcolormap_length: content[ offset ++ ] | content[ offset ++ ] << 8,\n\t\t\t\tcolormap_size: content[ offset ++ ],\n\t\t\t\torigin: [\n\t\t\t\t\tcontent[ offset ++ ] | content[ offset ++ ] << 8,\n\t\t\t\t\tcontent[ offset ++ ] | content[ offset ++ ] << 8\n\t\t\t\t],\n\t\t\t\twidth: content[ offset ++ ] | content[ offset ++ ] << 8,\n\t\t\t\theight: content[ offset ++ ] | content[ offset ++ ] << 8,\n\t\t\t\tpixel_size: content[ offset ++ ],\n\t\t\t\tflags: content[ offset ++ ]\n\t\t\t};\n\n\t\t// check tga if it is valid format\n\n\t\ttgaCheckHeader( header );\n\n\t\tif ( header.id_length + offset > buffer.length ) {\n\n\t\t\tthrow new Error( 'THREE.TGALoader: No data.' );\n\n\t\t}\n\n\t\t// skip the needn't data\n\n\t\toffset += header.id_length;\n\n\t\t// get targa information about RLE compression and palette\n\n\t\tlet use_rle = false,\n\t\t\tuse_pal = false,\n\t\t\tuse_grey = false;\n\n\t\tswitch ( header.image_type ) {\n\n\t\t\tcase TGA_TYPE_RLE_INDEXED:\n\t\t\t\tuse_rle = true;\n\t\t\t\tuse_pal = true;\n\t\t\t\tbreak;\n\n\t\t\tcase TGA_TYPE_INDEXED:\n\t\t\t\tuse_pal = true;\n\t\t\t\tbreak;\n\n\t\t\tcase TGA_TYPE_RLE_RGB:\n\t\t\t\tuse_rle = true;\n\t\t\t\tbreak;\n\n\t\t\tcase TGA_TYPE_RGB:\n\t\t\t\tbreak;\n\n\t\t\tcase TGA_TYPE_RLE_GREY:\n\t\t\t\tuse_rle = true;\n\t\t\t\tuse_grey = true;\n\t\t\t\tbreak;\n\n\t\t\tcase TGA_TYPE_GREY:\n\t\t\t\tuse_grey = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t//\n\n\t\tconst imageData = new Uint8Array( header.width * header.height * 4 );\n\t\tconst result = tgaParse( use_rle, use_pal, header, offset, content );\n\t\tgetTgaRGBA( imageData, header.width, header.height, result.pixel_data, result.palettes );\n\n\t\treturn {\n\n\t\t\tdata: imageData,\n\t\t\twidth: header.width,\n\t\t\theight: header.height,\n\t\t\tflipY: true,\n\t\t\tgenerateMipmaps: true,\n\t\t\tminFilter: LinearMipmapLinearFilter,\n\n\t\t};\n\n\t}\n\n}\n\nexport { TGALoader };\n","import {\n\tAmbientLight,\n\tAnimationClip,\n\tBone,\n\tBufferGeometry,\n\tClampToEdgeWrapping,\n\tColor,\n\tDirectionalLight,\n\tDoubleSide,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tFrontSide,\n\tGroup,\n\tLine,\n\tLineBasicMaterial,\n\tLineSegments,\n\tLoader,\n\tLoaderUtils,\n\tMathUtils,\n\tMatrix4,\n\tMesh,\n\tMeshBasicMaterial,\n\tMeshLambertMaterial,\n\tMeshPhongMaterial,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPointLight,\n\tQuaternion,\n\tQuaternionKeyframeTrack,\n\tRepeatWrapping,\n\tScene,\n\tSkeleton,\n\tSkinnedMesh,\n\tSpotLight,\n\tTextureLoader,\n\tVector2,\n\tVector3,\n\tVectorKeyframeTrack,\n\tSRGBColorSpace\n} from 'three';\nimport { TGALoader } from '../loaders/TGALoader.js';\n\nclass ColladaLoader extends Loader {\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( scope.path === '' ) ? LoaderUtils.extractUrlBase( url ) : scope.path;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text, path ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( text, path ) {\n\n\t\tfunction getElementsByTagName( xml, name ) {\n\n\t\t\t// Non recursive xml.getElementsByTagName() ...\n\n\t\t\tconst array = [];\n\t\t\tconst childNodes = xml.childNodes;\n\n\t\t\tfor ( let i = 0, l = childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = childNodes[ i ];\n\n\t\t\t\tif ( child.nodeName === name ) {\n\n\t\t\t\t\tarray.push( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\tfunction parseStrings( text ) {\n\n\t\t\tif ( text.length === 0 ) return [];\n\n\t\t\tconst parts = text.trim().split( /\\s+/ );\n\t\t\tconst array = new Array( parts.length );\n\n\t\t\tfor ( let i = 0, l = parts.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ] = parts[ i ];\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\tfunction parseFloats( text ) {\n\n\t\t\tif ( text.length === 0 ) return [];\n\n\t\t\tconst parts = text.trim().split( /\\s+/ );\n\t\t\tconst array = new Array( parts.length );\n\n\t\t\tfor ( let i = 0, l = parts.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ] = parseFloat( parts[ i ] );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\tfunction parseInts( text ) {\n\n\t\t\tif ( text.length === 0 ) return [];\n\n\t\t\tconst parts = text.trim().split( /\\s+/ );\n\t\t\tconst array = new Array( parts.length );\n\n\t\t\tfor ( let i = 0, l = parts.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ] = parseInt( parts[ i ] );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\tfunction parseId( text ) {\n\n\t\t\treturn text.substring( 1 );\n\n\t\t}\n\n\t\tfunction generateId() {\n\n\t\t\treturn 'three_default_' + ( count ++ );\n\n\t\t}\n\n\t\tfunction isEmpty( object ) {\n\n\t\t\treturn Object.keys( object ).length === 0;\n\n\t\t}\n\n\t\t// asset\n\n\t\tfunction parseAsset( xml ) {\n\n\t\t\treturn {\n\t\t\t\tunit: parseAssetUnit( getElementsByTagName( xml, 'unit' )[ 0 ] ),\n\t\t\t\tupAxis: parseAssetUpAxis( getElementsByTagName( xml, 'up_axis' )[ 0 ] )\n\t\t\t};\n\n\t\t}\n\n\t\tfunction parseAssetUnit( xml ) {\n\n\t\t\tif ( ( xml !== undefined ) && ( xml.hasAttribute( 'meter' ) === true ) ) {\n\n\t\t\t\treturn parseFloat( xml.getAttribute( 'meter' ) );\n\n\t\t\t} else {\n\n\t\t\t\treturn 1; // default 1 meter\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseAssetUpAxis( xml ) {\n\n\t\t\treturn xml !== undefined ? xml.textContent : 'Y_UP';\n\n\t\t}\n\n\t\t// library\n\n\t\tfunction parseLibrary( xml, libraryName, nodeName, parser ) {\n\n\t\t\tconst library = getElementsByTagName( xml, libraryName )[ 0 ];\n\n\t\t\tif ( library !== undefined ) {\n\n\t\t\t\tconst elements = getElementsByTagName( library, nodeName );\n\n\t\t\t\tfor ( let i = 0; i < elements.length; i ++ ) {\n\n\t\t\t\t\tparser( elements[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction buildLibrary( data, builder ) {\n\n\t\t\tfor ( const name in data ) {\n\n\t\t\t\tconst object = data[ name ];\n\t\t\t\tobject.build = builder( data[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// get\n\n\t\tfunction getBuild( data, builder ) {\n\n\t\t\tif ( data.build !== undefined ) return data.build;\n\n\t\t\tdata.build = builder( data );\n\n\t\t\treturn data.build;\n\n\t\t}\n\n\t\t// animation\n\n\t\tfunction parseAnimation( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tsources: {},\n\t\t\t\tsamplers: {},\n\t\t\t\tchannels: {}\n\t\t\t};\n\n\t\t\tlet hasChildren = false;\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tlet id;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'source':\n\t\t\t\t\t\tid = child.getAttribute( 'id' );\n\t\t\t\t\t\tdata.sources[ id ] = parseSource( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'sampler':\n\t\t\t\t\t\tid = child.getAttribute( 'id' );\n\t\t\t\t\t\tdata.samplers[ id ] = parseAnimationSampler( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'channel':\n\t\t\t\t\t\tid = child.getAttribute( 'target' );\n\t\t\t\t\t\tdata.channels[ id ] = parseAnimationChannel( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'animation':\n\t\t\t\t\t\t// hierarchy of related animations\n\t\t\t\t\t\tparseAnimation( child );\n\t\t\t\t\t\thasChildren = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.log( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasChildren === false ) {\n\n\t\t\t\t// since 'id' attributes can be optional, it's necessary to generate a UUID for unqiue assignment\n\n\t\t\t\tlibrary.animations[ xml.getAttribute( 'id' ) || MathUtils.generateUUID() ] = data;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseAnimationSampler( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tinputs: {},\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'input':\n\t\t\t\t\t\tconst id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\tconst semantic = child.getAttribute( 'semantic' );\n\t\t\t\t\t\tdata.inputs[ semantic ] = id;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseAnimationChannel( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tconst target = xml.getAttribute( 'target' );\n\n\t\t\t// parsing SID Addressing Syntax\n\n\t\t\tlet parts = target.split( '/' );\n\n\t\t\tconst id = parts.shift();\n\t\t\tlet sid = parts.shift();\n\n\t\t\t// check selection syntax\n\n\t\t\tconst arraySyntax = ( sid.indexOf( '(' ) !== - 1 );\n\t\t\tconst memberSyntax = ( sid.indexOf( '.' ) !== - 1 );\n\n\t\t\tif ( memberSyntax ) {\n\n\t\t\t\t//  member selection access\n\n\t\t\t\tparts = sid.split( '.' );\n\t\t\t\tsid = parts.shift();\n\t\t\t\tdata.member = parts.shift();\n\n\t\t\t} else if ( arraySyntax ) {\n\n\t\t\t\t// array-access syntax. can be used to express fields in one-dimensional vectors or two-dimensional matrices.\n\n\t\t\t\tconst indices = sid.split( '(' );\n\t\t\t\tsid = indices.shift();\n\n\t\t\t\tfor ( let i = 0; i < indices.length; i ++ ) {\n\n\t\t\t\t\tindices[ i ] = parseInt( indices[ i ].replace( /\\)/, '' ) );\n\n\t\t\t\t}\n\n\t\t\t\tdata.indices = indices;\n\n\t\t\t}\n\n\t\t\tdata.id = id;\n\t\t\tdata.sid = sid;\n\n\t\t\tdata.arraySyntax = arraySyntax;\n\t\t\tdata.memberSyntax = memberSyntax;\n\n\t\t\tdata.sampler = parseId( xml.getAttribute( 'source' ) );\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildAnimation( data ) {\n\n\t\t\tconst tracks = [];\n\n\t\t\tconst channels = data.channels;\n\t\t\tconst samplers = data.samplers;\n\t\t\tconst sources = data.sources;\n\n\t\t\tfor ( const target in channels ) {\n\n\t\t\t\tif ( channels.hasOwnProperty( target ) ) {\n\n\t\t\t\t\tconst channel = channels[ target ];\n\t\t\t\t\tconst sampler = samplers[ channel.sampler ];\n\n\t\t\t\t\tconst inputId = sampler.inputs.INPUT;\n\t\t\t\t\tconst outputId = sampler.inputs.OUTPUT;\n\n\t\t\t\t\tconst inputSource = sources[ inputId ];\n\t\t\t\t\tconst outputSource = sources[ outputId ];\n\n\t\t\t\t\tconst animation = buildAnimationChannel( channel, inputSource, outputSource );\n\n\t\t\t\t\tcreateKeyframeTracks( animation, tracks );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn tracks;\n\n\t\t}\n\n\t\tfunction getAnimation( id ) {\n\n\t\t\treturn getBuild( library.animations[ id ], buildAnimation );\n\n\t\t}\n\n\t\tfunction buildAnimationChannel( channel, inputSource, outputSource ) {\n\n\t\t\tconst node = library.nodes[ channel.id ];\n\t\t\tconst object3D = getNode( node.id );\n\n\t\t\tconst transform = node.transforms[ channel.sid ];\n\t\t\tconst defaultMatrix = node.matrix.clone().transpose();\n\n\t\t\tlet time, stride;\n\t\t\tlet i, il, j, jl;\n\n\t\t\tconst data = {};\n\n\t\t\t// the collada spec allows the animation of data in various ways.\n\t\t\t// depending on the transform type (matrix, translate, rotate, scale), we execute different logic\n\n\t\t\tswitch ( transform ) {\n\n\t\t\t\tcase 'matrix':\n\n\t\t\t\t\tfor ( i = 0, il = inputSource.array.length; i < il; i ++ ) {\n\n\t\t\t\t\t\ttime = inputSource.array[ i ];\n\t\t\t\t\t\tstride = i * outputSource.stride;\n\n\t\t\t\t\t\tif ( data[ time ] === undefined ) data[ time ] = {};\n\n\t\t\t\t\t\tif ( channel.arraySyntax === true ) {\n\n\t\t\t\t\t\t\tconst value = outputSource.array[ stride ];\n\t\t\t\t\t\t\tconst index = channel.indices[ 0 ] + 4 * channel.indices[ 1 ];\n\n\t\t\t\t\t\t\tdata[ time ][ index ] = value;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( j = 0, jl = outputSource.stride; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t\tdata[ time ][ j ] = outputSource.array[ stride + j ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'translate':\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'rotate':\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'scale':\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tconst keyframes = prepareAnimationData( data, defaultMatrix );\n\n\t\t\tconst animation = {\n\t\t\t\tname: object3D.uuid,\n\t\t\t\tkeyframes: keyframes\n\t\t\t};\n\n\t\t\treturn animation;\n\n\t\t}\n\n\t\tfunction prepareAnimationData( data, defaultMatrix ) {\n\n\t\t\tconst keyframes = [];\n\n\t\t\t// transfer data into a sortable array\n\n\t\t\tfor ( const time in data ) {\n\n\t\t\t\tkeyframes.push( { time: parseFloat( time ), value: data[ time ] } );\n\n\t\t\t}\n\n\t\t\t// ensure keyframes are sorted by time\n\n\t\t\tkeyframes.sort( ascending );\n\n\t\t\t// now we clean up all animation data, so we can use them for keyframe tracks\n\n\t\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\t\ttransformAnimationData( keyframes, i, defaultMatrix.elements[ i ] );\n\n\t\t\t}\n\n\t\t\treturn keyframes;\n\n\t\t\t// array sort function\n\n\t\t\tfunction ascending( a, b ) {\n\n\t\t\t\treturn a.time - b.time;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst position = new Vector3();\n\t\tconst scale = new Vector3();\n\t\tconst quaternion = new Quaternion();\n\n\t\tfunction createKeyframeTracks( animation, tracks ) {\n\n\t\t\tconst keyframes = animation.keyframes;\n\t\t\tconst name = animation.name;\n\n\t\t\tconst times = [];\n\t\t\tconst positionData = [];\n\t\t\tconst quaternionData = [];\n\t\t\tconst scaleData = [];\n\n\t\t\tfor ( let i = 0, l = keyframes.length; i < l; i ++ ) {\n\n\t\t\t\tconst keyframe = keyframes[ i ];\n\n\t\t\t\tconst time = keyframe.time;\n\t\t\t\tconst value = keyframe.value;\n\n\t\t\t\tmatrix.fromArray( value ).transpose();\n\t\t\t\tmatrix.decompose( position, quaternion, scale );\n\n\t\t\t\ttimes.push( time );\n\t\t\t\tpositionData.push( position.x, position.y, position.z );\n\t\t\t\tquaternionData.push( quaternion.x, quaternion.y, quaternion.z, quaternion.w );\n\t\t\t\tscaleData.push( scale.x, scale.y, scale.z );\n\n\t\t\t}\n\n\t\t\tif ( positionData.length > 0 ) tracks.push( new VectorKeyframeTrack( name + '.position', times, positionData ) );\n\t\t\tif ( quaternionData.length > 0 ) tracks.push( new QuaternionKeyframeTrack( name + '.quaternion', times, quaternionData ) );\n\t\t\tif ( scaleData.length > 0 ) tracks.push( new VectorKeyframeTrack( name + '.scale', times, scaleData ) );\n\n\t\t\treturn tracks;\n\n\t\t}\n\n\t\tfunction transformAnimationData( keyframes, property, defaultValue ) {\n\n\t\t\tlet keyframe;\n\n\t\t\tlet empty = true;\n\t\t\tlet i, l;\n\n\t\t\t// check, if values of a property are missing in our keyframes\n\n\t\t\tfor ( i = 0, l = keyframes.length; i < l; i ++ ) {\n\n\t\t\t\tkeyframe = keyframes[ i ];\n\n\t\t\t\tif ( keyframe.value[ property ] === undefined ) {\n\n\t\t\t\t\tkeyframe.value[ property ] = null; // mark as missing\n\n\t\t\t\t} else {\n\n\t\t\t\t\tempty = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( empty === true ) {\n\n\t\t\t\t// no values at all, so we set a default value\n\n\t\t\t\tfor ( i = 0, l = keyframes.length; i < l; i ++ ) {\n\n\t\t\t\t\tkeyframe = keyframes[ i ];\n\n\t\t\t\t\tkeyframe.value[ property ] = defaultValue;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// filling gaps\n\n\t\t\t\tcreateMissingKeyframes( keyframes, property );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction createMissingKeyframes( keyframes, property ) {\n\n\t\t\tlet prev, next;\n\n\t\t\tfor ( let i = 0, l = keyframes.length; i < l; i ++ ) {\n\n\t\t\t\tconst keyframe = keyframes[ i ];\n\n\t\t\t\tif ( keyframe.value[ property ] === null ) {\n\n\t\t\t\t\tprev = getPrev( keyframes, i, property );\n\t\t\t\t\tnext = getNext( keyframes, i, property );\n\n\t\t\t\t\tif ( prev === null ) {\n\n\t\t\t\t\t\tkeyframe.value[ property ] = next.value[ property ];\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( next === null ) {\n\n\t\t\t\t\t\tkeyframe.value[ property ] = prev.value[ property ];\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tinterpolate( keyframe, prev, next, property );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getPrev( keyframes, i, property ) {\n\n\t\t\twhile ( i >= 0 ) {\n\n\t\t\t\tconst keyframe = keyframes[ i ];\n\n\t\t\t\tif ( keyframe.value[ property ] !== null ) return keyframe;\n\n\t\t\t\ti --;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tfunction getNext( keyframes, i, property ) {\n\n\t\t\twhile ( i < keyframes.length ) {\n\n\t\t\t\tconst keyframe = keyframes[ i ];\n\n\t\t\t\tif ( keyframe.value[ property ] !== null ) return keyframe;\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tfunction interpolate( key, prev, next, property ) {\n\n\t\t\tif ( ( next.time - prev.time ) === 0 ) {\n\n\t\t\t\tkey.value[ property ] = prev.value[ property ];\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tkey.value[ property ] = ( ( key.time - prev.time ) * ( next.value[ property ] - prev.value[ property ] ) / ( next.time - prev.time ) ) + prev.value[ property ];\n\n\t\t}\n\n\t\t// animation clips\n\n\t\tfunction parseAnimationClip( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tname: xml.getAttribute( 'id' ) || 'default',\n\t\t\t\tstart: parseFloat( xml.getAttribute( 'start' ) || 0 ),\n\t\t\t\tend: parseFloat( xml.getAttribute( 'end' ) || 0 ),\n\t\t\t\tanimations: []\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'instance_animation':\n\t\t\t\t\t\tdata.animations.push( parseId( child.getAttribute( 'url' ) ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.clips[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction buildAnimationClip( data ) {\n\n\t\t\tconst tracks = [];\n\n\t\t\tconst name = data.name;\n\t\t\tconst duration = ( data.end - data.start ) || - 1;\n\t\t\tconst animations = data.animations;\n\n\t\t\tfor ( let i = 0, il = animations.length; i < il; i ++ ) {\n\n\t\t\t\tconst animationTracks = getAnimation( animations[ i ] );\n\n\t\t\t\tfor ( let j = 0, jl = animationTracks.length; j < jl; j ++ ) {\n\n\t\t\t\t\ttracks.push( animationTracks[ j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( name, duration, tracks );\n\n\t\t}\n\n\t\tfunction getAnimationClip( id ) {\n\n\t\t\treturn getBuild( library.clips[ id ], buildAnimationClip );\n\n\t\t}\n\n\t\t// controller\n\n\t\tfunction parseController( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'skin':\n\t\t\t\t\t\t// there is exactly one skin per controller\n\t\t\t\t\t\tdata.id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\tdata.skin = parseSkin( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'morph':\n\t\t\t\t\t\tdata.id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Morph target animation not supported yet.' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.controllers[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction parseSkin( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tsources: {}\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'bind_shape_matrix':\n\t\t\t\t\t\tdata.bindShapeMatrix = parseFloats( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'source':\n\t\t\t\t\t\tconst id = child.getAttribute( 'id' );\n\t\t\t\t\t\tdata.sources[ id ] = parseSource( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'joints':\n\t\t\t\t\t\tdata.joints = parseJoints( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'vertex_weights':\n\t\t\t\t\t\tdata.vertexWeights = parseVertexWeights( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseJoints( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tinputs: {}\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'input':\n\t\t\t\t\t\tconst semantic = child.getAttribute( 'semantic' );\n\t\t\t\t\t\tconst id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\tdata.inputs[ semantic ] = id;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseVertexWeights( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tinputs: {}\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'input':\n\t\t\t\t\t\tconst semantic = child.getAttribute( 'semantic' );\n\t\t\t\t\t\tconst id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\tconst offset = parseInt( child.getAttribute( 'offset' ) );\n\t\t\t\t\t\tdata.inputs[ semantic ] = { id: id, offset: offset };\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'vcount':\n\t\t\t\t\t\tdata.vcount = parseInts( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v':\n\t\t\t\t\t\tdata.v = parseInts( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildController( data ) {\n\n\t\t\tconst build = {\n\t\t\t\tid: data.id\n\t\t\t};\n\n\t\t\tconst geometry = library.geometries[ build.id ];\n\n\t\t\tif ( data.skin !== undefined ) {\n\n\t\t\t\tbuild.skin = buildSkin( data.skin );\n\n\t\t\t\t// we enhance the 'sources' property of the corresponding geometry with our skin data\n\n\t\t\t\tgeometry.sources.skinIndices = build.skin.indices;\n\t\t\t\tgeometry.sources.skinWeights = build.skin.weights;\n\n\t\t\t}\n\n\t\t\treturn build;\n\n\t\t}\n\n\t\tfunction buildSkin( data ) {\n\n\t\t\tconst BONE_LIMIT = 4;\n\n\t\t\tconst build = {\n\t\t\t\tjoints: [], // this must be an array to preserve the joint order\n\t\t\t\tindices: {\n\t\t\t\t\tarray: [],\n\t\t\t\t\tstride: BONE_LIMIT\n\t\t\t\t},\n\t\t\t\tweights: {\n\t\t\t\t\tarray: [],\n\t\t\t\t\tstride: BONE_LIMIT\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst sources = data.sources;\n\t\t\tconst vertexWeights = data.vertexWeights;\n\n\t\t\tconst vcount = vertexWeights.vcount;\n\t\t\tconst v = vertexWeights.v;\n\t\t\tconst jointOffset = vertexWeights.inputs.JOINT.offset;\n\t\t\tconst weightOffset = vertexWeights.inputs.WEIGHT.offset;\n\n\t\t\tconst jointSource = data.sources[ data.joints.inputs.JOINT ];\n\t\t\tconst inverseSource = data.sources[ data.joints.inputs.INV_BIND_MATRIX ];\n\n\t\t\tconst weights = sources[ vertexWeights.inputs.WEIGHT.id ].array;\n\t\t\tlet stride = 0;\n\n\t\t\tlet i, j, l;\n\n\t\t\t// process skin data for each vertex\n\n\t\t\tfor ( i = 0, l = vcount.length; i < l; i ++ ) {\n\n\t\t\t\tconst jointCount = vcount[ i ]; // this is the amount of joints that affect a single vertex\n\t\t\t\tconst vertexSkinData = [];\n\n\t\t\t\tfor ( j = 0; j < jointCount; j ++ ) {\n\n\t\t\t\t\tconst skinIndex = v[ stride + jointOffset ];\n\t\t\t\t\tconst weightId = v[ stride + weightOffset ];\n\t\t\t\t\tconst skinWeight = weights[ weightId ];\n\n\t\t\t\t\tvertexSkinData.push( { index: skinIndex, weight: skinWeight } );\n\n\t\t\t\t\tstride += 2;\n\n\t\t\t\t}\n\n\t\t\t\t// we sort the joints in descending order based on the weights.\n\t\t\t\t// this ensures, we only procced the most important joints of the vertex\n\n\t\t\t\tvertexSkinData.sort( descending );\n\n\t\t\t\t// now we provide for each vertex a set of four index and weight values.\n\t\t\t\t// the order of the skin data matches the order of vertices\n\n\t\t\t\tfor ( j = 0; j < BONE_LIMIT; j ++ ) {\n\n\t\t\t\t\tconst d = vertexSkinData[ j ];\n\n\t\t\t\t\tif ( d !== undefined ) {\n\n\t\t\t\t\t\tbuild.indices.array.push( d.index );\n\t\t\t\t\t\tbuild.weights.array.push( d.weight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbuild.indices.array.push( 0 );\n\t\t\t\t\t\tbuild.weights.array.push( 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// setup bind matrix\n\n\t\t\tif ( data.bindShapeMatrix ) {\n\n\t\t\t\tbuild.bindMatrix = new Matrix4().fromArray( data.bindShapeMatrix ).transpose();\n\n\t\t\t} else {\n\n\t\t\t\tbuild.bindMatrix = new Matrix4().identity();\n\n\t\t\t}\n\n\t\t\t// process bones and inverse bind matrix data\n\n\t\t\tfor ( i = 0, l = jointSource.array.length; i < l; i ++ ) {\n\n\t\t\t\tconst name = jointSource.array[ i ];\n\t\t\t\tconst boneInverse = new Matrix4().fromArray( inverseSource.array, i * inverseSource.stride ).transpose();\n\n\t\t\t\tbuild.joints.push( { name: name, boneInverse: boneInverse } );\n\n\t\t\t}\n\n\t\t\treturn build;\n\n\t\t\t// array sort function\n\n\t\t\tfunction descending( a, b ) {\n\n\t\t\t\treturn b.weight - a.weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getController( id ) {\n\n\t\t\treturn getBuild( library.controllers[ id ], buildController );\n\n\t\t}\n\n\t\t// image\n\n\t\tfunction parseImage( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tinit_from: getElementsByTagName( xml, 'init_from' )[ 0 ].textContent\n\t\t\t};\n\n\t\t\tlibrary.images[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction buildImage( data ) {\n\n\t\t\tif ( data.build !== undefined ) return data.build;\n\n\t\t\treturn data.init_from;\n\n\t\t}\n\n\t\tfunction getImage( id ) {\n\n\t\t\tconst data = library.images[ id ];\n\n\t\t\tif ( data !== undefined ) {\n\n\t\t\t\treturn getBuild( data, buildImage );\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.ColladaLoader: Couldn\\'t find image with ID:', id );\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// effect\n\n\t\tfunction parseEffect( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'profile_COMMON':\n\t\t\t\t\t\tdata.profile = parseEffectProfileCOMMON( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.effects[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction parseEffectProfileCOMMON( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tsurfaces: {},\n\t\t\t\tsamplers: {}\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'newparam':\n\t\t\t\t\t\tparseEffectNewparam( child, data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'technique':\n\t\t\t\t\t\tdata.technique = parseEffectTechnique( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'extra':\n\t\t\t\t\t\tdata.extra = parseEffectExtra( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectNewparam( xml, data ) {\n\n\t\t\tconst sid = xml.getAttribute( 'sid' );\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'surface':\n\t\t\t\t\t\tdata.surfaces[ sid ] = parseEffectSurface( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'sampler2D':\n\t\t\t\t\t\tdata.samplers[ sid ] = parseEffectSampler( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseEffectSurface( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'init_from':\n\t\t\t\t\t\tdata.init_from = child.textContent;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectSampler( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'source':\n\t\t\t\t\t\tdata.source = child.textContent;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectTechnique( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'constant':\n\t\t\t\t\tcase 'lambert':\n\t\t\t\t\tcase 'blinn':\n\t\t\t\t\tcase 'phong':\n\t\t\t\t\t\tdata.type = child.nodeName;\n\t\t\t\t\t\tdata.parameters = parseEffectParameters( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'extra':\n\t\t\t\t\t\tdata.extra = parseEffectExtra( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectParameters( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'emission':\n\t\t\t\t\tcase 'diffuse':\n\t\t\t\t\tcase 'specular':\n\t\t\t\t\tcase 'bump':\n\t\t\t\t\tcase 'ambient':\n\t\t\t\t\tcase 'shininess':\n\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\tdata[ child.nodeName ] = parseEffectParameter( child );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transparent':\n\t\t\t\t\t\tdata[ child.nodeName ] = {\n\t\t\t\t\t\t\topaque: child.hasAttribute( 'opaque' ) ? child.getAttribute( 'opaque' ) : 'A_ONE',\n\t\t\t\t\t\t\tdata: parseEffectParameter( child )\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectParameter( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'color':\n\t\t\t\t\t\tdata[ child.nodeName ] = parseFloats( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'float':\n\t\t\t\t\t\tdata[ child.nodeName ] = parseFloat( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'texture':\n\t\t\t\t\t\tdata[ child.nodeName ] = { id: child.getAttribute( 'texture' ), extra: parseEffectParameterTexture( child ) };\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectParameterTexture( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\ttechnique: {}\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'extra':\n\t\t\t\t\t\tparseEffectParameterTextureExtra( child, data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectParameterTextureExtra( xml, data ) {\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'technique':\n\t\t\t\t\t\tparseEffectParameterTextureExtraTechnique( child, data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseEffectParameterTextureExtraTechnique( xml, data ) {\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'repeatU':\n\t\t\t\t\tcase 'repeatV':\n\t\t\t\t\tcase 'offsetU':\n\t\t\t\t\tcase 'offsetV':\n\t\t\t\t\t\tdata.technique[ child.nodeName ] = parseFloat( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'wrapU':\n\t\t\t\t\tcase 'wrapV':\n\n\t\t\t\t\t\t// some files have values for wrapU/wrapV which become NaN via parseInt\n\n\t\t\t\t\t\tif ( child.textContent.toUpperCase() === 'TRUE' ) {\n\n\t\t\t\t\t\t\tdata.technique[ child.nodeName ] = 1;\n\n\t\t\t\t\t\t} else if ( child.textContent.toUpperCase() === 'FALSE' ) {\n\n\t\t\t\t\t\t\tdata.technique[ child.nodeName ] = 0;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tdata.technique[ child.nodeName ] = parseInt( child.textContent );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bump':\n\t\t\t\t\t\tdata[ child.nodeName ] = parseEffectExtraTechniqueBump( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseEffectExtra( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'technique':\n\t\t\t\t\t\tdata.technique = parseEffectExtraTechnique( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectExtraTechnique( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'double_sided':\n\t\t\t\t\t\tdata[ child.nodeName ] = parseInt( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bump':\n\t\t\t\t\t\tdata[ child.nodeName ] = parseEffectExtraTechniqueBump( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectExtraTechniqueBump( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'texture':\n\t\t\t\t\t\tdata[ child.nodeName ] = { id: child.getAttribute( 'texture' ), texcoord: child.getAttribute( 'texcoord' ), extra: parseEffectParameterTexture( child ) };\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildEffect( data ) {\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction getEffect( id ) {\n\n\t\t\treturn getBuild( library.effects[ id ], buildEffect );\n\n\t\t}\n\n\t\t// material\n\n\t\tfunction parseMaterial( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tname: xml.getAttribute( 'name' )\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'instance_effect':\n\t\t\t\t\t\tdata.url = parseId( child.getAttribute( 'url' ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.materials[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction getTextureLoader( image ) {\n\n\t\t\tlet loader;\n\n\t\t\tlet extension = image.slice( ( image.lastIndexOf( '.' ) - 1 >>> 0 ) + 2 ); // http://www.jstips.co/en/javascript/get-file-extension/\n\t\t\textension = extension.toLowerCase();\n\n\t\t\tswitch ( extension ) {\n\n\t\t\t\tcase 'tga':\n\t\t\t\t\tloader = tgaLoader;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tloader = textureLoader;\n\n\t\t\t}\n\n\t\t\treturn loader;\n\n\t\t}\n\n\t\tfunction buildMaterial( data ) {\n\n\t\t\tconst effect = getEffect( data.url );\n\t\t\tconst technique = effect.profile.technique;\n\n\t\t\tlet material;\n\n\t\t\tswitch ( technique.type ) {\n\n\t\t\t\tcase 'phong':\n\t\t\t\tcase 'blinn':\n\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'lambert':\n\t\t\t\t\tmaterial = new MeshLambertMaterial();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tmaterial = new MeshBasicMaterial();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tmaterial.name = data.name || '';\n\n\t\t\tfunction getTexture( textureObject, colorSpace = null ) {\n\n\t\t\t\tconst sampler = effect.profile.samplers[ textureObject.id ];\n\t\t\t\tlet image = null;\n\n\t\t\t\t// get image\n\n\t\t\t\tif ( sampler !== undefined ) {\n\n\t\t\t\t\tconst surface = effect.profile.surfaces[ sampler.source ];\n\t\t\t\t\timage = getImage( surface.init_from );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530).' );\n\t\t\t\t\timage = getImage( textureObject.id );\n\n\t\t\t\t}\n\n\t\t\t\t// create texture if image is avaiable\n\n\t\t\t\tif ( image !== null ) {\n\n\t\t\t\t\tconst loader = getTextureLoader( image );\n\n\t\t\t\t\tif ( loader !== undefined ) {\n\n\t\t\t\t\t\tconst texture = loader.load( image );\n\n\t\t\t\t\t\tconst extra = textureObject.extra;\n\n\t\t\t\t\t\tif ( extra !== undefined && extra.technique !== undefined && isEmpty( extra.technique ) === false ) {\n\n\t\t\t\t\t\t\tconst technique = extra.technique;\n\n\t\t\t\t\t\t\ttexture.wrapS = technique.wrapU ? RepeatWrapping : ClampToEdgeWrapping;\n\t\t\t\t\t\t\ttexture.wrapT = technique.wrapV ? RepeatWrapping : ClampToEdgeWrapping;\n\n\t\t\t\t\t\t\ttexture.offset.set( technique.offsetU || 0, technique.offsetV || 0 );\n\t\t\t\t\t\t\ttexture.repeat.set( technique.repeatU || 1, technique.repeatV || 1 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ttexture.wrapS = RepeatWrapping;\n\t\t\t\t\t\t\ttexture.wrapT = RepeatWrapping;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( colorSpace !== null ) {\n\n\t\t\t\t\t\t\ttexture.colorSpace = colorSpace;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Loader for texture %s not found.', image );\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Couldn\\'t create texture with ID:', textureObject.id );\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst parameters = technique.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tconst parameter = parameters[ key ];\n\n\t\t\t\tswitch ( key ) {\n\n\t\t\t\t\tcase 'diffuse':\n\t\t\t\t\t\tif ( parameter.color ) material.color.fromArray( parameter.color );\n\t\t\t\t\t\tif ( parameter.texture ) material.map = getTexture( parameter.texture, SRGBColorSpace );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'specular':\n\t\t\t\t\t\tif ( parameter.color && material.specular ) material.specular.fromArray( parameter.color );\n\t\t\t\t\t\tif ( parameter.texture ) material.specularMap = getTexture( parameter.texture );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'bump':\n\t\t\t\t\t\tif ( parameter.texture ) material.normalMap = getTexture( parameter.texture );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'ambient':\n\t\t\t\t\t\tif ( parameter.texture ) material.lightMap = getTexture( parameter.texture, SRGBColorSpace );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'shininess':\n\t\t\t\t\t\tif ( parameter.float && material.shininess ) material.shininess = parameter.float;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'emission':\n\t\t\t\t\t\tif ( parameter.color && material.emissive ) material.emissive.fromArray( parameter.color );\n\t\t\t\t\t\tif ( parameter.texture ) material.emissiveMap = getTexture( parameter.texture, SRGBColorSpace );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmaterial.color.convertSRGBToLinear();\n\t\t\tif ( material.specular ) material.specular.convertSRGBToLinear();\n\t\t\tif ( material.emissive ) material.emissive.convertSRGBToLinear();\n\n\t\t\t//\n\n\t\t\tlet transparent = parameters[ 'transparent' ];\n\t\t\tlet transparency = parameters[ 'transparency' ];\n\n\t\t\t// <transparency> does not exist but <transparent>\n\n\t\t\tif ( transparency === undefined && transparent ) {\n\n\t\t\t\ttransparency = {\n\t\t\t\t\tfloat: 1\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t// <transparent> does not exist but <transparency>\n\n\t\t\tif ( transparent === undefined && transparency ) {\n\n\t\t\t\ttransparent = {\n\t\t\t\t\topaque: 'A_ONE',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tcolor: [ 1, 1, 1, 1 ]\n\t\t\t\t\t} };\n\n\t\t\t}\n\n\t\t\tif ( transparent && transparency ) {\n\n\t\t\t\t// handle case if a texture exists but no color\n\n\t\t\t\tif ( transparent.data.texture ) {\n\n\t\t\t\t\t// we do not set an alpha map (see #13792)\n\n\t\t\t\t\tmaterial.transparent = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst color = transparent.data.color;\n\n\t\t\t\t\tswitch ( transparent.opaque ) {\n\n\t\t\t\t\t\tcase 'A_ONE':\n\t\t\t\t\t\t\tmaterial.opacity = color[ 3 ] * transparency.float;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'RGB_ZERO':\n\t\t\t\t\t\t\tmaterial.opacity = 1 - ( color[ 0 ] * transparency.float );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'A_ZERO':\n\t\t\t\t\t\t\tmaterial.opacity = 1 - ( color[ 3 ] * transparency.float );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'RGB_ONE':\n\t\t\t\t\t\t\tmaterial.opacity = color[ 0 ] * transparency.float;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Invalid opaque type \"%s\" of transparent tag.', transparent.opaque );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( material.opacity < 1 ) material.transparent = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\n\t\t\tif ( technique.extra !== undefined && technique.extra.technique !== undefined ) {\n\n\t\t\t\tconst techniques = technique.extra.technique;\n\n\t\t\t\tfor ( const k in techniques ) {\n\n\t\t\t\t\tconst v = techniques[ k ];\n\n\t\t\t\t\tswitch ( k ) {\n\n\t\t\t\t\t\tcase 'double_sided':\n\t\t\t\t\t\t\tmaterial.side = ( v === 1 ? DoubleSide : FrontSide );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'bump':\n\t\t\t\t\t\t\tmaterial.normalMap = getTexture( v.texture );\n\t\t\t\t\t\t\tmaterial.normalScale = new Vector2( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn material;\n\n\t\t}\n\n\t\tfunction getMaterial( id ) {\n\n\t\t\treturn getBuild( library.materials[ id ], buildMaterial );\n\n\t\t}\n\n\t\t// camera\n\n\t\tfunction parseCamera( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tname: xml.getAttribute( 'name' )\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'optics':\n\t\t\t\t\t\tdata.optics = parseCameraOptics( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.cameras[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction parseCameraOptics( xml ) {\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'technique_common':\n\t\t\t\t\t\treturn parseCameraTechnique( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {};\n\n\t\t}\n\n\t\tfunction parseCameraTechnique( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'perspective':\n\t\t\t\t\tcase 'orthographic':\n\n\t\t\t\t\t\tdata.technique = child.nodeName;\n\t\t\t\t\t\tdata.parameters = parseCameraParameters( child );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseCameraParameters( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'xfov':\n\t\t\t\t\tcase 'yfov':\n\t\t\t\t\tcase 'xmag':\n\t\t\t\t\tcase 'ymag':\n\t\t\t\t\tcase 'znear':\n\t\t\t\t\tcase 'zfar':\n\t\t\t\t\tcase 'aspect_ratio':\n\t\t\t\t\t\tdata[ child.nodeName ] = parseFloat( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildCamera( data ) {\n\n\t\t\tlet camera;\n\n\t\t\tswitch ( data.optics.technique ) {\n\n\t\t\t\tcase 'perspective':\n\t\t\t\t\tcamera = new PerspectiveCamera(\n\t\t\t\t\t\tdata.optics.parameters.yfov,\n\t\t\t\t\t\tdata.optics.parameters.aspect_ratio,\n\t\t\t\t\t\tdata.optics.parameters.znear,\n\t\t\t\t\t\tdata.optics.parameters.zfar\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'orthographic':\n\t\t\t\t\tlet ymag = data.optics.parameters.ymag;\n\t\t\t\t\tlet xmag = data.optics.parameters.xmag;\n\t\t\t\t\tconst aspectRatio = data.optics.parameters.aspect_ratio;\n\n\t\t\t\t\txmag = ( xmag === undefined ) ? ( ymag * aspectRatio ) : xmag;\n\t\t\t\t\tymag = ( ymag === undefined ) ? ( xmag / aspectRatio ) : ymag;\n\n\t\t\t\t\txmag *= 0.5;\n\t\t\t\t\tymag *= 0.5;\n\n\t\t\t\t\tcamera = new OrthographicCamera(\n\t\t\t\t\t\t- xmag, xmag, ymag, - ymag, // left, right, top, bottom\n\t\t\t\t\t\tdata.optics.parameters.znear,\n\t\t\t\t\t\tdata.optics.parameters.zfar\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tcamera.name = data.name || '';\n\n\t\t\treturn camera;\n\n\t\t}\n\n\t\tfunction getCamera( id ) {\n\n\t\t\tconst data = library.cameras[ id ];\n\n\t\t\tif ( data !== undefined ) {\n\n\t\t\t\treturn getBuild( data, buildCamera );\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.ColladaLoader: Couldn\\'t find camera with ID:', id );\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// light\n\n\t\tfunction parseLight( xml ) {\n\n\t\t\tlet data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'technique_common':\n\t\t\t\t\t\tdata = parseLightTechnique( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.lights[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction parseLightTechnique( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'directional':\n\t\t\t\t\tcase 'point':\n\t\t\t\t\tcase 'spot':\n\t\t\t\t\tcase 'ambient':\n\n\t\t\t\t\t\tdata.technique = child.nodeName;\n\t\t\t\t\t\tdata.parameters = parseLightParameters( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseLightParameters( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'color':\n\t\t\t\t\t\tconst array = parseFloats( child.textContent );\n\t\t\t\t\t\tdata.color = new Color().fromArray( array ).convertSRGBToLinear();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'falloff_angle':\n\t\t\t\t\t\tdata.falloffAngle = parseFloat( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'quadratic_attenuation':\n\t\t\t\t\t\tconst f = parseFloat( child.textContent );\n\t\t\t\t\t\tdata.distance = f ? Math.sqrt( 1 / f ) : 0;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildLight( data ) {\n\n\t\t\tlet light;\n\n\t\t\tswitch ( data.technique ) {\n\n\t\t\t\tcase 'directional':\n\t\t\t\t\tlight = new DirectionalLight();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'point':\n\t\t\t\t\tlight = new PointLight();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'spot':\n\t\t\t\t\tlight = new SpotLight();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ambient':\n\t\t\t\t\tlight = new AmbientLight();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( data.parameters.color ) light.color.copy( data.parameters.color );\n\t\t\tif ( data.parameters.distance ) light.distance = data.parameters.distance;\n\n\t\t\treturn light;\n\n\t\t}\n\n\t\tfunction getLight( id ) {\n\n\t\t\tconst data = library.lights[ id ];\n\n\t\t\tif ( data !== undefined ) {\n\n\t\t\t\treturn getBuild( data, buildLight );\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.ColladaLoader: Couldn\\'t find light with ID:', id );\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// geometry\n\n\t\tfunction parseGeometry( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tname: xml.getAttribute( 'name' ),\n\t\t\t\tsources: {},\n\t\t\t\tvertices: {},\n\t\t\t\tprimitives: []\n\t\t\t};\n\n\t\t\tconst mesh = getElementsByTagName( xml, 'mesh' )[ 0 ];\n\n\t\t\t// the following tags inside geometry are not supported yet (see https://github.com/mrdoob/three.js/pull/12606): convex_mesh, spline, brep\n\t\t\tif ( mesh === undefined ) return;\n\n\t\t\tfor ( let i = 0; i < mesh.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = mesh.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tconst id = child.getAttribute( 'id' );\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'source':\n\t\t\t\t\t\tdata.sources[ id ] = parseSource( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'vertices':\n\t\t\t\t\t\t// data.sources[ id ] = data.sources[ parseId( getElementsByTagName( child, 'input' )[ 0 ].getAttribute( 'source' ) ) ];\n\t\t\t\t\t\tdata.vertices = parseGeometryVertices( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'polygons':\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Unsupported primitive type: ', child.nodeName );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'lines':\n\t\t\t\t\tcase 'linestrips':\n\t\t\t\t\tcase 'polylist':\n\t\t\t\t\tcase 'triangles':\n\t\t\t\t\t\tdata.primitives.push( parseGeometryPrimitive( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.log( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.geometries[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction parseSource( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tarray: [],\n\t\t\t\tstride: 3\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'float_array':\n\t\t\t\t\t\tdata.array = parseFloats( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Name_array':\n\t\t\t\t\t\tdata.array = parseStrings( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'technique_common':\n\t\t\t\t\t\tconst accessor = getElementsByTagName( child, 'accessor' )[ 0 ];\n\n\t\t\t\t\t\tif ( accessor !== undefined ) {\n\n\t\t\t\t\t\t\tdata.stride = parseInt( accessor.getAttribute( 'stride' ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseGeometryVertices( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tdata[ child.getAttribute( 'semantic' ) ] = parseId( child.getAttribute( 'source' ) );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseGeometryPrimitive( xml ) {\n\n\t\t\tconst primitive = {\n\t\t\t\ttype: xml.nodeName,\n\t\t\t\tmaterial: xml.getAttribute( 'material' ),\n\t\t\t\tcount: parseInt( xml.getAttribute( 'count' ) ),\n\t\t\t\tinputs: {},\n\t\t\t\tstride: 0,\n\t\t\t\thasUV: false\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'input':\n\t\t\t\t\t\tconst id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\tconst semantic = child.getAttribute( 'semantic' );\n\t\t\t\t\t\tconst offset = parseInt( child.getAttribute( 'offset' ) );\n\t\t\t\t\t\tconst set = parseInt( child.getAttribute( 'set' ) );\n\t\t\t\t\t\tconst inputname = ( set > 0 ? semantic + set : semantic );\n\t\t\t\t\t\tprimitive.inputs[ inputname ] = { id: id, offset: offset };\n\t\t\t\t\t\tprimitive.stride = Math.max( primitive.stride, offset + 1 );\n\t\t\t\t\t\tif ( semantic === 'TEXCOORD' ) primitive.hasUV = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'vcount':\n\t\t\t\t\t\tprimitive.vcount = parseInts( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'p':\n\t\t\t\t\t\tprimitive.p = parseInts( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn primitive;\n\n\t\t}\n\n\t\tfunction groupPrimitives( primitives ) {\n\n\t\t\tconst build = {};\n\n\t\t\tfor ( let i = 0; i < primitives.length; i ++ ) {\n\n\t\t\t\tconst primitive = primitives[ i ];\n\n\t\t\t\tif ( build[ primitive.type ] === undefined ) build[ primitive.type ] = [];\n\n\t\t\t\tbuild[ primitive.type ].push( primitive );\n\n\t\t\t}\n\n\t\t\treturn build;\n\n\t\t}\n\n\t\tfunction checkUVCoordinates( primitives ) {\n\n\t\t\tlet count = 0;\n\n\t\t\tfor ( let i = 0, l = primitives.length; i < l; i ++ ) {\n\n\t\t\t\tconst primitive = primitives[ i ];\n\n\t\t\t\tif ( primitive.hasUV === true ) {\n\n\t\t\t\t\tcount ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( count > 0 && count < primitives.length ) {\n\n\t\t\t\tprimitives.uvsNeedsFix = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction buildGeometry( data ) {\n\n\t\t\tconst build = {};\n\n\t\t\tconst sources = data.sources;\n\t\t\tconst vertices = data.vertices;\n\t\t\tconst primitives = data.primitives;\n\n\t\t\tif ( primitives.length === 0 ) return {};\n\n\t\t\t// our goal is to create one buffer geometry for a single type of primitives\n\t\t\t// first, we group all primitives by their type\n\n\t\t\tconst groupedPrimitives = groupPrimitives( primitives );\n\n\t\t\tfor ( const type in groupedPrimitives ) {\n\n\t\t\t\tconst primitiveType = groupedPrimitives[ type ];\n\n\t\t\t\t// second, ensure consistent uv coordinates for each type of primitives (polylist,triangles or lines)\n\n\t\t\t\tcheckUVCoordinates( primitiveType );\n\n\t\t\t\t// third, create a buffer geometry for each type of primitives\n\n\t\t\t\tbuild[ type ] = buildGeometryType( primitiveType, sources, vertices );\n\n\t\t\t}\n\n\t\t\treturn build;\n\n\t\t}\n\n\t\tfunction buildGeometryType( primitives, sources, vertices ) {\n\n\t\t\tconst build = {};\n\n\t\t\tconst position = { array: [], stride: 0 };\n\t\t\tconst normal = { array: [], stride: 0 };\n\t\t\tconst uv = { array: [], stride: 0 };\n\t\t\tconst uv1 = { array: [], stride: 0 };\n\t\t\tconst color = { array: [], stride: 0 };\n\n\t\t\tconst skinIndex = { array: [], stride: 4 };\n\t\t\tconst skinWeight = { array: [], stride: 4 };\n\n\t\t\tconst geometry = new BufferGeometry();\n\n\t\t\tconst materialKeys = [];\n\n\t\t\tlet start = 0;\n\n\t\t\tfor ( let p = 0; p < primitives.length; p ++ ) {\n\n\t\t\t\tconst primitive = primitives[ p ];\n\t\t\t\tconst inputs = primitive.inputs;\n\n\t\t\t\t// groups\n\n\t\t\t\tlet count = 0;\n\n\t\t\t\tswitch ( primitive.type ) {\n\n\t\t\t\t\tcase 'lines':\n\t\t\t\t\tcase 'linestrips':\n\t\t\t\t\t\tcount = primitive.count * 2;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'triangles':\n\t\t\t\t\t\tcount = primitive.count * 3;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'polylist':\n\n\t\t\t\t\t\tfor ( let g = 0; g < primitive.count; g ++ ) {\n\n\t\t\t\t\t\t\tconst vc = primitive.vcount[ g ];\n\n\t\t\t\t\t\t\tswitch ( vc ) {\n\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tcount += 3; // single triangle\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\tcount += 6; // quad, subdivided into two triangles\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tcount += ( vc - 2 ) * 3; // polylist with more than four vertices\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Unknow primitive type:', primitive.type );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addGroup( start, count, p );\n\t\t\t\tstart += count;\n\n\t\t\t\t// material\n\n\t\t\t\tif ( primitive.material ) {\n\n\t\t\t\t\tmaterialKeys.push( primitive.material );\n\n\t\t\t\t}\n\n\t\t\t\t// geometry data\n\n\t\t\t\tfor ( const name in inputs ) {\n\n\t\t\t\t\tconst input = inputs[ name ];\n\n\t\t\t\t\tswitch ( name )\t{\n\n\t\t\t\t\t\tcase 'VERTEX':\n\t\t\t\t\t\t\tfor ( const key in vertices ) {\n\n\t\t\t\t\t\t\t\tconst id = vertices[ key ];\n\n\t\t\t\t\t\t\t\tswitch ( key ) {\n\n\t\t\t\t\t\t\t\t\tcase 'POSITION':\n\t\t\t\t\t\t\t\t\t\tconst prevLength = position.array.length;\n\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, position.array );\n\t\t\t\t\t\t\t\t\t\tposition.stride = sources[ id ].stride;\n\n\t\t\t\t\t\t\t\t\t\tif ( sources.skinWeights && sources.skinIndices ) {\n\n\t\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources.skinIndices, input.offset, skinIndex.array );\n\t\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources.skinWeights, input.offset, skinWeight.array );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// see #3803\n\n\t\t\t\t\t\t\t\t\t\tif ( primitive.hasUV === false && primitives.uvsNeedsFix === true ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst count = ( position.array.length - prevLength ) / position.stride;\n\n\t\t\t\t\t\t\t\t\t\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// fill missing uv coordinates\n\n\t\t\t\t\t\t\t\t\t\t\t\tuv.array.push( 0, 0 );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 'NORMAL':\n\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, normal.array );\n\t\t\t\t\t\t\t\t\t\tnormal.stride = sources[ id ].stride;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 'COLOR':\n\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, color.array );\n\t\t\t\t\t\t\t\t\t\tcolor.stride = sources[ id ].stride;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 'TEXCOORD':\n\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, uv.array );\n\t\t\t\t\t\t\t\t\t\tuv.stride = sources[ id ].stride;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 'TEXCOORD1':\n\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, uv1.array );\n\t\t\t\t\t\t\t\t\t\tuv.stride = sources[ id ].stride;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Semantic \"%s\" not handled in geometry build process.', key );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'NORMAL':\n\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ input.id ], input.offset, normal.array );\n\t\t\t\t\t\t\tnormal.stride = sources[ input.id ].stride;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'COLOR':\n\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ input.id ], input.offset, color.array, true );\n\t\t\t\t\t\t\tcolor.stride = sources[ input.id ].stride;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TEXCOORD':\n\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ input.id ], input.offset, uv.array );\n\t\t\t\t\t\t\tuv.stride = sources[ input.id ].stride;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TEXCOORD1':\n\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ input.id ], input.offset, uv1.array );\n\t\t\t\t\t\t\tuv1.stride = sources[ input.id ].stride;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tif ( position.array.length > 0 ) geometry.setAttribute( 'position', new Float32BufferAttribute( position.array, position.stride ) );\n\t\t\tif ( normal.array.length > 0 ) geometry.setAttribute( 'normal', new Float32BufferAttribute( normal.array, normal.stride ) );\n\t\t\tif ( color.array.length > 0 ) geometry.setAttribute( 'color', new Float32BufferAttribute( color.array, color.stride ) );\n\t\t\tif ( uv.array.length > 0 ) geometry.setAttribute( 'uv', new Float32BufferAttribute( uv.array, uv.stride ) );\n\t\t\tif ( uv1.array.length > 0 ) geometry.setAttribute( 'uv1', new Float32BufferAttribute( uv1.array, uv1.stride ) );\n\n\t\t\tif ( skinIndex.array.length > 0 ) geometry.setAttribute( 'skinIndex', new Float32BufferAttribute( skinIndex.array, skinIndex.stride ) );\n\t\t\tif ( skinWeight.array.length > 0 ) geometry.setAttribute( 'skinWeight', new Float32BufferAttribute( skinWeight.array, skinWeight.stride ) );\n\n\t\t\tbuild.data = geometry;\n\t\t\tbuild.type = primitives[ 0 ].type;\n\t\t\tbuild.materialKeys = materialKeys;\n\n\t\t\treturn build;\n\n\t\t}\n\n\t\tfunction buildGeometryData( primitive, source, offset, array, isColor = false ) {\n\n\t\t\tconst indices = primitive.p;\n\t\t\tconst stride = primitive.stride;\n\t\t\tconst vcount = primitive.vcount;\n\n\t\t\tfunction pushVector( i ) {\n\n\t\t\t\tlet index = indices[ i + offset ] * sourceStride;\n\t\t\t\tconst length = index + sourceStride;\n\n\t\t\t\tfor ( ; index < length; index ++ ) {\n\n\t\t\t\t\tarray.push( sourceArray[ index ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isColor ) {\n\n\t\t\t\t\t// convert the vertex colors from srgb to linear if present\n\t\t\t\t\tconst startIndex = array.length - sourceStride - 1;\n\t\t\t\t\ttempColor.setRGB(\n\t\t\t\t\t\tarray[ startIndex + 0 ],\n\t\t\t\t\t\tarray[ startIndex + 1 ],\n\t\t\t\t\t\tarray[ startIndex + 2 ]\n\t\t\t\t\t).convertSRGBToLinear();\n\n\t\t\t\t\tarray[ startIndex + 0 ] = tempColor.r;\n\t\t\t\t\tarray[ startIndex + 1 ] = tempColor.g;\n\t\t\t\t\tarray[ startIndex + 2 ] = tempColor.b;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst sourceArray = source.array;\n\t\t\tconst sourceStride = source.stride;\n\n\t\t\tif ( primitive.vcount !== undefined ) {\n\n\t\t\t\tlet index = 0;\n\n\t\t\t\tfor ( let i = 0, l = vcount.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst count = vcount[ i ];\n\n\t\t\t\t\tif ( count === 4 ) {\n\n\t\t\t\t\t\tconst a = index + stride * 0;\n\t\t\t\t\t\tconst b = index + stride * 1;\n\t\t\t\t\t\tconst c = index + stride * 2;\n\t\t\t\t\t\tconst d = index + stride * 3;\n\n\t\t\t\t\t\tpushVector( a ); pushVector( b ); pushVector( d );\n\t\t\t\t\t\tpushVector( b ); pushVector( c ); pushVector( d );\n\n\t\t\t\t\t} else if ( count === 3 ) {\n\n\t\t\t\t\t\tconst a = index + stride * 0;\n\t\t\t\t\t\tconst b = index + stride * 1;\n\t\t\t\t\t\tconst c = index + stride * 2;\n\n\t\t\t\t\t\tpushVector( a ); pushVector( b ); pushVector( c );\n\n\t\t\t\t\t} else if ( count > 4 ) {\n\n\t\t\t\t\t\tfor ( let k = 1, kl = ( count - 2 ); k <= kl; k ++ ) {\n\n\t\t\t\t\t\t\tconst a = index + stride * 0;\n\t\t\t\t\t\t\tconst b = index + stride * k;\n\t\t\t\t\t\t\tconst c = index + stride * ( k + 1 );\n\n\t\t\t\t\t\t\tpushVector( a ); pushVector( b ); pushVector( c );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += stride * count;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( let i = 0, l = indices.length; i < l; i += stride ) {\n\n\t\t\t\t\tpushVector( i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getGeometry( id ) {\n\n\t\t\treturn getBuild( library.geometries[ id ], buildGeometry );\n\n\t\t}\n\n\t\t// kinematics\n\n\t\tfunction parseKinematicsModel( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tname: xml.getAttribute( 'name' ) || '',\n\t\t\t\tjoints: {},\n\t\t\t\tlinks: []\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'technique_common':\n\t\t\t\t\t\tparseKinematicsTechniqueCommon( child, data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.kinematicsModels[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction buildKinematicsModel( data ) {\n\n\t\t\tif ( data.build !== undefined ) return data.build;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction getKinematicsModel( id ) {\n\n\t\t\treturn getBuild( library.kinematicsModels[ id ], buildKinematicsModel );\n\n\t\t}\n\n\t\tfunction parseKinematicsTechniqueCommon( xml, data ) {\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'joint':\n\t\t\t\t\t\tdata.joints[ child.getAttribute( 'sid' ) ] = parseKinematicsJoint( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'link':\n\t\t\t\t\t\tdata.links.push( parseKinematicsLink( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseKinematicsJoint( xml ) {\n\n\t\t\tlet data;\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'prismatic':\n\t\t\t\t\tcase 'revolute':\n\t\t\t\t\t\tdata = parseKinematicsJointParameter( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseKinematicsJointParameter( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tsid: xml.getAttribute( 'sid' ),\n\t\t\t\tname: xml.getAttribute( 'name' ) || '',\n\t\t\t\taxis: new Vector3(),\n\t\t\t\tlimits: {\n\t\t\t\t\tmin: 0,\n\t\t\t\t\tmax: 0\n\t\t\t\t},\n\t\t\t\ttype: xml.nodeName,\n\t\t\t\tstatic: false,\n\t\t\t\tzeroPosition: 0,\n\t\t\t\tmiddlePosition: 0\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'axis':\n\t\t\t\t\t\tconst array = parseFloats( child.textContent );\n\t\t\t\t\t\tdata.axis.fromArray( array );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'limits':\n\t\t\t\t\t\tconst max = child.getElementsByTagName( 'max' )[ 0 ];\n\t\t\t\t\t\tconst min = child.getElementsByTagName( 'min' )[ 0 ];\n\n\t\t\t\t\t\tdata.limits.max = parseFloat( max.textContent );\n\t\t\t\t\t\tdata.limits.min = parseFloat( min.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// if min is equal to or greater than max, consider the joint static\n\n\t\t\tif ( data.limits.min >= data.limits.max ) {\n\n\t\t\t\tdata.static = true;\n\n\t\t\t}\n\n\t\t\t// calculate middle position\n\n\t\t\tdata.middlePosition = ( data.limits.min + data.limits.max ) / 2.0;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseKinematicsLink( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tsid: xml.getAttribute( 'sid' ),\n\t\t\t\tname: xml.getAttribute( 'name' ) || '',\n\t\t\t\tattachments: [],\n\t\t\t\ttransforms: []\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'attachment_full':\n\t\t\t\t\t\tdata.attachments.push( parseKinematicsAttachment( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'matrix':\n\t\t\t\t\tcase 'translate':\n\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\tdata.transforms.push( parseKinematicsTransform( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseKinematicsAttachment( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tjoint: xml.getAttribute( 'joint' ).split( '/' ).pop(),\n\t\t\t\ttransforms: [],\n\t\t\t\tlinks: []\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'link':\n\t\t\t\t\t\tdata.links.push( parseKinematicsLink( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'matrix':\n\t\t\t\t\tcase 'translate':\n\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\tdata.transforms.push( parseKinematicsTransform( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseKinematicsTransform( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\ttype: xml.nodeName\n\t\t\t};\n\n\t\t\tconst array = parseFloats( xml.textContent );\n\n\t\t\tswitch ( data.type ) {\n\n\t\t\t\tcase 'matrix':\n\t\t\t\t\tdata.obj = new Matrix4();\n\t\t\t\t\tdata.obj.fromArray( array ).transpose();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'translate':\n\t\t\t\t\tdata.obj = new Vector3();\n\t\t\t\t\tdata.obj.fromArray( array );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'rotate':\n\t\t\t\t\tdata.obj = new Vector3();\n\t\t\t\t\tdata.obj.fromArray( array );\n\t\t\t\t\tdata.angle = MathUtils.degToRad( array[ 3 ] );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// physics\n\n\t\tfunction parsePhysicsModel( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tname: xml.getAttribute( 'name' ) || '',\n\t\t\t\trigidBodies: {}\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'rigid_body':\n\t\t\t\t\t\tdata.rigidBodies[ child.getAttribute( 'name' ) ] = {};\n\t\t\t\t\t\tparsePhysicsRigidBody( child, data.rigidBodies[ child.getAttribute( 'name' ) ] );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.physicsModels[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction parsePhysicsRigidBody( xml, data ) {\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'technique_common':\n\t\t\t\t\t\tparsePhysicsTechniqueCommon( child, data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parsePhysicsTechniqueCommon( xml, data ) {\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'inertia':\n\t\t\t\t\t\tdata.inertia = parseFloats( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'mass':\n\t\t\t\t\t\tdata.mass = parseFloats( child.textContent )[ 0 ];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// scene\n\n\t\tfunction parseKinematicsScene( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tbindJointAxis: []\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'bind_joint_axis':\n\t\t\t\t\t\tdata.bindJointAxis.push( parseKinematicsBindJointAxis( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.kinematicsScenes[ parseId( xml.getAttribute( 'url' ) ) ] = data;\n\n\t\t}\n\n\t\tfunction parseKinematicsBindJointAxis( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\ttarget: xml.getAttribute( 'target' ).split( '/' ).pop()\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'axis':\n\t\t\t\t\t\tconst param = child.getElementsByTagName( 'param' )[ 0 ];\n\t\t\t\t\t\tdata.axis = param.textContent;\n\t\t\t\t\t\tconst tmpJointIndex = data.axis.split( 'inst_' ).pop().split( 'axis' )[ 0 ];\n\t\t\t\t\t\tdata.jointIndex = tmpJointIndex.substring( 0, tmpJointIndex.length - 1 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildKinematicsScene( data ) {\n\n\t\t\tif ( data.build !== undefined ) return data.build;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction getKinematicsScene( id ) {\n\n\t\t\treturn getBuild( library.kinematicsScenes[ id ], buildKinematicsScene );\n\n\t\t}\n\n\t\tfunction setupKinematics() {\n\n\t\t\tconst kinematicsModelId = Object.keys( library.kinematicsModels )[ 0 ];\n\t\t\tconst kinematicsSceneId = Object.keys( library.kinematicsScenes )[ 0 ];\n\t\t\tconst visualSceneId = Object.keys( library.visualScenes )[ 0 ];\n\n\t\t\tif ( kinematicsModelId === undefined || kinematicsSceneId === undefined ) return;\n\n\t\t\tconst kinematicsModel = getKinematicsModel( kinematicsModelId );\n\t\t\tconst kinematicsScene = getKinematicsScene( kinematicsSceneId );\n\t\t\tconst visualScene = getVisualScene( visualSceneId );\n\n\t\t\tconst bindJointAxis = kinematicsScene.bindJointAxis;\n\t\t\tconst jointMap = {};\n\n\t\t\tfor ( let i = 0, l = bindJointAxis.length; i < l; i ++ ) {\n\n\t\t\t\tconst axis = bindJointAxis[ i ];\n\n\t\t\t\t// the result of the following query is an element of type 'translate', 'rotate','scale' or 'matrix'\n\n\t\t\t\tconst targetElement = collada.querySelector( '[sid=\"' + axis.target + '\"]' );\n\n\t\t\t\tif ( targetElement ) {\n\n\t\t\t\t\t// get the parent of the transform element\n\n\t\t\t\t\tconst parentVisualElement = targetElement.parentElement;\n\n\t\t\t\t\t// connect the joint of the kinematics model with the element in the visual scene\n\n\t\t\t\t\tconnect( axis.jointIndex, parentVisualElement );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction connect( jointIndex, visualElement ) {\n\n\t\t\t\tconst visualElementName = visualElement.getAttribute( 'name' );\n\t\t\t\tconst joint = kinematicsModel.joints[ jointIndex ];\n\n\t\t\t\tvisualScene.traverse( function ( object ) {\n\n\t\t\t\t\tif ( object.name === visualElementName ) {\n\n\t\t\t\t\t\tjointMap[ jointIndex ] = {\n\t\t\t\t\t\t\tobject: object,\n\t\t\t\t\t\t\ttransforms: buildTransformList( visualElement ),\n\t\t\t\t\t\t\tjoint: joint,\n\t\t\t\t\t\t\tposition: joint.zeroPosition\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tconst m0 = new Matrix4();\n\n\t\t\tkinematics = {\n\n\t\t\t\tjoints: kinematicsModel && kinematicsModel.joints,\n\n\t\t\t\tgetJointValue: function ( jointIndex ) {\n\n\t\t\t\t\tconst jointData = jointMap[ jointIndex ];\n\n\t\t\t\t\tif ( jointData ) {\n\n\t\t\t\t\t\treturn jointData.position;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Joint ' + jointIndex + ' doesn\\'t exist.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetJointValue: function ( jointIndex, value ) {\n\n\t\t\t\t\tconst jointData = jointMap[ jointIndex ];\n\n\t\t\t\t\tif ( jointData ) {\n\n\t\t\t\t\t\tconst joint = jointData.joint;\n\n\t\t\t\t\t\tif ( value > joint.limits.max || value < joint.limits.min ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Joint ' + jointIndex + ' value ' + value + ' outside of limits (min: ' + joint.limits.min + ', max: ' + joint.limits.max + ').' );\n\n\t\t\t\t\t\t} else if ( joint.static ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Joint ' + jointIndex + ' is static.' );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconst object = jointData.object;\n\t\t\t\t\t\t\tconst axis = joint.axis;\n\t\t\t\t\t\t\tconst transforms = jointData.transforms;\n\n\t\t\t\t\t\t\tmatrix.identity();\n\n\t\t\t\t\t\t\t// each update, we have to apply all transforms in the correct order\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < transforms.length; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst transform = transforms[ i ];\n\n\t\t\t\t\t\t\t\t// if there is a connection of the transform node with a joint, apply the joint value\n\n\t\t\t\t\t\t\t\tif ( transform.sid && transform.sid.indexOf( jointIndex ) !== - 1 ) {\n\n\t\t\t\t\t\t\t\t\tswitch ( joint.type ) {\n\n\t\t\t\t\t\t\t\t\t\tcase 'revolute':\n\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( m0.makeRotationAxis( axis, MathUtils.degToRad( value ) ) );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 'prismatic':\n\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( m0.makeTranslation( axis.x * value, axis.y * value, axis.z * value ) );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Unknown joint type: ' + joint.type );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tswitch ( transform.type ) {\n\n\t\t\t\t\t\t\t\t\t\tcase 'matrix':\n\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( transform.obj );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 'translate':\n\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( m0.makeTranslation( transform.obj.x, transform.obj.y, transform.obj.z ) );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 'scale':\n\t\t\t\t\t\t\t\t\t\t\tmatrix.scale( transform.obj );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( m0.makeRotationAxis( transform.obj, transform.angle ) );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tobject.matrix.copy( matrix );\n\t\t\t\t\t\t\tobject.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t\t\t\t\t\tjointMap[ jointIndex ].position = value;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.log( 'THREE.ColladaLoader: ' + jointIndex + ' does not exist.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction buildTransformList( node ) {\n\n\t\t\tconst transforms = [];\n\n\t\t\tconst xml = collada.querySelector( '[id=\"' + node.id + '\"]' );\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tlet array, vector;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'matrix':\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\n\t\t\t\t\t\tconst matrix = new Matrix4().fromArray( array ).transpose();\n\t\t\t\t\t\ttransforms.push( {\n\t\t\t\t\t\t\tsid: child.getAttribute( 'sid' ),\n\t\t\t\t\t\t\ttype: child.nodeName,\n\t\t\t\t\t\t\tobj: matrix\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'translate':\n\t\t\t\t\tcase 'scale':\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\n\t\t\t\t\t\tvector = new Vector3().fromArray( array );\n\t\t\t\t\t\ttransforms.push( {\n\t\t\t\t\t\t\tsid: child.getAttribute( 'sid' ),\n\t\t\t\t\t\t\ttype: child.nodeName,\n\t\t\t\t\t\t\tobj: vector\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\n\t\t\t\t\t\tvector = new Vector3().fromArray( array );\n\t\t\t\t\t\tconst angle = MathUtils.degToRad( array[ 3 ] );\n\t\t\t\t\t\ttransforms.push( {\n\t\t\t\t\t\t\tsid: child.getAttribute( 'sid' ),\n\t\t\t\t\t\t\ttype: child.nodeName,\n\t\t\t\t\t\t\tobj: vector,\n\t\t\t\t\t\t\tangle: angle\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn transforms;\n\n\t\t}\n\n\t\t// nodes\n\n\t\tfunction prepareNodes( xml ) {\n\n\t\t\tconst elements = xml.getElementsByTagName( 'node' );\n\n\t\t\t// ensure all node elements have id attributes\n\n\t\t\tfor ( let i = 0; i < elements.length; i ++ ) {\n\n\t\t\t\tconst element = elements[ i ];\n\n\t\t\t\tif ( element.hasAttribute( 'id' ) === false ) {\n\n\t\t\t\t\telement.setAttribute( 'id', generateId() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst matrix = new Matrix4();\n\t\tconst vector = new Vector3();\n\n\t\tfunction parseNode( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tname: xml.getAttribute( 'name' ) || '',\n\t\t\t\ttype: xml.getAttribute( 'type' ),\n\t\t\t\tid: xml.getAttribute( 'id' ),\n\t\t\t\tsid: xml.getAttribute( 'sid' ),\n\t\t\t\tmatrix: new Matrix4(),\n\t\t\t\tnodes: [],\n\t\t\t\tinstanceCameras: [],\n\t\t\t\tinstanceControllers: [],\n\t\t\t\tinstanceLights: [],\n\t\t\t\tinstanceGeometries: [],\n\t\t\t\tinstanceNodes: [],\n\t\t\t\ttransforms: {}\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tlet array;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'node':\n\t\t\t\t\t\tdata.nodes.push( child.getAttribute( 'id' ) );\n\t\t\t\t\t\tparseNode( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'instance_camera':\n\t\t\t\t\t\tdata.instanceCameras.push( parseId( child.getAttribute( 'url' ) ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'instance_controller':\n\t\t\t\t\t\tdata.instanceControllers.push( parseNodeInstance( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'instance_light':\n\t\t\t\t\t\tdata.instanceLights.push( parseId( child.getAttribute( 'url' ) ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'instance_geometry':\n\t\t\t\t\t\tdata.instanceGeometries.push( parseNodeInstance( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'instance_node':\n\t\t\t\t\t\tdata.instanceNodes.push( parseId( child.getAttribute( 'url' ) ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'matrix':\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\n\t\t\t\t\t\tdata.matrix.multiply( matrix.fromArray( array ).transpose() );\n\t\t\t\t\t\tdata.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'translate':\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\n\t\t\t\t\t\tvector.fromArray( array );\n\t\t\t\t\t\tdata.matrix.multiply( matrix.makeTranslation( vector.x, vector.y, vector.z ) );\n\t\t\t\t\t\tdata.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\n\t\t\t\t\t\tconst angle = MathUtils.degToRad( array[ 3 ] );\n\t\t\t\t\t\tdata.matrix.multiply( matrix.makeRotationAxis( vector.fromArray( array ), angle ) );\n\t\t\t\t\t\tdata.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'scale':\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\n\t\t\t\t\t\tdata.matrix.scale( vector.fromArray( array ) );\n\t\t\t\t\t\tdata.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'extra':\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.log( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasNode( data.id ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.ColladaLoader: There is already a node with ID %s. Exclude current node from further processing.', data.id );\n\n\t\t\t} else {\n\n\t\t\t\tlibrary.nodes[ data.id ] = data;\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseNodeInstance( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tid: parseId( xml.getAttribute( 'url' ) ),\n\t\t\t\tmaterials: {},\n\t\t\t\tskeletons: []\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'bind_material':\n\t\t\t\t\t\tconst instances = child.getElementsByTagName( 'instance_material' );\n\n\t\t\t\t\t\tfor ( let j = 0; j < instances.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst instance = instances[ j ];\n\t\t\t\t\t\t\tconst symbol = instance.getAttribute( 'symbol' );\n\t\t\t\t\t\t\tconst target = instance.getAttribute( 'target' );\n\n\t\t\t\t\t\t\tdata.materials[ symbol ] = parseId( target );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'skeleton':\n\t\t\t\t\t\tdata.skeletons.push( parseId( child.textContent ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildSkeleton( skeletons, joints ) {\n\n\t\t\tconst boneData = [];\n\t\t\tconst sortedBoneData = [];\n\n\t\t\tlet i, j, data;\n\n\t\t\t// a skeleton can have multiple root bones. collada expresses this\n\t\t\t// situtation with multiple \"skeleton\" tags per controller instance\n\n\t\t\tfor ( i = 0; i < skeletons.length; i ++ ) {\n\n\t\t\t\tconst skeleton = skeletons[ i ];\n\n\t\t\t\tlet root;\n\n\t\t\t\tif ( hasNode( skeleton ) ) {\n\n\t\t\t\t\troot = getNode( skeleton );\n\t\t\t\t\tbuildBoneHierarchy( root, joints, boneData );\n\n\t\t\t\t} else if ( hasVisualScene( skeleton ) ) {\n\n\t\t\t\t\t// handle case where the skeleton refers to the visual scene (#13335)\n\n\t\t\t\t\tconst visualScene = library.visualScenes[ skeleton ];\n\t\t\t\t\tconst children = visualScene.children;\n\n\t\t\t\t\tfor ( let j = 0; j < children.length; j ++ ) {\n\n\t\t\t\t\t\tconst child = children[ j ];\n\n\t\t\t\t\t\tif ( child.type === 'JOINT' ) {\n\n\t\t\t\t\t\t\tconst root = getNode( child.id );\n\t\t\t\t\t\t\tbuildBoneHierarchy( root, joints, boneData );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.ColladaLoader: Unable to find root bone of skeleton with ID:', skeleton );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// sort bone data (the order is defined in the corresponding controller)\n\n\t\t\tfor ( i = 0; i < joints.length; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < boneData.length; j ++ ) {\n\n\t\t\t\t\tdata = boneData[ j ];\n\n\t\t\t\t\tif ( data.bone.name === joints[ i ].name ) {\n\n\t\t\t\t\t\tsortedBoneData[ i ] = data;\n\t\t\t\t\t\tdata.processed = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add unprocessed bone data at the end of the list\n\n\t\t\tfor ( i = 0; i < boneData.length; i ++ ) {\n\n\t\t\t\tdata = boneData[ i ];\n\n\t\t\t\tif ( data.processed === false ) {\n\n\t\t\t\t\tsortedBoneData.push( data );\n\t\t\t\t\tdata.processed = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// setup arrays for skeleton creation\n\n\t\t\tconst bones = [];\n\t\t\tconst boneInverses = [];\n\n\t\t\tfor ( i = 0; i < sortedBoneData.length; i ++ ) {\n\n\t\t\t\tdata = sortedBoneData[ i ];\n\n\t\t\t\tbones.push( data.bone );\n\t\t\t\tboneInverses.push( data.boneInverse );\n\n\t\t\t}\n\n\t\t\treturn new Skeleton( bones, boneInverses );\n\n\t\t}\n\n\t\tfunction buildBoneHierarchy( root, joints, boneData ) {\n\n\t\t\t// setup bone data from visual scene\n\n\t\t\troot.traverse( function ( object ) {\n\n\t\t\t\tif ( object.isBone === true ) {\n\n\t\t\t\t\tlet boneInverse;\n\n\t\t\t\t\t// retrieve the boneInverse from the controller data\n\n\t\t\t\t\tfor ( let i = 0; i < joints.length; i ++ ) {\n\n\t\t\t\t\t\tconst joint = joints[ i ];\n\n\t\t\t\t\t\tif ( joint.name === object.name ) {\n\n\t\t\t\t\t\t\tboneInverse = joint.boneInverse;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( boneInverse === undefined ) {\n\n\t\t\t\t\t\t// Unfortunately, there can be joints in the visual scene that are not part of the\n\t\t\t\t\t\t// corresponding controller. In this case, we have to create a dummy boneInverse matrix\n\t\t\t\t\t\t// for the respective bone. This bone won't affect any vertices, because there are no skin indices\n\t\t\t\t\t\t// and weights defined for it. But we still have to add the bone to the sorted bone list in order to\n\t\t\t\t\t\t// ensure a correct animation of the model.\n\n\t\t\t\t\t\tboneInverse = new Matrix4();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tboneData.push( { bone: object, boneInverse: boneInverse, processed: false } );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction buildNode( data ) {\n\n\t\t\tconst objects = [];\n\n\t\t\tconst matrix = data.matrix;\n\t\t\tconst nodes = data.nodes;\n\t\t\tconst type = data.type;\n\t\t\tconst instanceCameras = data.instanceCameras;\n\t\t\tconst instanceControllers = data.instanceControllers;\n\t\t\tconst instanceLights = data.instanceLights;\n\t\t\tconst instanceGeometries = data.instanceGeometries;\n\t\t\tconst instanceNodes = data.instanceNodes;\n\n\t\t\t// nodes\n\n\t\t\tfor ( let i = 0, l = nodes.length; i < l; i ++ ) {\n\n\t\t\t\tobjects.push( getNode( nodes[ i ] ) );\n\n\t\t\t}\n\n\t\t\t// instance cameras\n\n\t\t\tfor ( let i = 0, l = instanceCameras.length; i < l; i ++ ) {\n\n\t\t\t\tconst instanceCamera = getCamera( instanceCameras[ i ] );\n\n\t\t\t\tif ( instanceCamera !== null ) {\n\n\t\t\t\t\tobjects.push( instanceCamera.clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// instance controllers\n\n\t\t\tfor ( let i = 0, l = instanceControllers.length; i < l; i ++ ) {\n\n\t\t\t\tconst instance = instanceControllers[ i ];\n\t\t\t\tconst controller = getController( instance.id );\n\t\t\t\tconst geometries = getGeometry( controller.id );\n\t\t\t\tconst newObjects = buildObjects( geometries, instance.materials );\n\n\t\t\t\tconst skeletons = instance.skeletons;\n\t\t\t\tconst joints = controller.skin.joints;\n\n\t\t\t\tconst skeleton = buildSkeleton( skeletons, joints );\n\n\t\t\t\tfor ( let j = 0, jl = newObjects.length; j < jl; j ++ ) {\n\n\t\t\t\t\tconst object = newObjects[ j ];\n\n\t\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t\tobject.bind( skeleton, controller.skin.bindMatrix );\n\t\t\t\t\t\tobject.normalizeSkinWeights();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects.push( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// instance lights\n\n\t\t\tfor ( let i = 0, l = instanceLights.length; i < l; i ++ ) {\n\n\t\t\t\tconst instanceLight = getLight( instanceLights[ i ] );\n\n\t\t\t\tif ( instanceLight !== null ) {\n\n\t\t\t\t\tobjects.push( instanceLight.clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// instance geometries\n\n\t\t\tfor ( let i = 0, l = instanceGeometries.length; i < l; i ++ ) {\n\n\t\t\t\tconst instance = instanceGeometries[ i ];\n\n\t\t\t\t// a single geometry instance in collada can lead to multiple object3Ds.\n\t\t\t\t// this is the case when primitives are combined like triangles and lines\n\n\t\t\t\tconst geometries = getGeometry( instance.id );\n\t\t\t\tconst newObjects = buildObjects( geometries, instance.materials );\n\n\t\t\t\tfor ( let j = 0, jl = newObjects.length; j < jl; j ++ ) {\n\n\t\t\t\t\tobjects.push( newObjects[ j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// instance nodes\n\n\t\t\tfor ( let i = 0, l = instanceNodes.length; i < l; i ++ ) {\n\n\t\t\t\tobjects.push( getNode( instanceNodes[ i ] ).clone() );\n\n\t\t\t}\n\n\t\t\tlet object;\n\n\t\t\tif ( nodes.length === 0 && objects.length === 1 ) {\n\n\t\t\t\tobject = objects[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tobject = ( type === 'JOINT' ) ? new Bone() : new Group();\n\n\t\t\t\tfor ( let i = 0; i < objects.length; i ++ ) {\n\n\t\t\t\t\tobject.add( objects[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tobject.name = ( type === 'JOINT' ) ? data.sid : data.name;\n\t\t\tobject.matrix.copy( matrix );\n\t\t\tobject.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t\treturn object;\n\n\t\t}\n\n\t\tconst fallbackMaterial = new MeshBasicMaterial( {\n\t\t\tname: Loader.DEFAULT_MATERIAL_NAME,\n\t\t\tcolor: 0xff00ff\n\t\t} );\n\n\t\tfunction resolveMaterialBinding( keys, instanceMaterials ) {\n\n\t\t\tconst materials = [];\n\n\t\t\tfor ( let i = 0, l = keys.length; i < l; i ++ ) {\n\n\t\t\t\tconst id = instanceMaterials[ keys[ i ] ];\n\n\t\t\t\tif ( id === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Material with key %s not found. Apply fallback material.', keys[ i ] );\n\t\t\t\t\tmaterials.push( fallbackMaterial );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterials.push( getMaterial( id ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materials;\n\n\t\t}\n\n\t\tfunction buildObjects( geometries, instanceMaterials ) {\n\n\t\t\tconst objects = [];\n\n\t\t\tfor ( const type in geometries ) {\n\n\t\t\t\tconst geometry = geometries[ type ];\n\n\t\t\t\tconst materials = resolveMaterialBinding( geometry.materialKeys, instanceMaterials );\n\n\t\t\t\t// handle case if no materials are defined\n\n\t\t\t\tif ( materials.length === 0 ) {\n\n\t\t\t\t\tif ( type === 'lines' || type === 'linestrips' ) {\n\n\t\t\t\t\t\tmaterials.push( new LineBasicMaterial() );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmaterials.push( new MeshPhongMaterial() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Collada allows to use phong and lambert materials with lines. Replacing these cases with LineBasicMaterial.\n\n\t\t\t\tif ( type === 'lines' || type === 'linestrips' ) {\n\n\t\t\t\t\tfor ( let i = 0, l = materials.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst material = materials[ i ];\n\n\t\t\t\t\t\tif ( material.isMeshPhongMaterial === true || material.isMeshLambertMaterial === true ) {\n\n\t\t\t\t\t\t\tconst lineMaterial = new LineBasicMaterial();\n\n\t\t\t\t\t\t\t// copy compatible properties\n\n\t\t\t\t\t\t\tlineMaterial.color.copy( material.color );\n\t\t\t\t\t\t\tlineMaterial.opacity = material.opacity;\n\t\t\t\t\t\t\tlineMaterial.transparent = material.transparent;\n\n\t\t\t\t\t\t\t// replace material\n\n\t\t\t\t\t\t\tmaterials[ i ] = lineMaterial;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// regard skinning\n\n\t\t\t\tconst skinning = ( geometry.data.attributes.skinIndex !== undefined );\n\n\t\t\t\t// choose between a single or multi materials (material array)\n\n\t\t\t\tconst material = ( materials.length === 1 ) ? materials[ 0 ] : materials;\n\n\t\t\t\t// now create a specific 3D object\n\n\t\t\t\tlet object;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 'lines':\n\t\t\t\t\t\tobject = new LineSegments( geometry.data, material );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'linestrips':\n\t\t\t\t\t\tobject = new Line( geometry.data, material );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'triangles':\n\t\t\t\t\tcase 'polylist':\n\t\t\t\t\t\tif ( skinning ) {\n\n\t\t\t\t\t\t\tobject = new SkinnedMesh( geometry.data, material );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tobject = new Mesh( geometry.data, material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tobjects.push( object );\n\n\t\t\t}\n\n\t\t\treturn objects;\n\n\t\t}\n\n\t\tfunction hasNode( id ) {\n\n\t\t\treturn library.nodes[ id ] !== undefined;\n\n\t\t}\n\n\t\tfunction getNode( id ) {\n\n\t\t\treturn getBuild( library.nodes[ id ], buildNode );\n\n\t\t}\n\n\t\t// visual scenes\n\n\t\tfunction parseVisualScene( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tname: xml.getAttribute( 'name' ),\n\t\t\t\tchildren: []\n\t\t\t};\n\n\t\t\tprepareNodes( xml );\n\n\t\t\tconst elements = getElementsByTagName( xml, 'node' );\n\n\t\t\tfor ( let i = 0; i < elements.length; i ++ ) {\n\n\t\t\t\tdata.children.push( parseNode( elements[ i ] ) );\n\n\t\t\t}\n\n\t\t\tlibrary.visualScenes[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction buildVisualScene( data ) {\n\n\t\t\tconst group = new Group();\n\t\t\tgroup.name = data.name;\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tgroup.add( getNode( child.id ) );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t}\n\n\t\tfunction hasVisualScene( id ) {\n\n\t\t\treturn library.visualScenes[ id ] !== undefined;\n\n\t\t}\n\n\t\tfunction getVisualScene( id ) {\n\n\t\t\treturn getBuild( library.visualScenes[ id ], buildVisualScene );\n\n\t\t}\n\n\t\t// scenes\n\n\t\tfunction parseScene( xml ) {\n\n\t\t\tconst instance = getElementsByTagName( xml, 'instance_visual_scene' )[ 0 ];\n\t\t\treturn getVisualScene( parseId( instance.getAttribute( 'url' ) ) );\n\n\t\t}\n\n\t\tfunction setupAnimations() {\n\n\t\t\tconst clips = library.clips;\n\n\t\t\tif ( isEmpty( clips ) === true ) {\n\n\t\t\t\tif ( isEmpty( library.animations ) === false ) {\n\n\t\t\t\t\t// if there are animations but no clips, we create a default clip for playback\n\n\t\t\t\t\tconst tracks = [];\n\n\t\t\t\t\tfor ( const id in library.animations ) {\n\n\t\t\t\t\t\tconst animationTracks = getAnimation( id );\n\n\t\t\t\t\t\tfor ( let i = 0, l = animationTracks.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\ttracks.push( animationTracks[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tanimations.push( new AnimationClip( 'default', - 1, tracks ) );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( const id in clips ) {\n\n\t\t\t\t\tanimations.push( getAnimationClip( id ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// convert the parser error element into text with each child elements text\n\t\t// separated by new lines.\n\n\t\tfunction parserErrorToText( parserError ) {\n\n\t\t\tlet result = '';\n\t\t\tconst stack = [ parserError ];\n\n\t\t\twhile ( stack.length ) {\n\n\t\t\t\tconst node = stack.shift();\n\n\t\t\t\tif ( node.nodeType === Node.TEXT_NODE ) {\n\n\t\t\t\t\tresult += node.textContent;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tresult += '\\n';\n\t\t\t\t\tstack.push.apply( stack, node.childNodes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn result.trim();\n\n\t\t}\n\n\t\tif ( text.length === 0 ) {\n\n\t\t\treturn { scene: new Scene() };\n\n\t\t}\n\n\t\tconst xml = new DOMParser().parseFromString( text, 'application/xml' );\n\n\t\tconst collada = getElementsByTagName( xml, 'COLLADA' )[ 0 ];\n\n\t\tconst parserError = xml.getElementsByTagName( 'parsererror' )[ 0 ];\n\t\tif ( parserError !== undefined ) {\n\n\t\t\t// Chrome will return parser error with a div in it\n\n\t\t\tconst errorElement = getElementsByTagName( parserError, 'div' )[ 0 ];\n\t\t\tlet errorText;\n\n\t\t\tif ( errorElement ) {\n\n\t\t\t\terrorText = errorElement.textContent;\n\n\t\t\t} else {\n\n\t\t\t\terrorText = parserErrorToText( parserError );\n\n\t\t\t}\n\n\t\t\tconsole.error( 'THREE.ColladaLoader: Failed to parse collada file.\\n', errorText );\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// metadata\n\n\t\tconst version = collada.getAttribute( 'version' );\n\t\tconsole.debug( 'THREE.ColladaLoader: File version', version );\n\n\t\tconst asset = parseAsset( getElementsByTagName( collada, 'asset' )[ 0 ] );\n\t\tconst textureLoader = new TextureLoader( this.manager );\n\t\ttextureLoader.setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\n\n\t\tlet tgaLoader;\n\n\t\tif ( TGALoader ) {\n\n\t\t\ttgaLoader = new TGALoader( this.manager );\n\t\t\ttgaLoader.setPath( this.resourcePath || path );\n\n\t\t}\n\n\t\t//\n\n\t\tconst tempColor = new Color();\n\t\tconst animations = [];\n\t\tlet kinematics = {};\n\t\tlet count = 0;\n\n\t\t//\n\n\t\tconst library = {\n\t\t\tanimations: {},\n\t\t\tclips: {},\n\t\t\tcontrollers: {},\n\t\t\timages: {},\n\t\t\teffects: {},\n\t\t\tmaterials: {},\n\t\t\tcameras: {},\n\t\t\tlights: {},\n\t\t\tgeometries: {},\n\t\t\tnodes: {},\n\t\t\tvisualScenes: {},\n\t\t\tkinematicsModels: {},\n\t\t\tphysicsModels: {},\n\t\t\tkinematicsScenes: {}\n\t\t};\n\n\t\tparseLibrary( collada, 'library_animations', 'animation', parseAnimation );\n\t\tparseLibrary( collada, 'library_animation_clips', 'animation_clip', parseAnimationClip );\n\t\tparseLibrary( collada, 'library_controllers', 'controller', parseController );\n\t\tparseLibrary( collada, 'library_images', 'image', parseImage );\n\t\tparseLibrary( collada, 'library_effects', 'effect', parseEffect );\n\t\tparseLibrary( collada, 'library_materials', 'material', parseMaterial );\n\t\tparseLibrary( collada, 'library_cameras', 'camera', parseCamera );\n\t\tparseLibrary( collada, 'library_lights', 'light', parseLight );\n\t\tparseLibrary( collada, 'library_geometries', 'geometry', parseGeometry );\n\t\tparseLibrary( collada, 'library_nodes', 'node', parseNode );\n\t\tparseLibrary( collada, 'library_visual_scenes', 'visual_scene', parseVisualScene );\n\t\tparseLibrary( collada, 'library_kinematics_models', 'kinematics_model', parseKinematicsModel );\n\t\tparseLibrary( collada, 'library_physics_models', 'physics_model', parsePhysicsModel );\n\t\tparseLibrary( collada, 'scene', 'instance_kinematics_scene', parseKinematicsScene );\n\n\t\tbuildLibrary( library.animations, buildAnimation );\n\t\tbuildLibrary( library.clips, buildAnimationClip );\n\t\tbuildLibrary( library.controllers, buildController );\n\t\tbuildLibrary( library.images, buildImage );\n\t\tbuildLibrary( library.effects, buildEffect );\n\t\tbuildLibrary( library.materials, buildMaterial );\n\t\tbuildLibrary( library.cameras, buildCamera );\n\t\tbuildLibrary( library.lights, buildLight );\n\t\tbuildLibrary( library.geometries, buildGeometry );\n\t\tbuildLibrary( library.visualScenes, buildVisualScene );\n\n\t\tsetupAnimations();\n\t\tsetupKinematics();\n\n\t\tconst scene = parseScene( getElementsByTagName( collada, 'scene' )[ 0 ] );\n\t\tscene.animations = animations;\n\n\t\tif ( asset.upAxis === 'Z_UP' ) {\n\n\t\t\tconsole.warn( 'THREE.ColladaLoader: You are loading an asset with a Z-UP coordinate system. The loader just rotates the asset to transform it into Y-UP. The vertex data are not converted, see #24289.' );\n\t\t\tscene.rotation.set( - Math.PI / 2, 0, 0 );\n\n\t\t}\n\n\t\tscene.scale.multiplyScalar( asset.unit );\n\n\t\treturn {\n\t\t\tget animations() {\n\n\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Please access animations over scene.animations now.' );\n\t\t\t\treturn animations;\n\n\t\t\t},\n\t\t\tkinematics: kinematics,\n\t\t\tlibrary: library,\n\t\t\tscene: scene\n\t\t};\n\n\t}\n\n}\n\nexport { ColladaLoader };\n","import { Euler, Object3D, Vector3, Quaternion, Matrix4 } from 'three';\n\nconst _tempAxis = new Vector3();\nconst _tempEuler = new Euler();\nconst _tempTransform = new Matrix4();\nconst _tempOrigTransform = new Matrix4();\nconst _tempQuat = new Quaternion();\nconst _tempScale = new Vector3(1.0, 1.0, 1.0);\nconst _tempPosition = new Vector3();\n\nclass URDFBase extends Object3D {\n\n    constructor(...args) {\n\n        super(...args);\n        this.urdfNode = null;\n        this.urdfName = '';\n\n    }\n\n    copy(source, recursive) {\n\n        super.copy(source, recursive);\n\n        this.urdfNode = source.urdfNode;\n        this.urdfName = source.urdfName;\n\n        return this;\n\n    }\n\n}\n\nclass URDFCollider extends URDFBase {\n\n    constructor(...args) {\n\n        super(...args);\n        this.isURDFCollider = true;\n        this.type = 'URDFCollider';\n\n    }\n\n}\n\nclass URDFVisual extends URDFBase {\n\n    constructor(...args) {\n\n        super(...args);\n        this.isURDFVisual = true;\n        this.type = 'URDFVisual';\n\n    }\n\n}\n\nclass URDFLink extends URDFBase {\n\n    constructor(...args) {\n\n        super(...args);\n        this.isURDFLink = true;\n        this.type = 'URDFLink';\n\n    }\n\n}\n\nclass URDFJoint extends URDFBase {\n\n    get jointType() {\n\n        return this._jointType;\n\n    }\n\n    set jointType(v) {\n\n        if (this.jointType === v) return;\n        this._jointType = v;\n        this.matrixWorldNeedsUpdate = true;\n        switch (v) {\n\n            case 'fixed':\n                this.jointValue = [];\n                break;\n\n            case 'continuous':\n            case 'revolute':\n            case 'prismatic':\n                this.jointValue = new Array(1).fill(0);\n                break;\n\n            case 'planar':\n                // Planar joints are, 3dof: position XY and rotation Z.\n                this.jointValue = new Array(3).fill(0);\n                this.axis = new Vector3(0, 0, 1);\n                break;\n\n            case 'floating':\n                this.jointValue = new Array(6).fill(0);\n                break;\n\n        }\n\n    }\n\n    get angle() {\n\n        return this.jointValue[0];\n\n    }\n\n    constructor(...args) {\n\n        super(...args);\n\n        this.isURDFJoint = true;\n        this.type = 'URDFJoint';\n\n        this.jointValue = null;\n        this.jointType = 'fixed';\n        this.axis = new Vector3(1, 0, 0);\n        this.limit = { lower: 0, upper: 0 };\n        this.ignoreLimits = false;\n\n        this.origPosition = null;\n        this.origQuaternion = null;\n\n        this.mimicJoints = [];\n\n    }\n\n    /* Overrides */\n    copy(source, recursive) {\n\n        super.copy(source, recursive);\n\n        this.jointType = source.jointType;\n        this.axis = source.axis.clone();\n        this.limit.lower = source.limit.lower;\n        this.limit.upper = source.limit.upper;\n        this.ignoreLimits = false;\n\n        this.jointValue = [...source.jointValue];\n\n        this.origPosition = source.origPosition ? source.origPosition.clone() : null;\n        this.origQuaternion = source.origQuaternion ? source.origQuaternion.clone() : null;\n\n        this.mimicJoints = [...source.mimicJoints];\n\n        return this;\n\n    }\n\n    /* Public Functions */\n    /**\n     * @param {...number|null} values The joint value components to set, optionally null for no-op\n     * @returns {boolean} Whether the invocation of this function resulted in an actual change to the joint value\n     */\n    setJointValue(...values) {\n\n        // Parse all incoming values into numbers except null, which we treat as a no-op for that value component.\n        values = values.map(v => v === null ? null : parseFloat(v));\n\n        if (!this.origPosition || !this.origQuaternion) {\n\n            this.origPosition = this.position.clone();\n            this.origQuaternion = this.quaternion.clone();\n\n        }\n\n        let didUpdate = false;\n\n        this.mimicJoints.forEach(joint => {\n\n            didUpdate = joint.updateFromMimickedJoint(...values) || didUpdate;\n\n        });\n\n        switch (this.jointType) {\n\n            case 'fixed': {\n\n                return didUpdate;\n\n            }\n            case 'continuous':\n            case 'revolute': {\n\n                let angle = values[0];\n                if (angle == null) return didUpdate;\n                if (angle === this.jointValue[0]) return didUpdate;\n\n                if (!this.ignoreLimits && this.jointType === 'revolute') {\n\n                    angle = Math.min(this.limit.upper, angle);\n                    angle = Math.max(this.limit.lower, angle);\n\n                }\n\n                this.quaternion\n                    .setFromAxisAngle(this.axis, angle)\n                    .premultiply(this.origQuaternion);\n\n                if (this.jointValue[0] !== angle) {\n\n                    this.jointValue[0] = angle;\n                    this.matrixWorldNeedsUpdate = true;\n                    return true;\n\n                } else {\n\n                    return didUpdate;\n\n                }\n\n            }\n\n            case 'prismatic': {\n\n                let pos = values[0];\n                if (pos == null) return didUpdate;\n                if (pos === this.jointValue[0]) return didUpdate;\n\n                if (!this.ignoreLimits) {\n\n                    pos = Math.min(this.limit.upper, pos);\n                    pos = Math.max(this.limit.lower, pos);\n\n                }\n\n                this.position.copy(this.origPosition);\n                _tempAxis.copy(this.axis).applyEuler(this.rotation);\n                this.position.addScaledVector(_tempAxis, pos);\n\n                if (this.jointValue[0] !== pos) {\n\n                    this.jointValue[0] = pos;\n                    this.matrixWorldNeedsUpdate = true;\n                    return true;\n\n                } else {\n\n                    return didUpdate;\n\n                }\n\n            }\n\n            case 'floating': {\n\n                // no-op if all values are identical to existing value or are null\n                if (this.jointValue.every((value, index) => values[index] === value || values[index] === null)) return didUpdate;\n                // Floating joints have six degrees of freedom: X, Y, Z, R, P, Y.\n                this.jointValue[0] = values[0] !== null ? values[0] : this.jointValue[0];\n                this.jointValue[1] = values[1] !== null ? values[1] : this.jointValue[1];\n                this.jointValue[2] = values[2] !== null ? values[2] : this.jointValue[2];\n                this.jointValue[3] = values[3] !== null ? values[3] : this.jointValue[3];\n                this.jointValue[4] = values[4] !== null ? values[4] : this.jointValue[4];\n                this.jointValue[5] = values[5] !== null ? values[5] : this.jointValue[5];\n\n                // Compose transform of joint origin and transform due to joint values\n                _tempOrigTransform.compose(this.origPosition, this.origQuaternion, _tempScale);\n                _tempQuat.setFromEuler(\n                    _tempEuler.set(\n                        this.jointValue[3],\n                        this.jointValue[4],\n                        this.jointValue[5],\n                        'XYZ',\n                    ),\n                );\n                _tempPosition.set(this.jointValue[0], this.jointValue[1], this.jointValue[2]);\n                _tempTransform.compose(_tempPosition, _tempQuat, _tempScale);\n\n                // Calcualte new transform\n                _tempOrigTransform.premultiply(_tempTransform);\n                this.position.setFromMatrixPosition(_tempOrigTransform);\n                this.rotation.setFromRotationMatrix(_tempOrigTransform);\n\n                this.matrixWorldNeedsUpdate = true;\n                return true;\n            }\n\n            case 'planar': {\n\n                // no-op if all values are identical to existing value or are null\n                if (this.jointValue.every((value, index) => values[index] === value || values[index] === null)) return didUpdate;\n\n                this.jointValue[0] = values[0] !== null ? values[0] : this.jointValue[0];\n                this.jointValue[1] = values[1] !== null ? values[1] : this.jointValue[1];\n                this.jointValue[2] = values[2] !== null ? values[2] : this.jointValue[2];\n\n                // Compose transform of joint origin and transform due to joint values\n                _tempOrigTransform.compose(this.origPosition, this.origQuaternion, _tempScale);\n                _tempQuat.setFromAxisAngle(this.axis, this.jointValue[2]);\n                _tempPosition.set(this.jointValue[0], this.jointValue[1], 0.0);\n                _tempTransform.compose(_tempPosition, _tempQuat, _tempScale);\n\n                // Calculate new transform\n                _tempOrigTransform.premultiply(_tempTransform);\n                this.position.setFromMatrixPosition(_tempOrigTransform);\n                this.rotation.setFromRotationMatrix(_tempOrigTransform);\n\n                this.matrixWorldNeedsUpdate = true;\n                return true;\n            }\n\n        }\n\n        return didUpdate;\n\n    }\n\n}\n\nclass URDFMimicJoint extends URDFJoint {\n\n    constructor(...args) {\n\n        super(...args);\n        this.type = 'URDFMimicJoint';\n        this.mimicJoint = null;\n        this.offset = 0;\n        this.multiplier = 1;\n\n    }\n\n    updateFromMimickedJoint(...values) {\n\n        const modifiedValues = values.map(x => x * this.multiplier + this.offset);\n        return super.setJointValue(...modifiedValues);\n\n    }\n\n    /* Overrides */\n    copy(source, recursive) {\n\n        super.copy(source, recursive);\n\n        this.mimicJoint = source.mimicJoint;\n        this.offset = source.offset;\n        this.multiplier = source.multiplier;\n\n        return this;\n\n    }\n\n}\n\nclass URDFRobot extends URDFLink {\n\n    constructor(...args) {\n\n        super(...args);\n        this.isURDFRobot = true;\n        this.urdfNode = null;\n\n        this.urdfRobotNode = null;\n        this.robotName = null;\n\n        this.links = null;\n        this.joints = null;\n        this.colliders = null;\n        this.visual = null;\n        this.frames = null;\n\n    }\n\n    copy(source, recursive) {\n\n        super.copy(source, recursive);\n\n        this.urdfRobotNode = source.urdfRobotNode;\n        this.robotName = source.robotName;\n\n        this.links = {};\n        this.joints = {};\n        this.colliders = {};\n        this.visual = {};\n\n        this.traverse(c => {\n\n            if (c.isURDFJoint && c.urdfName in source.joints) {\n\n                this.joints[c.urdfName] = c;\n\n            }\n\n            if (c.isURDFLink && c.urdfName in source.links) {\n\n                this.links[c.urdfName] = c;\n\n            }\n\n            if (c.isURDFCollider && c.urdfName in source.colliders) {\n\n                this.colliders[c.urdfName] = c;\n\n            }\n\n            if (c.isURDFVisual && c.urdfName in source.visual) {\n\n                this.visual[c.urdfName] = c;\n\n            }\n\n        });\n\n        // Repair mimic joint references once we've re-accumulated all our joint data\n        for (const joint in this.joints) {\n            this.joints[joint].mimicJoints = this.joints[joint].mimicJoints.map((mimicJoint) => this.joints[mimicJoint.name]);\n        }\n\n        this.frames = {\n            ...this.colliders,\n            ...this.visual,\n            ...this.links,\n            ...this.joints,\n        };\n\n        return this;\n\n    }\n\n    getFrame(name) {\n\n        return this.frames[name];\n\n    }\n\n    setJointValue(jointName, ...angle) {\n\n        const joint = this.joints[jointName];\n        if (joint) {\n\n            return joint.setJointValue(...angle);\n\n        }\n\n        return false;\n    }\n\n    setJointValues(values) {\n\n        let didChange = false;\n        for (const name in values) {\n\n            const value = values[name];\n            if (Array.isArray(value)) {\n\n                didChange = this.setJointValue(name, ...value) || didChange;\n\n            } else {\n\n                didChange = this.setJointValue(name, value) || didChange;\n\n            }\n\n        }\n\n        return didChange;\n\n    }\n\n}\n\nexport { URDFRobot, URDFLink, URDFJoint, URDFMimicJoint, URDFVisual, URDFCollider };\n","import * as THREE from 'three';\nimport { STLLoader } from 'three/examples/jsm/loaders/STLLoader.js';\nimport { ColladaLoader } from 'three/examples/jsm/loaders/ColladaLoader.js';\nimport { URDFRobot, URDFJoint, URDFLink, URDFCollider, URDFVisual, URDFMimicJoint } from './URDFClasses.js';\n\n/*\nReference coordinate frames for THREE.js and ROS.\nBoth coordinate systems are right handed so the URDF is instantiated without\nframe transforms. The resulting model can be rotated to rectify the proper up,\nright, and forward directions\n\nTHREE.js\n   Y\n   |\n   |\n   .-----X\n ／\nZ\n\nROS URDf\n       Z\n       |   X\n       | ／\n Y-----.\n\n*/\n\nconst tempQuaternion = new THREE.Quaternion();\nconst tempEuler = new THREE.Euler();\n\n// take a vector \"x y z\" and process it into\n// an array [x, y, z]\nfunction processTuple(val) {\n\n    if (!val) return [0, 0, 0];\n    return val.trim().split(/\\s+/g).map(num => parseFloat(num));\n\n}\n\n// applies a rotation a threejs object in URDF order\nfunction applyRotation(obj, rpy, additive = false) {\n\n    // if additive is true the rotation is applied in\n    // addition to the existing rotation\n    if (!additive) obj.rotation.set(0, 0, 0);\n\n    tempEuler.set(rpy[0], rpy[1], rpy[2], 'ZYX');\n    tempQuaternion.setFromEuler(tempEuler);\n    tempQuaternion.multiply(obj.quaternion);\n    obj.quaternion.copy(tempQuaternion);\n\n}\n\n/* URDFLoader Class */\n// Loads and reads a URDF file into a THREEjs Object3D format\nexport default\nclass URDFLoader {\n\n    constructor(manager) {\n\n        this.manager = manager || THREE.DefaultLoadingManager;\n        this.loadMeshCb = this.defaultMeshLoader.bind(this);\n        this.parseVisual = true;\n        this.parseCollision = false;\n        this.packages = '';\n        this.workingPath = '';\n        this.fetchOptions = {};\n\n    }\n\n    /* Public API */\n    loadAsync(urdf) {\n\n        return new Promise((resolve, reject) => {\n\n            this.load(urdf, resolve, null, reject);\n\n        });\n\n    }\n\n    // urdf:    The path to the URDF within the package OR absolute\n    // onComplete:      Callback that is passed the model once loaded\n    load(urdf, onComplete, onProgress, onError) {\n\n        // Check if a full URI is specified before\n        // prepending the package info\n        const manager = this.manager;\n        const workingPath = THREE.LoaderUtils.extractUrlBase(urdf);\n        const urdfPath = this.manager.resolveURL(urdf);\n\n        manager.itemStart(urdfPath);\n\n        fetch(urdfPath, this.fetchOptions)\n            .then(res => {\n\n                if (res.ok) {\n\n                    if (onProgress) {\n\n                        onProgress(null);\n\n                    }\n                    return res.text();\n\n                } else {\n\n                    throw new Error(`URDFLoader: Failed to load url '${ urdfPath }' with error code ${ res.status } : ${ res.statusText }.`);\n\n                }\n\n            })\n            .then(data => {\n\n                const model = this.parse(data, this.workingPath || workingPath);\n                onComplete(model);\n                manager.itemEnd(urdfPath);\n\n            })\n            .catch(e => {\n\n                if (onError) {\n\n                    onError(e);\n\n                } else {\n\n                    console.error('URDFLoader: Error loading file.', e);\n\n                }\n                manager.itemError(urdfPath);\n                manager.itemEnd(urdfPath);\n\n            });\n\n    }\n\n    parse(content, workingPath = this.workingPath) {\n\n        const packages = this.packages;\n        const loadMeshCb = this.loadMeshCb;\n        const parseVisual = this.parseVisual;\n        const parseCollision = this.parseCollision;\n        const manager = this.manager;\n        const linkMap = {};\n        const jointMap = {};\n        const materialMap = {};\n\n        // Resolves the path of mesh files\n        function resolvePath(path) {\n\n            if (!/^package:\\/\\//.test(path)) {\n\n                return workingPath ? workingPath + path : path;\n\n            }\n\n            // Remove \"package://\" keyword and split meshPath at the first slash\n            const [targetPkg, relPath] = path.replace(/^package:\\/\\//, '').split(/\\/(.+)/);\n\n            if (typeof packages === 'string') {\n\n                // \"pkg\" is one single package\n                if (packages.endsWith(targetPkg)) {\n\n                    // \"pkg\" is the target package\n                    return packages + '/' + relPath;\n\n                } else {\n\n                    // Assume \"pkg\" is the target package's parent directory\n                    return packages + '/' + targetPkg + '/' + relPath;\n\n                }\n\n            } else if (packages instanceof Function) {\n\n                return packages(targetPkg) + '/' + relPath;\n\n            } else if (typeof packages === 'object') {\n\n                // \"pkg\" is a map of packages\n                if (targetPkg in packages) {\n\n                    return packages[targetPkg] + '/' + relPath;\n\n                } else {\n\n                    console.error(`URDFLoader : ${ targetPkg } not found in provided package list.`);\n                    return null;\n\n                }\n\n            }\n\n        }\n\n        // Process the URDF text format\n        function processUrdf(data) {\n\n            let children;\n            if (data instanceof Document) {\n\n                children = [ ...data.children ];\n\n            } else if (data instanceof Element) {\n\n                children = [ data ];\n\n            } else {\n\n                const parser = new DOMParser();\n                const urdf = parser.parseFromString(data, 'text/xml');\n                children = [ ...urdf.children ];\n\n            }\n\n            const robotNode = children.filter(c => c.nodeName === 'robot').pop();\n            return processRobot(robotNode);\n\n        }\n\n        // Process the <robot> node\n        function processRobot(robot) {\n\n            const robotNodes = [ ...robot.children ];\n            const links = robotNodes.filter(c => c.nodeName.toLowerCase() === 'link');\n            const joints = robotNodes.filter(c => c.nodeName.toLowerCase() === 'joint');\n            const materials = robotNodes.filter(c => c.nodeName.toLowerCase() === 'material');\n            const obj = new URDFRobot();\n\n            obj.robotName = robot.getAttribute('name');\n            obj.urdfRobotNode = robot;\n\n            // Create the <material> map\n            materials.forEach(m => {\n\n                const name = m.getAttribute('name');\n                materialMap[name] = processMaterial(m);\n\n            });\n\n            // Create the <link> map\n            const visualMap = {};\n            const colliderMap = {};\n            links.forEach(l => {\n\n                const name = l.getAttribute('name');\n                const isRoot = robot.querySelector(`child[link=\"${ name }\"]`) === null;\n                linkMap[name] = processLink(l, visualMap, colliderMap, isRoot ? obj : null);\n\n            });\n\n            // Create the <joint> map\n            joints.forEach(j => {\n\n                const name = j.getAttribute('name');\n                jointMap[name] = processJoint(j);\n\n            });\n\n            obj.joints = jointMap;\n            obj.links = linkMap;\n            obj.colliders = colliderMap;\n            obj.visual = visualMap;\n\n            // Link up mimic joints\n            const jointList = Object.values(jointMap);\n            jointList.forEach(j => {\n\n                if (j instanceof URDFMimicJoint) {\n\n                    jointMap[j.mimicJoint].mimicJoints.push(j);\n\n                }\n\n            });\n\n            // Detect infinite loops of mimic joints\n            jointList.forEach(j => {\n\n                const uniqueJoints = new Set();\n                const iterFunction = joint => {\n\n                    if (uniqueJoints.has(joint)) {\n\n                        throw new Error('URDFLoader: Detected an infinite loop of mimic joints.');\n\n                    }\n\n                    uniqueJoints.add(joint);\n                    joint.mimicJoints.forEach(j => {\n\n                        iterFunction(j);\n\n                    });\n\n                };\n\n                iterFunction(j);\n            });\n\n            obj.frames = {\n                ...colliderMap,\n                ...visualMap,\n                ...linkMap,\n                ...jointMap,\n            };\n\n            return obj;\n\n        }\n\n        // Process joint nodes and parent them\n        function processJoint(joint) {\n\n            const children = [ ...joint.children ];\n            const jointType = joint.getAttribute('type');\n\n            let obj;\n\n            const mimicTag = children.find(n => n.nodeName.toLowerCase() === 'mimic');\n            if (mimicTag) {\n\n                obj = new URDFMimicJoint();\n                obj.mimicJoint = mimicTag.getAttribute('joint');\n                obj.multiplier = parseFloat(mimicTag.getAttribute('multiplier') || 1.0);\n                obj.offset = parseFloat(mimicTag.getAttribute('offset') || 0.0);\n\n            } else {\n\n                obj = new URDFJoint();\n\n            }\n\n            obj.urdfNode = joint;\n            obj.name = joint.getAttribute('name');\n            obj.urdfName = obj.name;\n            obj.jointType = jointType;\n\n            let parent = null;\n            let child = null;\n            let xyz = [0, 0, 0];\n            let rpy = [0, 0, 0];\n\n            // Extract the attributes\n            children.forEach(n => {\n\n                const type = n.nodeName.toLowerCase();\n                if (type === 'origin') {\n\n                    xyz = processTuple(n.getAttribute('xyz'));\n                    rpy = processTuple(n.getAttribute('rpy'));\n\n                } else if (type === 'child') {\n\n                    child = linkMap[n.getAttribute('link')];\n\n                } else if (type === 'parent') {\n\n                    parent = linkMap[n.getAttribute('link')];\n\n                } else if (type === 'limit') {\n\n                    obj.limit.lower = parseFloat(n.getAttribute('lower') || obj.limit.lower);\n                    obj.limit.upper = parseFloat(n.getAttribute('upper') || obj.limit.upper);\n\n                }\n            });\n\n            // Join the links\n            parent.add(obj);\n            obj.add(child);\n            applyRotation(obj, rpy);\n            obj.position.set(xyz[0], xyz[1], xyz[2]);\n\n            // Set up the rotate function\n            const axisNode = children.filter(n => n.nodeName.toLowerCase() === 'axis')[0];\n\n            if (axisNode) {\n\n                const axisXYZ = axisNode.getAttribute('xyz').split(/\\s+/g).map(num => parseFloat(num));\n                obj.axis = new THREE.Vector3(axisXYZ[0], axisXYZ[1], axisXYZ[2]);\n                obj.axis.normalize();\n\n            }\n\n            return obj;\n\n        }\n\n        // Process the <link> nodes\n        function processLink(link, visualMap, colliderMap, target = null) {\n\n            if (target === null) {\n\n                target = new URDFLink();\n\n            }\n\n            const children = [ ...link.children ];\n            target.name = link.getAttribute('name');\n            target.urdfName = target.name;\n            target.urdfNode = link;\n\n            if (parseVisual) {\n\n                const visualNodes = children.filter(n => n.nodeName.toLowerCase() === 'visual');\n                visualNodes.forEach(vn => {\n\n                    const v = processLinkElement(vn, materialMap);\n                    target.add(v);\n\n                    if (vn.hasAttribute('name')) {\n\n                        const name = vn.getAttribute('name');\n                        v.name = name;\n                        v.urdfName = name;\n                        visualMap[name] = v;\n\n                    }\n\n                });\n\n            }\n\n            if (parseCollision) {\n\n                const collisionNodes = children.filter(n => n.nodeName.toLowerCase() === 'collision');\n                collisionNodes.forEach(cn => {\n\n                    const c = processLinkElement(cn);\n                    target.add(c);\n\n                    if (cn.hasAttribute('name')) {\n\n                        const name = cn.getAttribute('name');\n                        c.name = name;\n                        c.urdfName = name;\n                        colliderMap[name] = c;\n\n                    }\n\n                });\n\n            }\n\n            return target;\n\n        }\n\n        function processMaterial(node) {\n\n            const matNodes = [ ...node.children ];\n            const material = new THREE.MeshPhongMaterial();\n\n            material.name = node.getAttribute('name') || '';\n            matNodes.forEach(n => {\n\n                const type = n.nodeName.toLowerCase();\n                if (type === 'color') {\n\n                    const rgba =\n                        n\n                            .getAttribute('rgba')\n                            .split(/\\s/g)\n                            .map(v => parseFloat(v));\n\n                    material.color.setRGB(rgba[0], rgba[1], rgba[2]);\n                    material.opacity = rgba[3];\n                    material.transparent = rgba[3] < 1;\n                    material.depthWrite = !material.transparent;\n\n                } else if (type === 'texture') {\n\n                    // The URDF spec does not require that the <texture/> tag include\n                    // a filename attribute so skip loading the texture if not provided.\n                    const filename = n.getAttribute('filename');\n                    if (filename) {\n\n                        const loader = new THREE.TextureLoader(manager);\n                        const filePath = resolvePath(filename);\n                        material.map = loader.load(filePath);\n                        material.map.colorSpace = THREE.SRGBColorSpace;\n\n                    }\n\n                }\n            });\n\n            return material;\n\n        }\n\n        // Process the visual and collision nodes into meshes\n        function processLinkElement(vn, materialMap = {}) {\n\n            const isCollisionNode = vn.nodeName.toLowerCase() === 'collision';\n            const children = [ ...vn.children ];\n            let material = null;\n\n            // get the material first\n            const materialNode = children.filter(n => n.nodeName.toLowerCase() === 'material')[0];\n            if (materialNode) {\n\n                const name = materialNode.getAttribute('name');\n                if (name && name in materialMap) {\n\n                    material = materialMap[name];\n\n                } else {\n\n                    material = processMaterial(materialNode);\n\n                }\n\n            } else {\n\n                material = new THREE.MeshPhongMaterial();\n\n            }\n\n            const group = isCollisionNode ? new URDFCollider() : new URDFVisual();\n            group.urdfNode = vn;\n\n            children.forEach(n => {\n\n                const type = n.nodeName.toLowerCase();\n                if (type === 'geometry') {\n\n                    const geoType = n.children[0].nodeName.toLowerCase();\n                    if (geoType === 'mesh') {\n\n                        const filename = n.children[0].getAttribute('filename');\n                        const filePath = resolvePath(filename);\n\n                        // file path is null if a package directory is not provided.\n                        if (filePath !== null) {\n\n                            const scaleAttr = n.children[0].getAttribute('scale');\n                            if (scaleAttr) {\n\n                                const scale = processTuple(scaleAttr);\n                                group.scale.set(scale[0], scale[1], scale[2]);\n\n                            }\n\n                            loadMeshCb(filePath, manager, (obj, err) => {\n\n                                if (err) {\n\n                                    console.error('URDFLoader: Error loading mesh.', err);\n\n                                } else if (obj) {\n\n                                    if (obj instanceof THREE.Mesh) {\n\n                                        obj.material = material;\n\n                                    }\n\n                                    // We don't expect non identity rotations or positions. In the case of\n                                    // COLLADA files the model might come in with a custom scale for unit\n                                    // conversion.\n                                    obj.position.set(0, 0, 0);\n                                    obj.quaternion.identity();\n                                    group.add(obj);\n\n                                }\n\n                            });\n\n                        }\n\n                    } else if (geoType === 'box') {\n\n                        const primitiveModel = new THREE.Mesh();\n                        primitiveModel.geometry = new THREE.BoxGeometry(1, 1, 1);\n                        primitiveModel.material = material;\n\n                        const size = processTuple(n.children[0].getAttribute('size'));\n                        primitiveModel.scale.set(size[0], size[1], size[2]);\n\n                        group.add(primitiveModel);\n\n                    } else if (geoType === 'sphere') {\n\n                        const primitiveModel = new THREE.Mesh();\n                        primitiveModel.geometry = new THREE.SphereGeometry(1, 30, 30);\n                        primitiveModel.material = material;\n\n                        const radius = parseFloat(n.children[0].getAttribute('radius')) || 0;\n                        primitiveModel.scale.set(radius, radius, radius);\n\n                        group.add(primitiveModel);\n\n                    } else if (geoType === 'cylinder') {\n\n                        const primitiveModel = new THREE.Mesh();\n                        primitiveModel.geometry = new THREE.CylinderGeometry(1, 1, 1, 30);\n                        primitiveModel.material = material;\n\n                        const radius = parseFloat(n.children[0].getAttribute('radius')) || 0;\n                        const length = parseFloat(n.children[0].getAttribute('length')) || 0;\n                        primitiveModel.scale.set(radius, length, radius);\n                        primitiveModel.rotation.set(Math.PI / 2, 0, 0);\n\n                        group.add(primitiveModel);\n\n                    }\n\n                } else if (type === 'origin') {\n\n                    const xyz = processTuple(n.getAttribute('xyz'));\n                    const rpy = processTuple(n.getAttribute('rpy'));\n\n                    group.position.set(xyz[0], xyz[1], xyz[2]);\n                    group.rotation.set(0, 0, 0);\n                    applyRotation(group, rpy);\n\n                }\n\n            });\n\n            return group;\n\n        }\n\n        return processUrdf(content);\n\n    }\n\n    // Default mesh loading function\n    defaultMeshLoader(path, manager, done) {\n\n        if (/\\.stl$/i.test(path)) {\n\n            const loader = new STLLoader(manager);\n            loader.load(path, geom => {\n                const mesh = new THREE.Mesh(geom, new THREE.MeshPhongMaterial());\n                done(mesh);\n            });\n\n        } else if (/\\.dae$/i.test(path)) {\n\n            const loader = new ColladaLoader(manager);\n            loader.load(path, dae => done(dae.scene));\n\n        } else {\n\n            console.warn(`URDFLoader: Could not load model at ${ path }.\\nNo loader available`);\n\n        }\n\n    }\n\n};\n","import React, { useEffect, useRef } from 'react';\r\nimport { useFrame } from '@react-three/fiber';\r\nimport URDFLoader from 'urdf-loader';\r\nimport { robotStateService } from '../../services/robotState';\r\nimport * as THREE from 'three';\r\n\r\ninterface RobotModelProps {\r\n  // Add any props needed for the model\r\n}\r\n\r\nconst RobotModel: React.FC<RobotModelProps> = () => {\r\n  const modelRef = useRef<THREE.Group>(null);\r\n  const robot = useRef<THREE.Object3D | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Initialize the URDF loader\r\n    const loader = new URDFLoader();\r\n    \r\n    // Set the package path to the directory containing the URDF file\r\n    loader.packages = {\r\n      '': '/models/urdf/' // This tells the loader where to find the meshes relative to the URDF file\r\n    };\r\n    \r\n    // Load the URDF file\r\n    loader.load(\r\n      '/models/urdf/armatron.urdf',\r\n      (loadedRobot: THREE.Object3D) => {\r\n        if (modelRef.current) {\r\n          robot.current = loadedRobot;\r\n          modelRef.current.add(loadedRobot);\r\n          \r\n          // Set initial position and scale\r\n          loadedRobot.position.set(0, 0, 0);\r\n          loadedRobot.scale.set(1, 1, 1);\r\n          \r\n          // Log the available joints for debugging\r\n          console.log('Available joints:', Object.keys((loadedRobot as any).joints));\r\n        }\r\n      },\r\n      (progress: ProgressEvent) => {\r\n        console.log('Loading progress:', progress);\r\n      },\r\n      (error: Error) => {\r\n        console.error('Error loading URDF:', error);\r\n      }\r\n    );\r\n\r\n    const updateModel = () => {\r\n      if (!robot.current) return;\r\n      \r\n        // Get the current robot state\r\n        const state = robotStateService.getState();\r\n        \r\n        // Update joint angles based on the state\r\n        Object.entries(state.motors).forEach(([motorName, motorState]) => {\r\n          // Grab angle in radians\r\n          const angle = motorState.multiTurnRad_Mapped ?? 0;\r\n          \r\n          // Map motor names to joint names (J1 through J7)\r\n          const jointName = `J${motorName}`;\r\n          \r\n          // Use the URDFRobot's setJointValue method\r\n          const urdfRobot = robot.current as any;\r\n          if (urdfRobot.setJointValue) {\r\n            // Handle special cases for J6 and J7\r\n            if (jointName === 'J6') {\r\n              // J6 is pitch\r\n              const success = urdfRobot.setJointValue(jointName, state.diff_pitch_rad ?? 0);\r\n              if (!success) {\r\n                console.warn(`Failed to set joint ${jointName} to pitch angle ${state.diff_pitch_rad}!`);\r\n              }\r\n            } else if (jointName === 'J7') {\r\n              // J7 is roll\r\n              const success = urdfRobot.setJointValue(jointName, state.diff_roll_rad ?? 0);\r\n              if (!success) {\r\n                console.warn(`Failed to set joint ${jointName} to roll angle ${state.diff_roll_rad}!`);\r\n              }\r\n            } else {\r\n              // Handle all other joints normally\r\n              const success = urdfRobot.setJointValue(jointName, angle);\r\n              if (!success) {\r\n                console.warn(`Failed to set joint ${jointName} to angle ${angle}!`);\r\n              }\r\n            }\r\n          } else {\r\n            console.warn('URDFRobot does not have setJointValue method');\r\n          }\r\n        });\r\n    };\r\n\r\n    robotStateService.on('update', updateModel);\r\n    return () => {\r\n      robotStateService.off('update', updateModel);\r\n    };\r\n  }, []);\r\n\r\n  useFrame(() => {\r\n    // Smooth animations or continuous updates can go here\r\n  });\r\n\r\n  return (\r\n    <group ref={modelRef}>\r\n      {/* The URDF loader will handle all the robot parts */}\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default RobotModel; ","import React, { useEffect, useRef } from 'react';\r\nimport { useFrame } from '@react-three/fiber';\r\nimport URDFLoader from 'urdf-loader';\r\nimport { robotStateService } from '../../services/robotState';\r\nimport * as THREE from 'three';\r\n\r\ninterface DigitalTwinModelProps {\r\n  opacity?: number;\r\n}\r\n\r\nconst DigitalTwinModel: React.FC<DigitalTwinModelProps> = ({ opacity = 0.5 }) => {\r\n  const modelRef = useRef<THREE.Group>(null);\r\n  const robot = useRef<THREE.Object3D | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Initialize the URDF loader\r\n    const loader = new URDFLoader();\r\n    \r\n    // Set the package path to the directory containing the URDF file\r\n    loader.packages = {\r\n      '': '/models/urdf/' // This tells the loader where to find the meshes relative to the URDF file\r\n    };\r\n    \r\n    // Load the URDF file\r\n    loader.load(\r\n      '/models/urdf/armatron.urdf',\r\n      (loadedRobot: THREE.Object3D) => {\r\n        if (modelRef.current) {\r\n          robot.current = loadedRobot;\r\n          modelRef.current.add(loadedRobot);\r\n          \r\n          // Set initial position and scale\r\n          loadedRobot.position.set(0, 0, 0);\r\n          loadedRobot.scale.set(1, 1, 1);\r\n          \r\n          // Apply transparency to all materials\r\n          loadedRobot.traverse((child) => {\r\n            if (child instanceof THREE.Mesh) {\r\n              if (child.material instanceof THREE.Material) {\r\n                child.material.transparent = true;\r\n                child.material.opacity = opacity;\r\n              }\r\n            }\r\n          });\r\n          \r\n          // Log the available joints for debugging\r\n          console.log('Digital Twin - Available joints:', Object.keys((loadedRobot as any).joints));\r\n        }\r\n      },\r\n      (progress: ProgressEvent) => {\r\n        console.log('Digital Twin - Loading progress:', progress);\r\n      },\r\n      (error: Error) => {\r\n        console.error('Digital Twin - Error loading URDF:', error);\r\n      }\r\n    );\r\n\r\n    const updateModel = () => {\r\n      if (!robot.current) return;\r\n      \r\n      // Get the current robot state\r\n      const state = robotStateService.getState();\r\n      \r\n      // Only update if twin is active and exists\r\n      if (!state.twin?.active) return;\r\n      \r\n      // Update joint angles based on the twin state\r\n      state.twin.joint_angles_deg.forEach((angle, index) => {\r\n        // Map motor names to joint names (J1 through J7)\r\n        const jointName = `J${index + 1}`;\r\n        \r\n        // Use the URDFRobot's setJointValue method\r\n        const urdfRobot = robot.current as any;\r\n        if (urdfRobot.setJointValue) {\r\n          // Handle special cases for J6 and J7\r\n          if (jointName === 'J6') {\r\n            \r\n            // J6 is pitch - use the second to last element of the array\r\n            const success = urdfRobot.setJointValue(jointName, state.twin?.joint_angles_deg[5] ?? 0);\r\n            if (!success) {\r\n              console.warn(`Digital Twin - Failed to set joint ${jointName} to pitch angle ${state.twin?.joint_angles_deg[5] ?? 0}!`);\r\n            }\r\n          } else if (jointName === 'J7') {\r\n            // J7 is roll - use the last element of the array\r\n            const success = urdfRobot.setJointValue(jointName, state.twin?.joint_angles_deg[6] ?? 0);\r\n            if (!success) {\r\n              console.warn(`Digital Twin - Failed to set joint ${jointName} to roll angle ${state.twin?.joint_angles_deg[6] ?? 0}!`);\r\n            }\r\n          } else if (index < 5) {\r\n            // Handle all other joints normally (only first 5 joints)\r\n            const success = urdfRobot.setJointValue(jointName, angle * (Math.PI / 180)); // Convert degrees to radians\r\n            if (!success) {\r\n              console.warn(`Digital Twin - Failed to set joint ${jointName} to angle ${angle}!`);\r\n            }\r\n          }\r\n        } else {\r\n          console.warn('Digital Twin - URDFRobot does not have setJointValue method');\r\n        }\r\n      });\r\n    };\r\n\r\n    robotStateService.on('update', updateModel);\r\n    return () => {\r\n      robotStateService.off('update', updateModel);\r\n    };\r\n  }, [opacity]);\r\n\r\n  useFrame(() => {\r\n    // Smooth animations or continuous updates can go here\r\n  });\r\n\r\n  return (\r\n    <group ref={modelRef}>\r\n      {/* The URDF loader will handle all the robot parts */}\r\n    </group>\r\n  );\r\n};\r\n\r\nexport default DigitalTwinModel; ","import React, { Suspense } from 'react';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport { OrbitControls, Grid } from '@react-three/drei';\r\nimport { Paper } from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport * as THREE from 'three';\r\nimport RobotModel from './RobotModel';\r\nimport DigitalTwinModel from './DigitalTwinModel';\r\n\r\ninterface RobotViewerProps {\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nconst RobotViewer: React.FC<RobotViewerProps> = ({ style }) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Paper \r\n      elevation={3} \r\n      sx={{ \r\n        width: '100%', \r\n        height: '100%', \r\n        minHeight: '400px',\r\n        backgroundColor: theme.palette.background.paper,\r\n        ...style \r\n      }}\r\n    >\r\n      <Canvas\r\n        orthographic\r\n        camera={{\r\n          position: [5, 0, 5],\r\n          zoom: 400,\r\n          near: 0.1,\r\n          far: 1000,\r\n          up: [0, 0, 1]\r\n        }}\r\n        style={{ width: '100%', height: '100%' }}\r\n        gl={{ antialias: true }}\r\n      >\r\n        <color attach=\"background\" args={['#263238']} />\r\n        <Suspense fallback={null}>\r\n          <ambientLight intensity={0.3} />\r\n          <directionalLight\r\n            position={[5, 30, 5]}\r\n            intensity={1}\r\n            castShadow\r\n            shadow-mapSize={[1024, 1024]}\r\n          />\r\n          <pointLight \r\n            position={[1, 0, 2.2]} \r\n            intensity={0.8} \r\n            distance={100}\r\n            decay={2}\r\n          />\r\n          <OrbitControls \r\n            makeDefault\r\n            enableDamping\r\n            dampingFactor={0.05}\r\n            rotateSpeed={0.5}\r\n            target={[0, 0, 0]}\r\n            minPolarAngle={0}\r\n            maxPolarAngle={Math.PI / 2}\r\n            up={[0, 0, 1]}\r\n          />\r\n          <RobotModel />\r\n          <DigitalTwinModel opacity={0.5} />\r\n          <Grid\r\n            args={[0.6096, 0.9144]}\r\n            position={[0.2032, 0, 0]}\r\n            rotation={[Math.PI / 2, 0, 0]}\r\n            cellSize={0.0254} // 1 inch\r\n            cellThickness={0.5}\r\n            cellColor=\"#6f6f6f\"\r\n            sectionSize={0.1524} // 6 inches\r\n            sectionThickness={1}\r\n            sectionColor=\"#9d4b4b\"\r\n            fadeDistance={30}\r\n            fadeStrength={1}\r\n            followCamera={false}\r\n            infiniteGrid={false}\r\n          />\r\n          <primitive object={new THREE.AxesHelper(0.33)} />\r\n        </Suspense>\r\n      </Canvas>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default RobotViewer; ","\"use strict\";\n'use client';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return _utils.createSvgIcon;\n  }\n});\nvar _utils = require(\"@mui/material/utils\");","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2m0 16H8V7h11z\"\n}), 'ContentCopy');","import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Paper, \r\n  Typography, \r\n  TextField, \r\n  Button, \r\n  List, \r\n  ListItem, \r\n  ListItemText, \r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  Grid,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions\r\n} from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport { socketService } from '../services/socket';\r\n\r\ninterface SavedPosition {\r\n  id: string;\r\n  name: string;\r\n  angles: number[];\r\n}\r\n\r\ninterface JointPositionControlProps {\r\n  // Add any props if needed in the future\r\n}\r\n\r\nconst JointPositionControl: React.FC<JointPositionControlProps> = () => {\r\n  const [jointAngles, setJointAngles] = useState<number[]>([0, 0, 0, 0, 0, 0, 0]);\r\n  const [positionName, setPositionName] = useState<string>('');\r\n  const [savedPositions, setSavedPositions] = useState<SavedPosition[]>([]);\r\n  const [editingPosition, setEditingPosition] = useState<SavedPosition | null>(null);\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Load saved positions from server\r\n    fetch('/api/positions')\r\n      .then(res => res.json())\r\n      .then((data: SavedPosition[]) => setSavedPositions(data))\r\n      .catch(err => console.error('Error loading positions:', err));\r\n  }, []);\r\n\r\n  const handleAngleChange = (index: number, value: string): void => {\r\n    const newAngles = [...jointAngles];\r\n    newAngles[index] = parseFloat(value) || 0;\r\n    setJointAngles(newAngles);\r\n  };\r\n\r\n  const generateUniqueName = (baseName: string): string => {\r\n    let newName = baseName;\r\n    let counter = 1;\r\n    while (savedPositions.some(pos => pos.name === newName)) {\r\n      newName = `${baseName}_${counter}`;\r\n      counter++;\r\n    }\r\n    return newName;\r\n  };\r\n\r\n  const handleSavePosition = (): void => {\r\n    if (!positionName.trim()) return;\r\n\r\n    const newPosition: SavedPosition = {\r\n      id: Date.now().toString(),\r\n      name: positionName,\r\n      angles: [...jointAngles]\r\n    };\r\n\r\n    // Save to server\r\n    fetch('/api/positions', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(newPosition),\r\n    })\r\n      .then(res => res.json())\r\n      .then((savedPosition: SavedPosition) => {\r\n        setSavedPositions(prev => [...prev, savedPosition]);\r\n        setPositionName('');\r\n      })\r\n      .catch(err => console.error('Error saving position:', err));\r\n  };\r\n\r\n  const handleDeletePosition = (id: string): void => {\r\n    fetch(`/api/positions/${id}`, {\r\n      method: 'DELETE',\r\n    })\r\n      .then(() => {\r\n        setSavedPositions(prev => prev.filter(pos => pos.id !== id));\r\n      })\r\n      .catch(err => console.error('Error deleting position:', err));\r\n  };\r\n\r\n  const handleRunPosition = (angles: number[]): void => {\r\n    socketService.sendCommand({\r\n      cmd: 'moveToJointPositionRuckig',\r\n      angles: angles\r\n    });\r\n  };\r\n\r\n  const handleEditPosition = (position: SavedPosition): void => {\r\n    setEditingPosition(position);\r\n    setEditDialogOpen(true);\r\n  };\r\n\r\n  const handleSaveEdit = (): void => {\r\n    if (!editingPosition) return;\r\n\r\n    fetch(`/api/positions/${editingPosition.id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(editingPosition),\r\n    })\r\n      .then(res => res.json())\r\n      .then((updatedPosition: SavedPosition) => {\r\n        setSavedPositions(prev => \r\n          prev.map(pos => pos.id === updatedPosition.id ? updatedPosition : pos)\r\n        );\r\n        setEditDialogOpen(false);\r\n        setEditingPosition(null);\r\n      })\r\n      .catch(err => console.error('Error updating position:', err));\r\n  };\r\n\r\n  const handleDuplicatePosition = (position: SavedPosition): void => {\r\n    const newPosition: SavedPosition = {\r\n      id: Date.now().toString(),\r\n      name: generateUniqueName(position.name),\r\n      angles: [...position.angles]\r\n    };\r\n\r\n    fetch('/api/positions', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(newPosition),\r\n    })\r\n      .then(res => res.json())\r\n      .then((savedPosition: SavedPosition) => {\r\n        setSavedPositions(prev => [...prev, savedPosition]);\r\n      })\r\n      .catch(err => console.error('Error duplicating position:', err));\r\n  };\r\n\r\n  const jointLabels: string[] = [\r\n    'Joint 1',\r\n    'Joint 2',\r\n    'Joint 3',\r\n    'Joint 4',\r\n    'Joint 5',\r\n    'Wrist Roll',\r\n    'Wrist Pitch'\r\n  ];\r\n\r\n  return (\r\n    <Paper sx={{ p: 2, height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Joint Position Control\r\n      </Typography>\r\n\r\n      <Grid container spacing={1} sx={{ mb: 2 }}>\r\n        {jointLabels.map((label, index) => (\r\n          <Grid item xs={12} sm={6} md={4} lg={3} key={index}>\r\n            <TextField\r\n              fullWidth\r\n              label={label}\r\n              type=\"number\"\r\n              value={jointAngles[index]}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleAngleChange(index, e.target.value)}\r\n              size=\"small\"\r\n              inputProps={{ step: \"0.1\" }}\r\n            />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      <Grid container spacing={2} sx={{ mb: 2 }}>\r\n        <Grid item xs={8}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Position Name\"\r\n            value={positionName}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setPositionName(e.target.value)}\r\n            size=\"small\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            onClick={handleSavePosition}\r\n            disabled={!positionName.trim()}\r\n          >\r\n            Save Position\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        Saved Positions\r\n      </Typography>\r\n      <List dense sx={{ flexGrow: 1, overflow: 'auto' }}>\r\n        {savedPositions.map((position) => (\r\n          <ListItem key={position.id}>\r\n            <ListItemText\r\n              primary={position.name}\r\n              secondary={`Angles: ${position.angles.map(a => a.toFixed(1)).join(', ')}`}\r\n            />\r\n            <ListItemSecondaryAction>\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"run\"\r\n                onClick={() => handleRunPosition(position.angles)}\r\n                sx={{ mr: 1 }}\r\n              >\r\n                <PlayArrowIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"edit\"\r\n                onClick={() => handleEditPosition(position)}\r\n                sx={{ mr: 1 }}\r\n              >\r\n                <EditIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"duplicate\"\r\n                onClick={() => handleDuplicatePosition(position)}\r\n                sx={{ mr: 1 }}\r\n              >\r\n                <ContentCopyIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"delete\"\r\n                onClick={() => handleDeletePosition(position.id)}\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n\r\n      <Dialog open={editDialogOpen} onClose={() => setEditDialogOpen(false)}>\r\n        <DialogTitle>Edit Position</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Position Name\"\r\n            fullWidth\r\n            value={editingPosition?.name || ''}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => \r\n              setEditingPosition(prev => prev ? {...prev, name: e.target.value} : null)\r\n            }\r\n          />\r\n          <Grid container spacing={1} sx={{ mt: 2 }}>\r\n            {jointLabels.map((label, index) => (\r\n              <Grid item xs={12} sm={6} md={4} lg={3} key={index}>\r\n                <TextField\r\n                  fullWidth\r\n                  label={label}\r\n                  type=\"number\"\r\n                  value={editingPosition?.angles[index] || 0}\r\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                    const newAngles = [...(editingPosition?.angles || [])];\r\n                    newAngles[index] = parseFloat(e.target.value) || 0;\r\n                    setEditingPosition(prev => prev ? {...prev, angles: newAngles} : null);\r\n                  }}\r\n                  size=\"small\"\r\n                  inputProps={{ step: \"0.1\" }}\r\n                />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setEditDialogOpen(false)}>Cancel</Button>\r\n          <Button onClick={handleSaveEdit} variant=\"contained\">Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default JointPositionControl; ","import React, { useEffect, useState, useRef } from 'react';\r\nimport { Paper, Typography } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { socketService } from '../services/socket';\r\n\r\nconst LogContainer = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  height: '300px',\r\n  overflow: 'auto',\r\n  backgroundColor: theme.palette.background.default,\r\n  fontFamily: 'monospace',\r\n  whiteSpace: 'pre-wrap',\r\n  wordBreak: 'break-word',\r\n}));\r\n\r\nconst LogLine = styled('div')(({ theme }) => ({\r\n  marginBottom: theme.spacing(0.5),\r\n  fontSize: '0.875rem',\r\n  lineHeight: 1.5,\r\n}));\r\n\r\nconst ServiceLogsViewer: React.FC = () => {\r\n  const [logs, setLogs] = useState<string[]>([]);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [connected, setConnected] = useState(false);\r\n  const logContainerRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    // Ensure socket is connected\r\n    if (!socketService.isConnected()) {\r\n      socketService.connect();\r\n    }\r\n\r\n    const handleConnect = () => {\r\n      console.log('Socket connected, subscribing to logs');\r\n      setConnected(true);\r\n      socketService.emit('subscribeToLogs');\r\n    };\r\n\r\n    const handleDisconnect = () => {\r\n      console.log('Socket disconnected');\r\n      setConnected(false);\r\n    };\r\n\r\n    const handleLogs = (data: { logs: string[] }) => {\r\n      console.log('Received logs:', data.logs);\r\n      setLogs(prevLogs => [...prevLogs, ...data.logs].slice(-1000)); // Keep last 1000 lines\r\n      setError(null);\r\n    };\r\n\r\n    const handleError = (err: Error) => {\r\n      console.error('Log error:', err);\r\n      setError(err.message);\r\n    };\r\n\r\n    socketService.on('connect', handleConnect);\r\n    socketService.on('disconnect', handleDisconnect);\r\n    socketService.on('serviceLogs', handleLogs);\r\n    socketService.on('error', handleError);\r\n\r\n    // Initial subscription if already connected\r\n    if (socketService.isConnected()) {\r\n      handleConnect();\r\n    }\r\n\r\n    return () => {\r\n      socketService.off('connect', handleConnect);\r\n      socketService.off('disconnect', handleDisconnect);\r\n      socketService.off('serviceLogs', handleLogs);\r\n      socketService.off('error', handleError);\r\n      socketService.emit('unsubscribeFromLogs');\r\n    };\r\n  }, []);\r\n\r\n  // Auto-scroll to bottom when new logs arrive\r\n  useEffect(() => {\r\n    if (logContainerRef.current) {\r\n      logContainerRef.current.scrollTop = logContainerRef.current.scrollHeight;\r\n    }\r\n  }, [logs]);\r\n\r\n  return (\r\n    <Paper sx={{ p: 2, mt: 2 }}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Service Logs {!connected && '(Connecting...)'}\r\n      </Typography>\r\n      {error ? (\r\n        <Typography color=\"error\">{error}</Typography>\r\n      ) : (\r\n        <LogContainer ref={logContainerRef}>\r\n          {logs.length === 0 && connected ? (\r\n            <LogLine>Waiting for logs...</LogLine>\r\n          ) : (\r\n            logs.map((line, index) => (\r\n              <LogLine key={`${index}-${line}`}>{line}</LogLine>\r\n            ))\r\n          )}\r\n        </LogContainer>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ServiceLogsViewer; ","import React, { useEffect, useState } from 'react';\r\nimport { Grid, Paper, Typography, List, ListItem, ListItemText, Chip, TextField, Button } from '@mui/material';\r\nimport RobotViewer from '../components/RobotViewer';\r\nimport JointPositionControl from '../components/JointPositionControl';\r\nimport ServiceLogsViewer from '../components/ServiceLogsViewer';\r\nimport { robotStateService } from '../services/robotState';\r\nimport { socketService } from '../services/socket';\r\nimport { motorControlService } from '../services/motorControl';\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// Styled emergency stop button\r\nconst EmergencyButton = styled(Button)(({ theme }) => ({\r\n  backgroundColor: theme.palette.error.main,\r\n  color: theme.palette.error.contrastText,\r\n  '&:hover': {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  marginTop: theme.spacing(2),\r\n}));\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const [state, setState] = useState(robotStateService.getState());\r\n  const [targetRoll, setTargetRoll] = useState(0);\r\n  const [targetPitch, setTargetPitch] = useState(0);\r\n  const [maxDiffMotorSpeed, setMaxDiffMotorSpeed] = useState(60); // Default to 100 deg/s\r\n\r\n  useEffect(() => {\r\n    const updateState = () => {\r\n      setState(robotStateService.getState());\r\n    };\r\n\r\n    robotStateService.on('update', updateState);\r\n    return () => {\r\n      robotStateService.off('update', updateState);\r\n    };\r\n  }, []);\r\n\r\n  const handleDifferentialMove = () => {\r\n    // Convert degrees to radians for the command\r\n    const rollRad = targetRoll * (Math.PI / 180);\r\n    const pitchRad = targetPitch * (Math.PI / 180);\r\n\r\n    socketService.sendCommand({\r\n      cmd: 'setDifferentialAngles',\r\n      roll: rollRad,\r\n      pitch: pitchRad,\r\n      maxSpeed: maxDiffMotorSpeed\r\n    });\r\n  };\r\n\r\n  const handleEmergencyStop = () => {\r\n    motorControlService.emergencyStop();\r\n  };\r\n\r\n  const formatMotorState = (motorId: string) => {\r\n    const motor = state.motors[motorId];\r\n    if (!motor) return 'Unknown';\r\n    const motorNum = parseInt(motorId);\r\n    const position = (motorNum >= 6) ? \r\n      (motor.multiTurnRaw?.toFixed(2) ?? '-1') :\r\n      (motor.multiTurnDeg_Mapped?.toFixed(2) ?? '-1');\r\n    return `Position: ${position}° | Speed: ${motor.speedDeg_s.toFixed(2)}°/s | Temp: ${motor.temp}°C`;\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n      <Grid container spacing={3}>\r\n        {/* Left Column - Robot Status */}\r\n        <Grid item xs={12} md={4}>\r\n          <Paper sx={{ p: 2, height: '100%' }}>\r\n            <Paper sx={{ p: 2, mb: 2, backgroundColor: 'transparent', boxShadow: 'none' }}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Robot Status\r\n              </Typography>\r\n              <div style={{ display: 'flex', alignItems: 'center', gap: 8 }}>\r\n                {state.connected ? (\r\n                  <Chip \r\n                    label=\"Connected\"\r\n                    color=\"success\"\r\n                    size=\"small\"\r\n                  />\r\n                ) : (\r\n                  <Chip \r\n                    label=\"Disconnected\"\r\n                    color=\"error\"\r\n                    size=\"small\"\r\n                  />\r\n                )}\r\n                <Typography variant=\"caption\" color=\"text.secondary\">\r\n                  Last Update: {new Date(state.lastUpdate).toLocaleTimeString()}\r\n                </Typography>\r\n              </div>\r\n            </Paper>\r\n\r\n            <Paper sx={{ p: 2, mb: 2 }}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Wrist Control\r\n              </Typography>\r\n              <Paper sx={{ mb: 2 }}>\r\n                <Typography variant=\"body2\">\r\n                  Current Roll: {state.diff_roll_deg?.toFixed(2)}°\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  Current Pitch: {state.diff_pitch_deg?.toFixed(2)}°\r\n                </Typography>\r\n              </Paper>\r\n              <Paper sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n                <TextField\r\n                  label=\"Target Roll (deg)\"\r\n                  type=\"number\"\r\n                  value={targetRoll}\r\n                  onChange={(e) => setTargetRoll(parseFloat(e.target.value) || 0)}\r\n                  size=\"small\"\r\n                  inputProps={{ step: \"any\" }}\r\n                />\r\n                <TextField\r\n                  label=\"Target Pitch (deg)\"\r\n                  type=\"number\"\r\n                  value={targetPitch}\r\n                  onChange={(e) => setTargetPitch(parseFloat(e.target.value) || 0)}\r\n                  size=\"small\"\r\n                  inputProps={{ step: \"any\" }}\r\n                />\r\n                <TextField\r\n                  label=\"Max Motor Speed (deg/s)\"\r\n                  type=\"number\"\r\n                  value={maxDiffMotorSpeed}\r\n                  onChange={(e) => setMaxDiffMotorSpeed(parseFloat(e.target.value) || 0)}\r\n                  size=\"small\"\r\n                  inputProps={{ step: \"any\" }}\r\n                />\r\n                <Button \r\n                  variant=\"contained\" \r\n                  onClick={handleDifferentialMove}\r\n                  disabled={!state.connected}\r\n                >\r\n                  Move Wrist\r\n                </Button>\r\n              </Paper>\r\n            </Paper>\r\n\r\n            <Paper sx={{ p: 2, mb: 2 }}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Emergency Stop\r\n              </Typography>\r\n              <EmergencyButton\r\n                variant=\"contained\"\r\n                onClick={handleEmergencyStop}\r\n                disabled={!state.connected}\r\n                fullWidth\r\n              >\r\n                EMERGENCY STOP\r\n              </EmergencyButton>\r\n            </Paper>\r\n\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Motor States\r\n            </Typography>\r\n            <List dense>\r\n              {Object.keys(state.motors).map((motorId) => (\r\n                <ListItem key={motorId}>\r\n                  <ListItemText\r\n                    primary={`Motor ${motorId}`}\r\n                    secondary={formatMotorState(motorId)}\r\n                    primaryTypographyProps={{ variant: 'body2' }}\r\n                    secondaryTypographyProps={{ variant: 'caption' }}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        {/* Middle Column - Joint Position Control */}\r\n        <Grid item xs={12} md={4}>\r\n          <JointPositionControl />\r\n        </Grid>\r\n\r\n        {/* Right Column - 3D Viewer */}\r\n        <Grid item xs={12} md={4}>\r\n          <Paper sx={{ p: 2, height: '600px' }}>\r\n            <RobotViewer />\r\n          </Paper>\r\n          <ServiceLogsViewer />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard; ","import React, { createContext, useContext, useState } from 'react';\r\nimport { ThemeProvider as MUIThemeProvider, createTheme } from '@mui/material';\r\n\r\ninterface ThemeContextType {\r\n  mode: 'light' | 'dark';\r\n  toggleTheme: () => void;\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextType>({\r\n  mode: 'dark',\r\n  toggleTheme: () => {},\r\n});\r\n\r\nexport const useTheme = () => useContext(ThemeContext);\r\n\r\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [mode, setMode] = useState<'light' | 'dark'>('dark');\r\n\r\n  const toggleTheme = () => {\r\n    setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\r\n  };\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode,\r\n      background: {\r\n        default: mode === 'dark' ? '#121212' : '#f5f5f5',\r\n        paper: mode === 'dark' ? '#1e1e1e' : '#ffffff',\r\n      },\r\n    },\r\n    components: {\r\n      MuiPaper: {\r\n        styleOverrides: {\r\n          root: {\r\n            backgroundColor: mode === 'dark' ? '#1e1e1e' : '#ffffff',\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ mode, toggleTheme }}>\r\n      <MUIThemeProvider theme={theme}>\r\n        <div style={{ \r\n          backgroundColor: theme.palette.background.default,\r\n          minHeight: '100vh',\r\n          color: theme.palette.text.primary\r\n        }}>\r\n          {children}\r\n        </div>\r\n      </MUIThemeProvider>\r\n    </ThemeContext.Provider>\r\n  );\r\n}; ","import React, { useState } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Slider,\r\n  TextField,\r\n  Typography,\r\n  Paper,\r\n} from '@mui/material';\r\n\r\ninterface SettingsDialogProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  onSetModifier: (value: number) => void;\r\n}\r\n\r\nconst SettingsDialog: React.FC<SettingsDialogProps> = ({ open, onClose, onSetModifier }) => {\r\n  const [modifier, setModifier] = useState<number>(1);\r\n  const [textValue, setTextValue] = useState<string>('1');\r\n\r\n  const handleSliderChange = (_event: Event, newValue: number | number[]) => {\r\n    const value = newValue as number;\r\n    setModifier(value);\r\n    setTextValue(value.toString());\r\n  };\r\n\r\n  const handleTextChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = event.target.value;\r\n    setTextValue(value);\r\n    const numValue = parseFloat(value);\r\n    if (!isNaN(numValue) && numValue >= 0 && numValue <= 1) {\r\n      setModifier(numValue);\r\n    }\r\n  };\r\n\r\n  const handleSetModifier = () => {\r\n    onSetModifier(modifier);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle>Settings</DialogTitle>\r\n      <DialogContent>\r\n        <Paper sx={{ mt: 2 }}>\r\n          <Typography gutterBottom>Max Speed Modifier</Typography>\r\n          <Paper sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n            <Slider\r\n              value={modifier}\r\n              onChange={handleSliderChange}\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              sx={{ flex: 1 }}\r\n            />\r\n            <TextField\r\n              size=\"small\"\r\n              value={textValue}\r\n              onChange={handleTextChange}\r\n              inputProps={{\r\n                min: 0,\r\n                max: 1,\r\n                step: 0.01,\r\n                type: 'number',\r\n              }}\r\n              sx={{ width: '100px' }}\r\n            />\r\n          </Paper>\r\n        </Paper>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose}>Cancel</Button>\r\n        <Button onClick={handleSetModifier} variant=\"contained\">\r\n          Set Modifier\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SettingsDialog; ","import React from 'react';\nimport { AppBar, Toolbar, IconButton, Button, Menu, MenuItem, Paper, Divider } from '@mui/material';\nimport { Brightness4, Brightness7, PlayArrow, Stop, PrecisionManufacturing, PrecisionManufacturingOutlined, Settings } from '@mui/icons-material';\nimport { useTheme } from '../ThemeProvider';\nimport { Link } from 'react-router-dom';\nimport SettingsDialog from '../SettingsDialog';\nimport { socketService } from '../../services/socket';\n\nconst Layout: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const { mode, toggleTheme } = useTheme();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [settingsOpen, setSettingsOpen] = React.useState(false);\n\n  const handleMenuClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleSettingsClick = () => {\n    setSettingsOpen(true);\n  };\n\n  const handleSettingsClose = () => {\n    setSettingsOpen(false);\n  };\n\n  const handleSetModifier = (value: number) => {\n    socketService.sendCommand({\n      cmd: 'setMaxSpeedModifier',\n      modifier: value\n    });\n    setSettingsOpen(false);\n  };\n\n  const handleESTOP = () => {\n    socketService.sendCommand({\n      cmd: 'setESTOP'\n    });\n  };\n\n  const handleHoldPosition = () => {\n    socketService.sendCommand({\n      cmd: 'setHoldPosition'\n    });\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', minHeight: '100vh' }}>\n      <AppBar position=\"static\" component={Paper} elevation={0}>\n        <Toolbar>\n          {/* Left side - Logo and Navigation */}\n          <div style={{ display: 'flex', alignItems: 'center', flexGrow: 1 }}>\n            <Button \n              component={Link} \n              to=\"/\"\n              startIcon={<PrecisionManufacturing />}\n              sx={{ \n                color: 'inherit',\n                textTransform: 'none',\n                fontSize: '1.2rem',\n                fontWeight: 'bold',\n                mr: 2\n              }}\n            >\n              Armatron\n            </Button>\n            \n            <Button \n              color=\"inherit\" \n              component={Link} \n              to=\"/\"\n              sx={{ mr: 2 }}\n            >\n              Dashboard\n            </Button>\n            <Button \n              color=\"inherit\" \n              component={Link} \n              to=\"/joint-control\"\n              sx={{ mr: 2 }}\n            >\n              Joint Control\n            </Button>\n          </div>\n\n          {/* Right side - Controls and Theme */}\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <Button\n              color=\"inherit\"\n              startIcon={<PrecisionManufacturingOutlined />}\n              onClick={handleMenuClick}\n              sx={{ mr: 1 }}\n            >\n              Positions\n            </Button>\n            <Menu\n              anchorEl={anchorEl}\n              open={Boolean(anchorEl)}\n              onClose={handleMenuClose}\n            >\n              <MenuItem onClick={handleMenuClose}>Virtual Home</MenuItem>\n              <MenuItem onClick={handleMenuClose}>Gravity Safe #1</MenuItem>\n              <MenuItem onClick={handleMenuClose}>Example #3</MenuItem>\n            </Menu>\n            <Button\n              color=\"inherit\"\n              startIcon={<PlayArrow />}\n              onClick={handleHoldPosition}\n              sx={{ mr: 1 }}\n            >\n              HOLD\n            </Button>\n            <Button\n              color=\"error\"\n              startIcon={<Stop />}\n              onClick={handleESTOP}\n              sx={{ mr: 1 }}\n            >\n              ESTOP\n            </Button>\n            <Button\n              color=\"inherit\"\n              startIcon={<Settings />}\n              onClick={handleSettingsClick}\n              sx={{ mr: 1 }}\n            >\n              Settings\n            </Button>\n            <Divider orientation=\"vertical\" flexItem sx={{ mx: 1 }} />\n            <IconButton onClick={toggleTheme} color=\"inherit\">\n              {mode === 'dark' ? <Brightness7 /> : <Brightness4 />}\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <main style={{ flexGrow: 1, padding: '24px' }}>\n        {children}\n      </main>\n      <SettingsDialog \n        open={settingsOpen} \n        onClose={handleSettingsClose}\n        onSetModifier={handleSetModifier}\n      />\n    </div>\n  );\n};\n\nexport default Layout;\n","import React, { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { socketService } from './services/socket';\r\nimport JointControl from './pages/JointControl';\r\nimport Dashboard from './pages/Dashboard';\r\nimport Layout from './components/Layout';\r\nimport { ThemeProvider as CustomThemeProvider } from './components/ThemeProvider';\r\n\r\nconst AppContent: React.FC = () => {\r\n  useEffect(() => {\r\n    // Initialize socket connection when app starts\r\n    socketService.connect();\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      // Note: We don't disconnect here to maintain the connection across route changes\r\n      // The socket service will handle reconnection if needed\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Layout>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Dashboard />} />\r\n        <Route path=\"/joint-control\" element={<JointControl />} />\r\n      </Routes>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <CustomThemeProvider>\r\n      <Router>\r\n        <AppContent />\r\n      </Router>\r\n    </CustomThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.createRoot(document.getElementById('root')!).render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n)\r\n"],"names":["_SocketService","__publicField","_a","host","io","data","callback","error","command","cb","event","args","SocketService","socketService","_MotorControlService","motorID","value","angle","maxSpeed","angles","speeds","i","angKp","angKi","spdKp","spdKi","iqKp","iqKi","encoderValue","accelVal","MotorControlService","motorControlService","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","JointCard","jointId","motorState","setMotorState","useState","torqueValue","setTorqueValue","positionValue","setPositionValue","speedValue","setSpeedValue","chartData","setChartData","updateChart","newData","now","prev","newLabels","newPositionData","newSpeedData","newTorqueData","useEffect","unsubscribe","motor","jsxs","jsx","e","Line","SavedSetsList","savedSets","onDeleteSet","onUpdateSet","editingSet","setEditingSet","editedSet","setEditedSet","hasChanges","setHasChanges","handleEditStart","name","handleEditCancel","handleEditSave","handleValueChange","jointIndex","field","newSet","handleSetAngles","set","handleDelete","Fragment","MultiJointControl","setAngles","setSpeeds","setName","setSetName","setSavedSets","saved","handleAngleChange","index","newAngles","handleSpeedChange","newSpeeds","handleSendCommand","handleEmergencyStop","handleSaveSet","handleDeleteSet","newSets","handleUpdateSet","_RobotStateService","EventEmitter","shouldBeConnected","newState","key","err","motorId","twinState","RobotStateService","robotStateService","CurrentGainsContainer","styled","theme","GainsGrid","GainsRow","GainValue","GlobalControls","selectedJoint","setSelectedJoint","pidGains","setPidGains","setEncoderValue","setAccelVal","currentGains","setCurrentGains","handleStateUpdate","handlePidChange","handleReadPid","handleWritePidRAM","handleWritePidROM","handleReadEncoder","handleWriteEncoderZero","handleWriteCurrentPosZero","handleWriteAcceleration","handleReadAcceleration","joint","JointControl","Paper","STLLoader","Loader","manager","url","onLoad","onProgress","onError","scope","loader","FileLoader","text","isBinary","reader","face_size","n_faces","solid","off","matchDataViewAt","query","offset","il","parseBinary","faces","r","g","b","hasColors","colors","defaultR","defaultG","defaultB","alpha","dataOffset","faceLength","geometry","BufferGeometry","vertices","normals","color","Color","face","start","normalX","normalY","normalZ","packedColor","vertexstart","componentIdx","BufferAttribute","parseASCII","patternSolid","patternFace","patternName","faceCounter","patternFloat","patternVertex","patternNormal","groupNames","normal","Vector3","result","groupCount","startVertex","endVertex","vertexCountPerFace","normalCountPerFace","count","Float32BufferAttribute","ensureString","buffer","ensureBinary","array_buffer","binData","TGALoader","DataTextureLoader","tgaCheckHeader","header","TGA_TYPE_INDEXED","TGA_TYPE_RLE_INDEXED","TGA_TYPE_RGB","TGA_TYPE_GREY","TGA_TYPE_RLE_RGB","TGA_TYPE_RLE_GREY","TGA_TYPE_NO_DATA","tgaParse","use_rle","use_pal","pixel_data","palettes","pixel_size","pixel_total","c","shift","pixels","tgaGetImageData8bits","imageData","y_start","y_step","y_end","x_start","x_step","x_end","image","colormap","x","y","width","tgaGetImageData16bits","tgaGetImageData24bits","tgaGetImageData32bits","tgaGetImageDataGrey8bits","tgaGetImageDataGrey16bits","getTgaRGBA","height","palette","TGA_ORIGIN_MASK","TGA_ORIGIN_SHIFT","TGA_ORIGIN_UL","TGA_ORIGIN_BL","TGA_ORIGIN_UR","TGA_ORIGIN_BR","use_grey","content","LinearMipmapLinearFilter","ColladaLoader","path","LoaderUtils","getElementsByTagName","xml","array","childNodes","child","parseStrings","parts","l","parseFloats","parseInts","parseId","generateId","isEmpty","object","parseAsset","parseAssetUnit","parseAssetUpAxis","parseLibrary","libraryName","nodeName","parser","library","elements","buildLibrary","builder","getBuild","parseAnimation","hasChildren","id","parseSource","parseAnimationSampler","parseAnimationChannel","MathUtils","semantic","sid","arraySyntax","memberSyntax","indices","buildAnimation","tracks","channels","samplers","sources","target","channel","sampler","inputId","outputId","inputSource","outputSource","animation","buildAnimationChannel","createKeyframeTracks","getAnimation","node","object3D","getNode","transform","defaultMatrix","time","stride","j","jl","keyframes","prepareAnimationData","ascending","transformAnimationData","a","position","scale","quaternion","Quaternion","times","positionData","quaternionData","scaleData","keyframe","matrix","VectorKeyframeTrack","QuaternionKeyframeTrack","property","defaultValue","empty","createMissingKeyframes","next","getPrev","getNext","interpolate","parseAnimationClip","buildAnimationClip","duration","animations","animationTracks","AnimationClip","getAnimationClip","parseController","parseSkin","parseJoints","parseVertexWeights","buildController","build","buildSkin","vertexWeights","vcount","v","jointOffset","weightOffset","jointSource","inverseSource","weights","jointCount","vertexSkinData","skinIndex","weightId","skinWeight","descending","d","Matrix4","boneInverse","getController","parseImage","buildImage","getImage","parseEffect","parseEffectProfileCOMMON","parseEffectNewparam","parseEffectTechnique","parseEffectExtra","parseEffectSurface","parseEffectSampler","parseEffectParameters","parseEffectParameter","parseEffectParameterTexture","parseEffectParameterTextureExtra","parseEffectParameterTextureExtraTechnique","parseEffectExtraTechniqueBump","parseEffectExtraTechnique","buildEffect","getEffect","parseMaterial","getTextureLoader","extension","tgaLoader","textureLoader","buildMaterial","effect","technique","material","MeshPhongMaterial","MeshLambertMaterial","MeshBasicMaterial","getTexture","textureObject","colorSpace","surface","texture","extra","RepeatWrapping","ClampToEdgeWrapping","parameters","parameter","SRGBColorSpace","transparent","transparency","techniques","k","DoubleSide","FrontSide","Vector2","getMaterial","parseCamera","parseCameraOptics","parseCameraTechnique","parseCameraParameters","buildCamera","camera","PerspectiveCamera","ymag","xmag","aspectRatio","OrthographicCamera","getCamera","parseLight","parseLightTechnique","parseLightParameters","f","buildLight","light","DirectionalLight","PointLight","SpotLight","AmbientLight","getLight","parseGeometry","mesh","parseGeometryVertices","parseGeometryPrimitive","accessor","primitive","inputname","groupPrimitives","primitives","checkUVCoordinates","buildGeometry","groupedPrimitives","type","primitiveType","buildGeometryType","uv","uv1","materialKeys","p","inputs","vc","input","prevLength","buildGeometryData","source","isColor","pushVector","sourceStride","length","sourceArray","startIndex","tempColor","kl","getGeometry","parseKinematicsModel","parseKinematicsTechniqueCommon","buildKinematicsModel","getKinematicsModel","parseKinematicsJoint","parseKinematicsLink","parseKinematicsJointParameter","max","min","parseKinematicsAttachment","parseKinematicsTransform","parsePhysicsModel","parsePhysicsRigidBody","parsePhysicsTechniqueCommon","parseKinematicsScene","parseKinematicsBindJointAxis","param","tmpJointIndex","buildKinematicsScene","getKinematicsScene","setupKinematics","kinematicsModelId","kinematicsSceneId","visualSceneId","kinematicsModel","kinematicsScene","visualScene","getVisualScene","bindJointAxis","jointMap","axis","targetElement","collada","parentVisualElement","connect","visualElement","visualElementName","buildTransformList","m0","kinematics","jointData","transforms","vector","prepareNodes","element","parseNode","parseNodeInstance","hasNode","instances","instance","symbol","buildSkeleton","skeletons","joints","boneData","sortedBoneData","skeleton","root","buildBoneHierarchy","hasVisualScene","children","bones","boneInverses","Skeleton","buildNode","objects","nodes","instanceCameras","instanceControllers","instanceLights","instanceGeometries","instanceNodes","instanceCamera","controller","geometries","newObjects","buildObjects","instanceLight","Bone","Group","fallbackMaterial","resolveMaterialBinding","keys","instanceMaterials","materials","LineBasicMaterial","lineMaterial","skinning","LineSegments","SkinnedMesh","Mesh","parseVisualScene","buildVisualScene","group","parseScene","setupAnimations","clips","parserErrorToText","parserError","stack","Scene","errorElement","errorText","version","asset","TextureLoader","scene","_tempAxis","_tempEuler","Euler","_tempTransform","_tempOrigTransform","_tempQuat","_tempScale","_tempPosition","URDFBase","Object3D","recursive","URDFCollider","URDFVisual","URDFLink","URDFJoint","values","didUpdate","pos","URDFMimicJoint","modifiedValues","URDFRobot","mimicJoint","jointName","didChange","tempQuaternion","THREE.Quaternion","tempEuler","THREE.Euler","processTuple","val","num","applyRotation","obj","rpy","additive","URDFLoader","THREE.DefaultLoadingManager","urdf","resolve","reject","onComplete","workingPath","THREE.LoaderUtils","urdfPath","res","model","packages","loadMeshCb","parseVisual","parseCollision","linkMap","materialMap","resolvePath","targetPkg","relPath","processUrdf","robotNode","processRobot","robot","robotNodes","links","m","processMaterial","visualMap","colliderMap","isRoot","processLink","processJoint","jointList","uniqueJoints","iterFunction","jointType","mimicTag","n","parent","xyz","axisNode","axisXYZ","THREE.Vector3","link","vn","processLinkElement","cn","matNodes","THREE.MeshPhongMaterial","rgba","filename","THREE.TextureLoader","filePath","THREE.SRGBColorSpace","isCollisionNode","materialNode","geoType","scaleAttr","THREE.Mesh","primitiveModel","THREE.BoxGeometry","size","THREE.SphereGeometry","radius","THREE.CylinderGeometry","done","geom","dae","RobotModel","modelRef","useRef","loadedRobot","progress","updateModel","state","motorName","urdfRobot","useFrame","DigitalTwinModel","opacity","THREE.Material","_b","_c","_d","RobotViewer","style","useTheme","Canvas","Suspense","OrbitControls","Grid","THREE.AxesHelper","exports","_utils","require$$0","_interopRequireDefault","Delete","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","PlayArrow","Edit","ContentCopy","JointPositionControl","jointAngles","setJointAngles","positionName","setPositionName","savedPositions","setSavedPositions","editingPosition","setEditingPosition","editDialogOpen","setEditDialogOpen","generateUniqueName","baseName","newName","counter","handleSavePosition","newPosition","savedPosition","handleDeletePosition","handleRunPosition","handleEditPosition","handleSaveEdit","updatedPosition","handleDuplicatePosition","jointLabels","Typography","label","TextField","Button","List","ListItem","ListItemText","ListItemSecondaryAction","IconButton","PlayArrowIcon","EditIcon","ContentCopyIcon","DeleteIcon","Dialog","DialogTitle","DialogContent","DialogActions","LogContainer","LogLine","ServiceLogsViewer","logs","setLogs","setError","connected","setConnected","logContainerRef","handleConnect","handleDisconnect","handleLogs","prevLogs","handleError","line","EmergencyButton","Dashboard","setState","targetRoll","setTargetRoll","targetPitch","setTargetPitch","maxDiffMotorSpeed","setMaxDiffMotorSpeed","updateState","handleDifferentialMove","rollRad","pitchRad","formatMotorState","Chip","ThemeContext","createContext","useContext","ThemeProvider","mode","setMode","toggleTheme","prevMode","createTheme","MUIThemeProvider","SettingsDialog","open","onClose","onSetModifier","modifier","setModifier","textValue","setTextValue","handleSliderChange","_event","newValue","handleTextChange","numValue","handleSetModifier","Slider","Layout","anchorEl","setAnchorEl","React","settingsOpen","setSettingsOpen","handleMenuClick","handleMenuClose","handleSettingsClick","handleSettingsClose","handleESTOP","handleHoldPosition","AppBar","Toolbar","Link","PrecisionManufacturing","PrecisionManufacturingOutlined","Menu","MenuItem","Stop","Settings","Divider","Brightness7","Brightness4","AppContent","Routes","Route","App","CustomThemeProvider","Router","ReactDOM"],"mappings":"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","x_google_ignoreList":[8,9,10,11,12,16,17,18,19,20]}